const e={map:'[{"实现思路":["0.0"],"基础知识":["0.1"],"具体实现":["0.5","6.2"],"css文件":["0.11"],"总结":["0.12","7.14","14.11","16.6"],"html":["1.0"],"目录":["1.1","5.1","13.1","21.1","22.1","24.1","27.1"],"前言":["2.0","3.0","4.0","6.0","9.0","10.0","16.0","19.0","23.0","28.0"],"结尾":["2.9","3.7"],"短路运算":["3.1"],"三元运算符":["3.2"],"switch":["3.3"],"对象配置":["3.4"],"案例1":["3.5"],"案例2":["3.6"],"iframe通信的几种方式":["4.1"],"javascript":["5.0","13.0"],"前期构思":["6.1"],"最终效果":["6.6"],"语法":["8.1","8.5"],"参数":["8.2","8.6"],"返回值":["8.3","8.7"],"最小延迟时间":["8.9"],"超时延迟":["8.10"],"最大延时值":["8.11"],"错误示范":["8.14"],"改变过后的正确示范":["8.15"],"参考链接":["8.16","11.6"],"实现":["9.1"],"兼容性":["10.3"],"使用canvas画一个简单的矩形":["10.4"],"transform":["10.20"],"settransform":["10.21"],"resettransform":["10.22"],"参考":["10.29","23.28"],"第一题":["11.4"],"第二题":["11.5"],"设计模式的概念":["14.0"],"观察者者模式":["14.3"],"发布":["14.7"],"参考资料":["14.12","15.14","16.7","18.9"],"预览":["19.1"],"初始化":["19.2"],"目录结构":["19.3"],"首页":["19.4"],"配置文件":["19.5"],"部署":["19.6"],"引言":["20.0"],"typescript":["21.0","22.0"],"一":["23.1"],"二":["23.4"],"三":["23.15"],"四":["23.16"],"五":["23.17"],"六":["23.18"],"七":["23.19"],"八":["23.20"],"九":["23.21"],"十":["23.24"],"十一":["23.27"],"vue":["24.0"],"引入":["25.6"],"组件中使用":["25.7"],"gridlayout":["25.10"],"griditem":["25.11"],"结语":["25.15"],"演示地址":["26.1"],"学习前的准备":["26.2"],"webpack":["27.0"],"系列文章":["28.21","29.39"]},{"0":["10.8","10.22","11.4","25.1"],"1":["0.0","0.2","0.6","2.1","2.2","2.4","4.1","6.3","7.0","7.1","7.4","7.7","8.0","10.1","10.6","10.8","10.14","10.16","10.22","10.24","10.27","11.0","11.2","12.0","12.1","14.1","14.4","14.5","14.8","15.0","15.1","15.2","15.13","16.1","17.0","17.2","17.7","18.0","18.1","18.2","18.3","18.7","20.1","20.2","20.3","20.5","23.2","23.5","23.22","23.25","25.1","25.3","26.0","26.3","26.4","26.5","26.6","26.7","26.8","26.9","26.10","26.12","26.19","28.1","28.2","28.3","28.4","28.5","28.6","28.7","28.8","28.9","28.10","28.11","28.13","28.16","28.17","28.18","28.19","28.20","29.0","29.2","29.4","29.7","29.11","29.14","29.20","29.22","29.32","29.33"],"2":["0.3","0.7","2.3","2.4","2.5","6.4","7.1","7.5","7.6","7.7","7.8","7.9","7.10","7.11","7.12","7.13","8.4","10.2","10.9","10.17","10.25","10.28","11.1","12.1","14.2","14.5","14.9","15.2","15.3","15.4","15.5","15.8","15.11","16.2","17.1","17.3","17.8","18.2","18.4","18.8","20.3","20.4","20.5","20.6","23.3","23.6","23.23","23.26","26.5","26.11","26.12","26.13","26.14","26.15","26.16","26.17","26.20","28.3","28.4","28.12","28.13","28.14","28.15","28.16","28.17","28.18","28.19","28.20","29.1","29.2","29.3","29.4","29.5","29.6","29.7","29.8","29.9","29.10","29.11","29.12","29.13","29.14","29.15","29.16","29.17","29.18","29.22","29.23","29.24","29.25","29.26","29.29","29.33"],"3":["0.4","0.8","2.6","6.5","7.2","7.11","7.13","8.8","10.5","10.10","10.18","11.2","12.1","12.2","14.6","14.10","15.6","15.7","15.8","16.3","17.4","17.9","18.3","18.5","23.7","26.6","26.14","26.18","26.19","26.20","26.22","26.24","26.26","26.27","26.28","28.4","28.16","29.4","29.16","29.19","29.20","29.21","29.22","29.23","29.24","29.25","29.26","29.27","29.28","29.29","29.30","29.31","29.32","29.33","29.34","29.35","29.36","29.37","29.38"],"4":["0.9","2.7","2.8","7.3","8.12","10.6","10.11","11.3","12.1","12.3","15.9","15.10","15.11","16.4","17.5","18.6","23.8","26.7","26.15","26.24","26.29","28.5","28.15","29.5","29.17","29.25","29.32","29.33","29.34","29.35","29.36","29.37","29.38"],"5":["0.10","8.13","10.7","12.4","15.12","15.13","16.5","17.6","23.9","26.16","26.26","28.6","28.16","29.6","29.26","29.36"],"6":["10.12","12.5","23.10","26.4","26.9","26.17","26.27","28.7","28.17","29.7","29.37"],"7":["10.13","12.6","23.11","26.10","26.28","28.8","28.18","29.38"],"8":["10.14","12.7","23.12","28.9","28.19","28.20","29.9","29.34"],"9":["10.15","10.16","10.17","10.18","10.19","12.8","23.13","28.10","29.11","29.12"],"10":["6.5","10.23","10.24","10.25","10.26","10.27","10.28","12.9","18.4","23.14","28.11","29.14","29.15","29.16","29.17"],"11":["29.18"],"12":["10.24"],"20":["6.5","18.4"],"30":["18.4"],"55":["25.1"],"304":["20.5"],"拖拽事件":["0.2","0.12"],"主要用到的事件有":["0.2"],"filereader对象":["0.3"],"filereader":["0.3","0.9","2.5"],"对象允许web应用程序异步读取存储在用户计算机上的文件":["0.3"],"或原始数据缓冲区":["0.3"],"的内容":["0.3"],"使用":["0.3","3.5","4.1","10.4","25.3","25.4"],"file":["0.3","0.9","2.5","28.10","29.6"],"或":["0.3","2.5","4.1"],"blob":["0.3","2.5"],"对象指定要读取的文件或数据":["0.3"],"其中file对象可以是来自用户在一个":["0.3"],"input":["0.3","0.8"],"元素上选择文件后返回的":["0.3"],"定义拖拽文件的特定区域":["0.6"],"样式文件放在最后":["0.6"],"拖拽文件事件":["0.7"],"文件获取":["0.7"],"这里有一个要点":["0.7"],"就是拖拽事件需要阻止它的默认行为":["0.7"],"不然不会触发后续的事件":["0.7"],"js":["0.7","0.9","2.7","3.5","3.6","4.1","6.5","10.2","10.24","10.25","11.4","11.5","12.3","12.6","12.7","12.8","12.9","14.5","14.6","14.9","14.10","15.2","15.5","15.11","16.3","16.4","18.3","18.4","19.5","20.3","23.20","23.21","25.6","26.6","26.7","26.10","26.29","28.6","28.8","28.9","28.10","28.11","28.16","28.20","29.4","29.5","29.9","29.12","29.15","29.25","29.30","29.32","29.33","29.35","29.37"],"获取dom元素":["0.7"],"let":["0.7","8.14","8.15","10.24","10.25","15.2","15.11"],"droptarget":["0.7"],"还有点击上传":["0.8"],"上传事件":["0.8"],"读取文件并实现上传文件预览":["0.9"],"通过":["0.9","23.15","28.14"],"读取文件数据":["0.9"],"把文件跟文件流分别保存在不同的数组中":["0.9"],"方便预览文件删除":["0.9"],"并且根据文件数组的下标给每个删除按钮都添加对应的id":["0.9"],"删除操作":["0.9"],"因为主要是学习拖拽上传文件":["0.9"],"所以对效率方面没有考虑":["0.9"],"如果有不足的地方请多多指教":["0.9"],"文件处理函数":["0.9"],"function":["0.9","8.2","9.1","11.5","12.6","12.7","14.5","15.2","16.3","17.2","18.4","28.6","29.33"],"filestoblod":["0.9"],"创建文件对象":["0.9"],"reader":["0.9"],"new":["0.9","11.4","12.4","12.9","14.10","17.2","17.3","28.16"],"文件转为文件流":["0.9"],"readasdataurl":["0.9","2.5"],"文件读取完成":["0.9"],"根据类型不同显示不同的图标":["0.9"],"onload":["0.9"],"e":["0.9"],"把文件流放入文件流数组中":["0.9"],"fileblodarr":["0.9"],"push":["0.9","14.9"],"target":["0.9"],"result":["0.9"],"删除文件":["0.10"],"利用事件委托的方法":["0.10"],"给整个盒子添加":["0.10"],"click":["0.10"],"事件":["0.10","25.13"],"css":["0.11","29.5"],"margin":["0.11"],"0px":["0.11"],"padding":["0.11"],"整体盒子":["0.11"],"main":["0.11","25.6","29.5","29.32"],"width":["0.11"],"456px":["0.11"],"height":["0.11"],"452px":["0.11"],"overflow":["0.11"],"hidden":["0.11"],"position":["0.11"],"relative":["0.11"],"100px":["0.11"],"auto":["0.11"],"background":["0.11"],"f7f6f6":["0.11"],"文件上传盒子":["0.11"],"drop":["0.11"],"box":["0.11","25.7"],"454px":["0.11"],"dragenter":["0.12"],"dragover":["0.12"],"dragleave":["0.12"],"和":["0.12","10.14","14.5","23.13","29.6"],"html5":["1.1"],"️":["2.0","3.0","3.3","4.1","10.8","10.13","10.25","20.2","20.3","20.5","20.6"],"a标签的download":["2.2"],"download":["2.2"],"属性是html5新增的属性":["2.2"],"主要解决不能直接下载":["2.2"],"利用blob":["2.4"],"url":["2.4","4.1","29.6"],"createobjecturl":["2.4"],"利用":["2.4","6.3"],"url对象":["2.4"],"的":["2.4","4.1","6.3","10.16","12.0","23.27","26.12"],"方法去读取文件流":["2.4"],"使用base64":["2.5"],"方法会异步读取指定的":["2.5"],"对象":["2.5","17.3","26.14","28.16"],"并在读取完成时":["2.5"],"open":["2.6"],"location":["2.6","4.1"],"form表单":["2.7"],"应该是最传统的文件下载方式了吧":["2.7"],"很多新特性都是在h5才出的":["2.7"],"兼容性应该也是最好的":["2.7"],"实现方式也很简单":["2.7"],"通过js动态创建form表单":["2.7"],"然后利用form表单的提交来获取文件":["2.7"],"通过iframe下载":["2.8"],"iframe":["2.8","4.0","4.1"],"下载文件跟":["2.8"],"a":["2.8","3.6","10.20","10.21","16.5","18.4"],"标签下载文件基本一致":["2.8"],"本文主要是总结自己知道":["2.9"],"相信大家或多或少都接触过拥有庞大":["3.0"],"javascript":["3.1","7.13","8.1","8.5","8.14","8.15","9.1","11.4","11.5","23.21","29.11"],"的逻辑或":["3.1"],"的短路运算有时候可以用来代替一些比较简单的":["3.1"],"if":["3.1","3.2","3.5","3.6","14.5","15.2","20.4","20.5","20.6","23.27"],"三元运算符我觉得大家应该都很熟悉吧":["3.2"],"很多时候简单的一些判断我们都可以使用三元运算符去替代":["3.2"],"else":["3.2","3.5"],"这里只推荐":["3.2"],"一层":["3.2"],"因为多层嵌套的三元运算符也不具备良好的可读性":["3.2"],"case":["3.3"],"上述的两种方式":["3.3"],"短路运算跟三元运算虽然很好用":["3.3"],"代码也很简洁":["3.3"],"不过都只能用于简单的判断":["3.3"],"遇到多重条件判断就不能使用了":["3.3"],"对于":["3.3"],"虽然它的可读性确实比":["3.3"],"策略模式":["3.4"],"对象配置看起来跟":["3.4"],"差不多":["3.4"],"商场促销价":["3.5"],"根据不同的用户使用不同的折扣":["3.5"],"如":["3.5","6.5"],"普通用户不打折":["3.5"],"普通会员用户9折":["3.5"],"年费会员8":["3.5"],"5折":["3.5"],"超级会员8折":["3.5"],"实现":["3.5","15.2","15.5","15.8","15.11"],"获取折扣":["3.5"],"使用if":["3.5"],"年终奖":["3.6"],"公司的年终奖根据员工的工资基数和绩效等级来发放的":["3.6"],"例如":["3.6","23.14"],"绩效为a的人年终奖有4倍工资":["3.6"],"绩效为b的有3倍":["3.6"],"绩效为c的只有2倍":["3.6"],"假如财务部要求我们提供一段代码来实现这个核算逻辑":["3.6"],"我们要怎么实现呢":["3.6"],"这不是很简单嘛":["3.6"],"一个函数就搞定了":["3.6"],"const":["3.6","6.5","9.1","15.2","28.11"],"calculatebonus":["3.6"],"performancelevel":["3.6"],"salary":["3.6"],"本文主要是向大家传递一种思想":["3.7"],"想必大家都挺熟悉的了":["4.0"],"传参":["4.1"],"父窗口可以通过在":["4.1"],"src":["4.1","29.32"],"属性后添加参数来向子窗口传递数据":["4.1"],"子窗口可以通过":["4.1"],"search":["4.1"],"hash":["4.1","29.34"],"来获取参数":["4.1"],"拼接参数":["4.1"],"子页面使用":["4.1"],"接收参数":["4.1"],"parent":["4.1"],"html":["4.1","28.20"],"id":["4.1","25.10"],"iframe1":["4.1"],"关于前端下载的一些问题":["5.1"],"对象说晚饭吃什么太难选择":["6.0"],"首先是布局":["6.1"],"这个比较简单":["6.1"],"用弹性布局":["6.1"],"布局":["6.3"],"布局采用弹性布局":["6.3"],"vue":["6.3","14.5","14.9","25.1","26.7"],"指定奖品":["6.4","6.5"],"抽奖":["6.5"],"抽奖的具体实现":["6.5"],"利用定时器":["6.5"],"settimeout":["6.5","11.4"],"控制转动速度":["6.5"],"speed":["6.5"],"转动速度":["6.5"],"的规则为":["6.5"],"通过圈数跟中奖项计算出总的转动次数":["6.5"],"然后先加速再匀速最后减速":["6.5"],"利用样式规则来控制选中的":["6.5"],"item":["6.5"],"selectitem":["6.5"],"转动的圈数量":["6.5"],"activeturns":["6.5"],"通过随机数取":["6.5"],"中奖的规则":["6.5"],"圈数跟需要转动的总圈数相同并且转到本轮中奖的位置则停止转动表示中奖":["6.5"],"每次抽奖前需要初始化各种状态值":["6.5"],"选中的item":["6.5"],"当前中奖":["6.5"],"activeraffle":["6.5"],"如果已经在抽奖":["6.5"],"开始抽奖按钮就会失效":["6.5"],"指定的奖品":["6.5"],"appointraffle":["6.5"],"ref":["6.5","26.14"],"null":["6.5","15.2","16.4","23.13"],"代码片段":["6.6"],"创建正则表达式的2种方法":["7.1"],"标准写法":["7.1"],"使用new关键字创建":["7.1"],"var":["7.1","8.1","14.5","18.4"],"正则表达式的基本语法":["7.2"],"字符":["7.2"],"描述":["7.2"],"转义特殊字符":["7.2"],"匹配字符串的开头":["7.2"],"res":["7.7"],"test":["7.7","28.16"],"reg":["7.11"],"exec":["7.11"],"零宽断言":["7.13"],"给指定位置添加一个限定条件":["7.13"],"用来规定此位置之前或之后的字符必须满足限定条件才可以使正则表达式匹配成功":["7.13"],"示例1":["7.13"],"数字三位一逗":["7.13"],"创建正则表达式有两种方法":["7.14"],"new关键字创建跟字面量方法":["7.14"],"是你想要在到期时间":["8.2"],"delay":["8.2"],"毫秒":["8.2"],"之后执行的函数":["8.2"],"code":["8.2","29.32"],"timeoutid":["8.3"],"是一个正整数":["8.3"],"func":["8.6"],"要重复调用的函数":["8.6"],"每经过指定":["8.6"],"此返回值":["8.7"],"intervalid":["8.7"],"是一个非零数值":["8.7"],"在浏览器中":["8.9"],"除了":["8.10","16.5"],"包括":["8.11"],"ie":["8.11"],"定时器的可靠性":["8.12"],"虽说定时器在大部分的情况下都是趋于稳定的":["8.12"],"但是定时器在使用的时候也存在着一些误差":["8.12"],"可以使用下列代码多测试几次":["8.12"],"定义时间":["8.14","8.15"],"time":["8.15"],"js的执行机制":["8.16"],"前几天在项目中遇到一个以前都没有接触过的问题":["9.0"],"觉得很有意思记录一下":["9.0"],"场景是这样的":["9.0"],"我们项目中有一个语音上传":["9.0"],"用的elment的upload组件":["9.0"],"base64文件流":["9.1"],"base64string":["9.1"],"处理base64文件流":["9.1"],"这里对base64串进行操作":["9.1"],"去掉url头":["9.1"],"并转换为byte":["9.1"],"bstr":["9.1"],"怎么突然提到":["10.0"],"canvas":["10.0","10.2","10.3","10.4","10.5","10.14","10.16","10.18","10.24","10.25"],"呢":["10.0"],"canvas的基本使用":["10.2"],"可以看得出来":["10.3"],"现在流行的浏览器基本都支持":["10.3"],"标签":["10.3","28.11"],"会创建一个固定大小的画布":["10.4"],"同时会公开一个或多个":["10.4"],"画笔":["10.4"],"渲染上下文":["10.4"],"来绘制和处理要展示的内容":["10.4"],"在这里我们重点研究":["10.4"],"2d":["10.4"],"其他的上下文我们暂不研究":["10.4"],"绘制路径":["10.5"],"path":["10.5","26.10"],"只支持一种原生的图形绘制":["10.5"],"矩形":["10.5"],"所有其他图形都至少需要生成一种路径":["10.5"],"图形的基本元素是路径":["10.5"],"路径是通过不同颜色和宽度的线段或曲线相连形成的不同形状的点的集合":["10.5"],"一个路径":["10.5"],"甚至一个子路径":["10.5"],"都是闭合的":["10.5"],"使用路径绘制图形需要一些额外的步骤":["10.5"],"绘制圆弧":["10.6"],"有两个方法可以绘制圆弧":["10.6"],"arc":["10.6"],"x":["10.6","10.12","10.18","25.10","26.4","29.33"],"y":["10.6","10.12","10.18","19.2","29.33"],"r":["10.6"],"startangle":["10.6"],"endangle":["10.6"],"anticlockwise":["10.6"],"以":["10.6"],"为圆心":["10.6"],"为半径":["10.6"],"linewidth":["10.8"],"线宽":["10.8"],"只能是正值":["10.8"],"默认是":["10.8"],"起始点和终点的连线为中心":["10.8"],"linecap":["10.9"],"线条末端样式":["10.9"],"butt":["10.9"],"线段末端以方形结束":["10.9"],"round":["10.9","10.10"],"线段末端以圆形结束":["10.9"],"square":["10.9"],"但是增加了一个宽度和线段相同":["10.9"],"高度是线段厚度一半的矩形区域":["10.9"],"linejoin":["10.10"],"线条与线条间接合处的样式":["10.10"],"通过填充一个额外的":["10.10"],"圆心在相连部分末端的扇形":["10.10"],"绘制拐角的形状":["10.10"],"圆角的半径是线段的宽度":["10.10"],"bevel":["10.10"],"在相连部分的末端填充一个额外的以三角形为底的区域":["10.10"],"虚线":["10.11"],"用":["10.11"],"setlinedash":["10.11"],"方法和":["10.11"],"文本绘制":["10.12"],"我为了做个水印学了这么多东西":["10.12"],"绘制文本的两种方法":["10.12"],"filltext":["10.12"],"text":["10.12"],"maxwidth":["10.12"],"在指定的":["10.12"],"图片绘制":["10.13"],"其实这个我是不喜欢学的":["10.13"],"但是想了下以后自己可以画一些":["10.13"],"绘制图片使用的是":["10.13"],"drawimage":["10.13"],"方法":["10.13","17.5","18.2","28.16"],"这个方法有九个参数":["10.13"],"image":["10.13","11.2","26.29","29.30"],"sx":["10.13"],"sy":["10.13"],"swidth":["10.13"],"状态":["10.14","16.1"],"的状态就是当前画面应用的所有样式和变形的一个快照":["10.14"],"save":["10.14","26.6"],"restore":["10.14"],"方法是用来保存和恢复":["10.14"],"状态的":["10.14"],"都没有参数":["10.14"],"关于":["10.14"],"translate":["10.16"],"用来移动":["10.16"],"原点":["10.16"],"到指定的位置":["10.16"],"rotate":["10.17"],"旋转坐标轴":["10.17"],"angle":["10.17"],"只接受一个参数":["10.17"],"旋转的角度":["10.17"],"scale":["10.18"],"增减图形在":["10.18"],"中的像素数目":["10.18"],"对形状":["10.18"],"位图进行缩小或者放大":["10.18"],"b":["10.20","10.21","18.4"],"c":["10.20","18.4"],"d":["10.20"],"重置当前变形为单位矩阵":["10.22"],"它和调用以下语句是一样的":["10.22"],"ctx":["10.22","10.24"],"settransform":["10.22"],"组合":["10.24"],"globalcompositeoperation":["10.24"],"type":["10.24","15.5"],"这个属性设定了在画新图形时采用的遮盖策略":["10.24"],"其值是一个标识":["10.24"],"种遮盖方式的字符串":["10.24"],"document":["10.24"],"getelementbyid":["10.24"],"裁切路径":["10.25"],"裁切路径和普通的":["10.25"],"图形差不多":["10.25"],"不同的是它的作用是遮罩":["10.25"],"用来隐藏不需要的部分":["10.25"],"clip":["10.25"],"将当前正在构建的路径转换为当前的裁剪路径":["10.25"],"默认情况下":["10.25"],"有一个与它自身一样大的裁切路径":["10.25"],"也就是没有裁切效果":["10.25"],"动画的基本步骤":["10.27"],"你可以通过以下的步骤来画出一帧":["10.27"],"控制动画":["10.28"],"mdn":["10.29"],"学习eventloop前需要知道的一些知识":["11.1"],"同步任务":["11.1"],"在主线程上排队执行的任务":["11.1"],"只有前一个任务执行完毕":["11.1"],"才能执行后一个任务":["11.1"],"异步任务":["11.1"],"eventloop":["11.2"],"事件循环":["11.2"],"执行过程":["11.2"],"png":["11.2","26.29"],"具体过程可以理解为":["11.2"],"主线程执行全局同步代码":["11.2"],"console":["11.4","11.5","14.5","28.16"],"log":["11.4","11.5","14.5","28.8","28.16"],"start":["11.4","11.5"],"settimeout1":["11.4"],"promise":["11.4","16.2","16.5"],"async":["11.5"],"fn1":["11.5"],"带你彻底弄懂eventloop":["11.6"],"手写instanceof":["12.0"],"instanceof":["12.0"],"主要判断一个实例是否":["12.0"],"属于":["12.0"],"某种类型":["12.0"],"实现原理就是只要右边":["12.0"],"类型":["12.0"],"prototype":["12.0","14.5","17.0","17.4"],"在左边":["12.0"],"实例":["12.0"],"手写new关键词":["12.1"],"使用new关键词执行构造函数":["12.1"],"主要过程为":["12.1"],"创建":["12.1"],"一个新对象":["12.1"],"将第一步的空对象链接到另一个对象":["12.1"],"new操作符后面跟着的构造函数的":["12.1"],"原型对象":["12.1"],"将第一步创建的对象作为构造函数的":["12.1"],"this上下文":["12.1"],"手写call":["12.2"],"改变函数的":["12.2"],"this":["12.2","12.4","12.8","12.9","14.5","14.6","14.9","14.10","16.4","28.5","28.6","28.7"],"指向":["12.2"],"第一个参数为":["12.2"],"要指向的对象":["12.2"],"如果没有或者参数为undefined":["12.2"],"null则默认指向":["12.2"],"window":["12.2","14.5"],"参数传递是以参数列表传递":["12.2"],"手写apply":["12.3"],"跟call基本是一样的":["12.3"],"只是call的剩余参数是参数列表":["12.3"],"call的参数需要一个一个在后面列举出来":["12.3"],"而apply的第二个参数必须是":["12.3"],"数组":["12.3","23.8"],"apply的参数是以":["12.3"],"参数数组":["12.3"],"的形式传递的":["12.3"],"手写bind":["12.4"],"bind函数也改变":["12.4"],"的指向":["12.4"],"传入的函数不会":["12.4"],"立即执行":["12.4"],"而是":["12.4"],"返回":["12.4"],"一个永久改变this指向的":["12.4"],"函数":["12.4","17.2","26.16"],"参数传递跟call一样使用":["12.4"],"参数列表":["12.4"],"需要一个一个的列举出来传递":["12.4"],"绑定过后的函数被":["12.4"],"实例化之后":["12.4"],"需要继承原函数的":["12.4"],"原型链":["12.4"],"防抖":["12.5"],"在事件触发的一段时间后执行该事件":["12.5"],"如果这期间再次触发事件":["12.5"],"则重新计时":["12.5"],"节流":["12.6"],"事件在一定时间内只能触发一次":["12.6"],"深克隆":["12.7"],"创造一个一模一样的对象":["12.7"],"新对象跟原对象不共享内存":["12.7"],"修改新对象不会改到原对象":["12.7"],"使用json":["12.7"],"stringify和json":["12.7"],"parse也可以实现深拷贝":["12.7"],"json":["12.7","25.1","29.4","29.32"],"stringify把对象转成字符串":["12.7"],"再用json":["12.7"],"parse把字符串转成新的对象":["12.7"],"deepclone":["12.7"],"obj":["12.7"],"手写promise":["12.8"],"promise的出现是为了解决回调地狱":["12.8"],"是一种异步编程的解决方案":["12.8"],"promise有三种状态":["12.8"],"pending":["12.8","16.4"],"等待态":["12.8","16.4"],"fulfiled":["12.8","16.3","16.4"],"成功态":["12.8","16.4"],"rejected":["12.8","16.3","16.4"],"失败态":["12.8","16.4"],"初始状态是":["12.8"],"状态一旦改变":["12.8"],"就不会再变":["12.8"],"class":["12.8","12.9","14.6","14.9","14.10","15.5","16.4","23.21","25.7","28.16"],"mypromise":["12.8","16.4"],"constructor":["12.8","12.9","14.6","14.9","14.10","15.5","16.4","28.16"],"executor":["12.8","16.4"],"捕获执行器的代码错误":["12.8","16.4"],"try":["12.8","16.4"],"executor执行器":["12.8","16.4"],"进入会立即执行":["12.8","16.4"],"resolve":["12.8","16.1","16.4"],"reject":["12.8","16.1","16.4"],"catch":["12.8","16.4"],"err":["12.8","16.4"],"状态值pending":["12.8","16.4"],"默认为pending":["12.8","16.4"],"promisestate":["12.8","16.1","16.3","16.4"],"发布订阅":["12.9"],"一种对象间一对多的依赖关系":["12.9"],"当一个对象的状态发送改变时":["12.9"],"所有依赖于它的对象都将得到状态改变的通知":["12.9"],"调度中心":["12.9","14.10"],"pubsub":["12.9","14.10"],"subscribers":["12.9","14.10"],"set":["12.9","14.10"],"上传文件base64流转formdata":["13.1"],"什么是设计模式":["14.1"],"设计模式的原则":["14.2"],"s":["14.2"],"single":["14.2"],"responsibility":["14.2"],"principle":["14.2"],"列子":["14.5","14.9","15.13"],"想必大家应该都经常会接触到这个模式":["14.5"],"比如":["14.5"],"我们使用原生dom事件绑定的时候":["14.5"],"addeventlistener":["14.5"],"load":["14.5"],"loaded":["14.5"],"vue中":["14.5"],"on":["14.5","26.13"],"emit":["14.5","28.17","28.18"],"的方法实现":["14.5"],"直接看源码":["14.5"],"eventsmixin":["14.5"],"hookre":["14.5"],"hook":["14.5","28.16"],"event":["14.5"],"fn":["14.5","18.4"],"vm":["14.5"],"为数组时":["14.5"],"循环执行":["14.5"],"array":["14.5","23.8"],"isarray":["14.5"],"for":["14.5"],"i":["14.5","29.12","29.15","29.30"],"自己实现一个简化版的evenetbus":["14.6"],"被观察者":["14.6"],"eventbus":["14.6"],"topic":["14.6"],"事件标识":["14.6"],"订阅模式":["14.7"],"响应式原理":["14.9"],"dep":["14.9"],"观察者列表":["14.9"],"subs":["14.9"],"addsub":["14.9"],"sub":["14.9"],"notify":["14.9"],"改写eventbus简化版":["14.10"],"添加调度中心后":["14.10"],"缓存列表":["14.10"],"观察者模式跟发布订阅者模式":["14.11"],"javascript设计模式与开发实践":["14.12","15.14"],"普通单例模式实现":["15.2"],"singlecase":["15.2"],"存储单例":["15.2"],"example":["15.2"],"判断是否存在单例":["15.2"],"return":["15.2","28.6","29.33"],"factorymode":["15.5"],"返回实例":["15.5"],"创建一个学生的对象":["15.8"],"包含姓名":["15.8"],"年龄":["15.8"],"地址等信息":["15.8"],"允许按步骤构造这个对象":["15.8"],"一个房东有多套房子":["15.11"],"他一个人想要租出去花费的时间跟精力会很大":["15.11"],"于是他找了中介帮他把房子租出去":["15.11"],"这个中介就相当于房东的代理":["15.11"],"房东":["15.11"],"landlord":["15.11"],"学习promise原理以及自己实现一个promise的目的主要是为了更好的使用promise":["16.0"],"ps":["16.0"],"实现promise对象":["16.1"],"promise是一个对象":["16.1"],"对象里面有一系列变量跟方法":["16.1"],"列如":["16.1"],"执行后的值":["16.1","16.3","16.4"],"promiseresult":["16.1","16.4"],"失败的方法":["16.1"],"成功的方法":["16.1","16.4"],"如果使用过程中有throw怎么办":["16.2"],"如果在":["16.2"],"中出现了":["16.2"],"实现then方法":["16.3"],"then方法接受两个可选的参数":["16.3"],"这两个参数必须是函数":["16.3"],"两个参数分别代表两个回调函数":["16.3"],"成功的回调跟失败的回调":["16.3"],"当":["16.3"],"为":["16.3"],"时执行成功的回调":["16.3"],"执行失败的回调":["16.3"],"then方法支持":["16.3"],"链式调用":["16.3"],"下一次的then方法的值来自于上一个then方法":["16.3"],"接下来我们实现then方法":["16.3"],"then":["16.3"],"onfulfilled":["16.3"],"onrejected":["16.3"],"如果不传":["16.3"],"就使用默认函数":["16.3"],"typeof":["16.3","23.27"],"value":["16.3","16.4"],"完整的代码":["16.4"],"成功的回调":["16.4"],"onfulfilledcallbacks":["16.4"],"失败的回调":["16.4"],"onrejectedcallbacks":["16.4"],"如果状态不是pending":["16.4"],"通过promises":["16.5"],"规范测试我们手写的promise":["16.5"],"promise是有多种规范的":["16.5"],"还有":["16.5"],"promise的中文翻译是承诺":["16.6"],"promises":["16.7"],"什么是原型":["17.0"],"原型分为显式原型":["17.0"],"和隐式原型":["17.0"],"proto":["17.0","17.4"],"显式原型":["17.0","17.4"],"也称作构造函数的原型对象":["17.0"],"构造函数具有显式原型":["17.0"],"实例具有隐式原型":["17.0"],"创建函数的两种方法":["17.2"],"字面量跟":["17.2"],"字面量方法的本质其实还是":["17.2"],"也就是说function也是一个构造函数":["17.2"],"函数是其实例":["17.2"],"对象的创建方法":["17.3"],"字面量":["17.3"],"object":["17.3","17.7","17.8"],"create":["17.3"],"什么是原型链":["17.4"],"通俗的说原型链就是多个":["17.4"],"相连形成的一个有层级的":["17.4"],"依赖关系":["17.4"],"构造函数的原型对象":["17.4"],"是一个对象":["17.4"],"那这个对象的隐式原型":["17.4"],"应该指向object构造函数的原型对象":["17.4"],"原型继承":["17.5"],"实例可以使用来自构造函数的":["17.5"],"属性":["17.5","20.5"],"与":["17.5"],"也就是":["17.5"],"prtotype":["17.7"],"isprototype":["17.7"],"setprototypeof":["17.8"],"instanceof方法":["17.9"],"判断一个对象是否在另一个对象的原型链上":["17.9"],"函数作用域":["18.2"],"定义函数时的花括号":["18.2"],"为函数作用域":["18.2"],"在函数作用域定义的变量":["18.2"],"块级作用域":["18.3"],"在":["18.3","23.4","23.27","26.7","28.18"],"中的内容就被认为块级作用域":["18.3"],"只有使用let声明的变量":["18.3"],"方法才具备块级作用域":["18.3"],"if块":["18.3"],"while块":["18.3"],"function块":["18.3"],"单独的块都可以被认为时let声明的块级作用域":["18.3"],"作用域链":["18.4"],"各个作用域访问变量和方法的顺序":["18.4"],"当我们使用一个变量时":["18.4"],"js会顺着作用域链一层一层的像上查找":["18.4"],"直到最顶层的全局作用域":["18.4"],"如果在全局作用域中没有找到该变量或者方法":["18.4"],"就返回undefined":["18.4"],"作用域链的存在":["18.4"],"使得内部作用域可以顺着作用域链访问到外部作用域的变量或者方法":["18.4"],"但是外部作用域去不能访问到内部作用域的变量或者方法":["18.4"],"闭包":["18.5"],"一个函数和对其周围状态":["18.5"],"lexical":["18.5"],"environment":["18.5"],"垃圾回收机制":["18.6"],"浏览器的":["18.6"],"标记清除":["18.7"],"js中最常用的":["18.7"],"垃圾回收方式":["18.7"],"javascript高级程序设计":["18.9"],"作为一个前端怎么能没有属于自己的博客呢":["19.0"],"个人博客的搭建主要是vuepress":["19.1"],"创建项目文件夹":["19.2"],"blog":["19.2"],"并进行初始化":["19.2"],"npm":["19.2","26.4","26.6","29.12","29.15","29.30"],"init":["19.2"],"官方推荐的目录结构":["19.3"],"大家可以按照这个结构去构建":["19.3"],"docs":["19.3","19.4","19.5"],"vuepress":["19.3","19.5"],"可选的":["19.3"],"components":["19.3"],"复制下面内容至":["19.4"],"readme":["19.4"],"md":["19.4"],"文件下":["19.4"],"home":["19.4"],"标识是否开启首页":["19.4"],"也可以给标题":["19.4"],"config":["19.5","26.10"],"配置主题的导航栏":["19.5"],"侧边栏":["19.5"],"搜索":["19.5"],"logo":["19.5"],"可以参考下列文件的配置":["19.5"],"module":["19.5","28.6","28.16","29.9"],"exports":["19.5","28.6","28.16","29.9"],"title":["19.5"],"树深遇鹿":["19.5"],"网站标题":["19.5"],"description":["19.5"],"生活不可能像你想象的那么好":["19.5"],"新建一个git仓库blog":["19.6"],"仓库需要是public":["19.6"],"http缓存是一种用于提高网站性能和减少带宽使用的技术":["20.0"],"当用户访问一个网页时":["20.0"],"expires":["20.2"],"cache":["20.3","29.25"],"control":["20.3"],"是通过在响应头部中加入":["20.3"],"字段":["20.3"],"并设置max":["20.3"],"age值来表示该资源在多少秒内有效":["20.3"],"即缓存的最大时长":["20.3"],"响应头的最常用格式为":["20.3"],"max":["20.3"],"age":["20.3"],"seconds":["20.3"],"是缓存的时间":["20.3"],"单位是秒":["20.3"],"当浏览器请求资源得到的响应头中带有":["20.3"],"响应头时":["20.3"],"浏览器会将该资源缓存到本地":["20.3"],"在下一次访问该资源时":["20.3"],"同时满足下述条件":["20.3"],"浏览器就会使用本地资源":["20.3"],"即缓存":["20.3"],"而不重新去服务器请求该资源":["20.3"],"缓存时间未过期":["20.3"],"url未发生变化":["20.3"],"协商缓存":["20.4"],"利用浏览器和服务器之间的通信来确定是否需要重新获取资源":["20.4"],"协商缓存有两种实现方式":["20.4"],"modified":["20.5","20.6"],"since":["20.5","20.6"],"利用响应头的":["20.5","20.6"],"last":["20.5"],"来设置缓存":["20.5","20.6"],"并在下次请求的请求头中携带":["20.5","20.6"],"来判断该资源是否发生变化":["20.5"],"如果发生变化则返回新的资源":["20.5"],"并更新":["20.5"],"如果没有发生变化":["20.5"],"则返回":["20.5"],"etag":["20.6"],"基本上与":["20.6"],"一致":["20.6"],"none":["20.6"],"match":["20.6"],"http缓存":["21.1"],"typescript基础学习":["22.1"],"都2022年了":["23.0"],"typescript":["23.1","23.2","23.3","23.4","23.19","23.20","23.21","23.27"],"简介":["23.1"],"值得学吗":["23.2"],"我想很多人都跟我一样存在这样的疑问吧":["23.2"],"下面我列举几个我们需要学习":["23.2"],"获取":["23.3"],"命令行的":["23.3"],"中的基础类型":["23.4"],"数字":["23.6"],"number":["23.6","25.10"],"字符串":["23.7"],"string":["23.7","25.10"],"元组":["23.9"],"tuple":["23.9"],"元组类型允许表示一个已知元素数量和类型的数组":["23.9"],"各元素的类型不必相同":["23.9"],"也就是初始化的时候类型和":["23.9"],"大小":["23.9"],"以及确定的":["23.9"],"如果后续赋值类型":["23.9"],"枚举类型":["23.10"],"enum":["23.10"],"any类型":["23.11"],"void类型":["23.12"],"void":["23.12"],"undefined":["23.13"],"typescript里":["23.13"],"never":["23.14"],"类型表示的是那些永不存在的值的类型":["23.14"],"类型断言":["23.15"],"有时候你会遇到这样的情况":["23.15"],"你会比typescript更了解某个值的详细信息":["23.15"],"通常这会发生在你清楚地知道一个实体具有比它现有类型更确切的类型":["23.15"],"这种方式可以告诉编译器":["23.15"],"类型推断":["23.16"],"如果变量有默认值的话":["23.16"],"一般我们也不需要显式声明类型":["23.16"],"联合类型":["23.17"],"交叉类型":["23.18"],"交叉类型是将多个类型合并为一个类型":["23.18"],"这让我们可以把现有的多种类型叠加到一起成为一种类型":["23.18"],"它包含了所需的所有类型的特性":["23.18"],"中的接口":["23.19"],"接口定义了对象的外观":["23.19"],"interface":["23.19","23.22","25.10"],"person":["23.19"],"name":["23.19","29.34"],"中的函数":["23.20"],"我们可以定义函数参数和返回值的类型":["23.20"],"定义一个名为":["23.20"],"add":["23.20","26.6","26.7"],"的函数":["23.20"],"中的类":["23.21"],"跟":["23.21"],"一样":["23.21"],"我们可以使用":["23.21"],"关键字创建对象":["23.21"],"并且可以定义类中每条数据的类型":["23.21"],"类的":["23.22"],"可以通过接口来规定一个类它必须包含某些属性和方法":["23.22"],"把类当做接口使用":["23.23"],"类定义会创建两个东西":["23.23"],"泛型":["23.24"],"泛型指的是在定义函数":["23.24"],"接口":["23.24"],"类型时":["23.24"],"不预先指定具体的类型":["23.24"],"而是在使用的时候在指定类型限制":["23.24"],"泛型接口":["23.25"],"当我们不知道对象中的某个值是什么类型时":["23.25"],"可以使用泛型来传递该类型":["23.25"],"泛型类":["23.26"],"泛型类看上去与泛型接口差不多":["23.26"],"泛型类使用":["23.26"],"中的类型收窄":["23.27"],"中":["23.27","28.20"],"变量可以从不太精确的类型转移到更精确的类型":["23.27"],"这个过程称为类型收窄":["23.27"],"下面是一个简单的例子":["23.27"],"展示了当我们使用带有":["23.27"],"语句时":["23.27"],"如何将不太特定的":["23.27"],"https":["23.28"],"vue3":["24.1","26.12"],"前言":["25.0","29.0"],"许多应用程序都需要实现可拖拽的布局以方便用户自定义布局":["25.0"],"虽然这似乎是一个简单而基本的功能":["25.0"],"项目的环境依赖":["25.1"],"dependencies":["25.1"],"sass":["25.1"],"插件的特性":["25.2"],"可拖拽":["25.2"],"编写组件":["25.3"],"以下组件设计的一些选择和决策":["25.3"],"provide":["25.3"],"inject":["25.3"],"进行组件通信":["25.3"],"安装":["25.4","26.6"],"shell":["25.4"],"用法":["25.5","28.7"],"ts":["25.6","25.7","25.10","26.10"],"import":["25.6","26.10","26.29"],"template":["25.7"],"div":["25.7"],"layout":["25.7"],"apis":["25.8"],"props":["25.9"],"layoutitem":["25.10"],"名称":["25.11","25.13"],"插槽":["25.12"],"待办事项":["25.14"],"欢迎大家试用":["25.15"],"项目demo":["26.1"],"一点点的":["26.2"],"创建项目":["26.4"],"安装vuejsx":["26.5"],"vite":["26.5","26.10"],"官方现在提供了官方的插件来支持在":["26.5"],"element":["26.6"],"plus":["26.6"],"install":["26.6"],"yarn":["26.6","26.7"],"pnpm":["26.6"],"如果需要使用":["26.6"],"配置路由":["26.7"],"安装路由":["26.7"],"router":["26.7","26.29"],"安装pinia":["26.9"],"如果你之前使用过":["26.9"],"vuex":["26.9"],"进行状态管理的话":["26.9"],"那么":["26.9"],"pinia":["26.9"],"就是一个类似的插件":["26.9"],"它是最新一代的轻量级状态管理插件":["26.9"],"按照尤雨溪的说法":["26.9"],"将不再接受新的功能":["26.9"],"建议将":["26.9"],"用于新的项目":["26.9"],"vite的一些基础配置":["26.10"],"配置文件别名":["26.10"],"vue3新特性":["26.11"],"setup":["26.12"],"函数是":["26.12"],"composition":["26.12"],"api":["26.12","28.5","28.7","28.15"],"新特性的入口":["26.12"],"函数会在":["26.12"],"beforecreate":["26.12"],"生命周期":["26.13"],"你可以通过在生命周期钩子前面加上":["26.13"],"接受一个内部值并返回一个响应式且可变的":["26.14"],"对象仅有一个":["26.14"],"reactive":["26.15"],"返回对象的响应式副本":["26.15"],"影响所有嵌套":["26.15"],"property":["26.15"],"将每个":["26.15"],"都转换成":["26.15"],"computed":["26.16"],"作用跟vue2无差异":["26.16"],"接受一个":["26.16"],"getter":["26.16"],"并根据":["26.16"],"watcheffect":["26.17"],"watch":["26.17"],"立即执行传入的一个函数":["26.17"],"同时响应式追踪其依赖":["26.17"],"并在其依赖变更时重新运行该函数":["26.17"],"自动收集依赖源":["26.17"],"当依赖源变化的时候触发":["26.17"],"在初始化的时候回执行一次":["26.17"],"插值":["26.19"],"jsx":["26.19","26.22","26.24","26.27","26.28"],"class与style":["26.20"],"绑定":["26.20"],"class类名绑定有两种方式":["26.20"],"条件渲染":["26.22"],"tsx中只保留了":["26.22"],"v":["26.22","26.27"],"列表渲染":["26.24"],"同样":["26.24"],"tsx":["26.24","26.29"],"中也没有":["26.24"],"事件处理":["26.26"],"绑定事件使用的也是":["26.26"],"单大括号":["26.26"],"不过事件绑定不是以":["26.26"],"为前缀了":["26.26"],"model":["26.27"],"tsx是支持v":["26.27"],"slot插槽":["26.28"],"定义插槽":["26.28"],"tsx中是没有":["26.28"],"slot":["26.28"],"标签的":["26.28"],"定义插槽需要使用":["26.28"],"使用tsx实现递归组件":["26.29"],"菜单":["26.29"],"主要功能就是根据路由信息自动取生成菜单":["26.29"],"效果如下":["26.29"],"代码如下":["26.29"],"如果需要控制权限啥的":["26.29"],"自己在路由信息的":["26.29"],"meta":["26.29","28.5","28.6"],"中添加对应的参数":["26.29"],"然后在":["26.29"],"menuitem":["26.29"],"中自行控制":["26.29"],"index":["26.29","29.5"],"routes":["26.29"],"from":["26.29"],"webpack5":["27.1","29.6"],"接上回":["28.0"],"概念":["28.2","28.13"],"loader":["28.2","28.3","28.4","28.5","28.6","28.8","28.9","28.10","28.11","29.4","29.6","29.14"],"loader的特性":["28.3"],"支持链式调用":["28.3"],"链中的每个":["28.3"],"会将转换应用在已处理过的资源上":["28.3"],"一组链式的":["28.3"],"执行顺序":["28.4"],"根据配置文件中的":["28.4"],"enforce":["28.4"],"参数分类":["28.4"],"pre":["28.4"],"前置":["28.4"],"normal":["28.4"],"普通":["28.4"],"inline":["28.4"],"内联":["28.4"],"post":["28.4"],"后置":["28.4"],"没有enforce就是normal":["28.4"],"loader接收的参数":["28.5"],"是导出为一个函数的":["28.5"],"node":["28.5","28.15","29.24"],"模块":["28.5"],"该函数在":["28.5"],"转换资源的时候调用":["28.5"],"给定的函数将调用":["28.5"],"并通过":["28.5"],"上下文访问":["28.5"],"content":["28.5","28.6"],"资源输入":["28.5"],"对于第一个执行的":["28.5"],"为资源文件的内容":["28.5"],"后续执行的":["28.5"],"则为前一个":["28.5"],"的执行结果":["28.5"],"sourcemap":["28.5","29.20"],"可选参数":["28.5"],"代码的sourcemap结构":["28.5"],"loader分类":["28.6"],"同步":["28.6"],"map":["28.6","29.20"],"callback":["28.6"],"方法则更灵活":["28.6"],"因为它允许传递多个参数":["28.6"],"而不仅仅是":["28.6"],"一些常用的loader":["28.7"],"方法名":["28.7"],"含义":["28.7"],"clean":["28.8"],"清楚":["28.8"],"文件中的console":["28.8"],"xxx":["28.8","29.20"],"babel":["28.9","29.11","29.29"],"作用":["28.9","28.10","28.11","28.17","28.18","28.19","28.20"],"编译":["28.9"],"代码":["28.9"],"将":["28.9"],"es6":["28.9","29.11"],"手写":["28.10","28.11"],"将文件原封不动输出出去":["28.10"],"下载包":["28.10"],"style":["28.11","29.5","29.14"],"动态创建":["28.11"],"插入":["28.11"],"中的样式代码":["28.11"],"使样式生效":["28.11"],"loaders":["28.11"],"styleloader":["28.11"],"pitch":["28.11"],"插件是":["28.13"],"plugin":["28.14","28.15","28.16","28.20","29.29"],"工作原理":["28.14"],"webpack":["28.14","28.15","28.18","28.19","28.20","29.3","29.4","29.12","29.22","29.32","29.34"],"就像一条生产线":["28.14"],"要经过一系列处理流程后才能将源文件转换成输出结果":["28.14"],"这条生产线上的每个处理流程的职责都是单一的":["28.14"],"多个流程之间有存在依赖关系":["28.14"],"只有完成当前处理后才能交给下一个流程去处理":["28.14"],"插件就像是一个插入到生产线中的一个功能":["28.14"],"在特定的时机对生产线上的资源做处理":["28.14"],"tapable":["28.14"],"来组织这条复杂的生产线":["28.14"],"构建对象":["28.15"],"compiler":["28.15","28.16","28.17","28.18"],"模块是":["28.15"],"的主要引擎":["28.15"],"它通过":["28.15"],"cli":["28.15"],"或者":["28.15"],"传递的所有选项创建出一个":["28.15"],"compilation":["28.15"],"开发一个插件":["28.16"],"最简单的插件":["28.16"],"plugins":["28.16"],"testplugin":["28.16"],"webpack读取配置时":["28.16"],"会执行插件":["28.16"],"webpack创建":["28.16"],"遍历所有插件":["28.16"],"调用插件的":["28.16"],"apply":["28.16"],"注册":["28.16"],"bannerwebpackplugin":["28.17"],"给打包输出文件添加注释":["28.17"],"开发思路":["28.17","28.18","28.20"],"需要打包输出前添加注释":["28.17"],"需要使用":["28.17","28.18"],"hooks":["28.17","28.18"],"cleanwebpackplugin":["28.18"],"打包输出前将上次打包内容清空":["28.18"],"如何在打包输出前执行":["28.18"],"analyzewebpackplugin":["28.19"],"分析":["28.19"],"打包资源大小":["28.19"],"并输出分析文件":["28.19"],"inlinechunkwebpackplugin":["28.20"],"打包生成的":["28.20"],"runtime":["28.20","29.29"],"文件太小了":["28.20"],"额外发送请求性能不好":["28.20"],"所以需要将其内联到":["28.20"],"从而减少请求数量":["28.20"],"我们需要借助":["28.20"],"从0开始构建自己的webpack5知识体系":["28.21"],"基本配置":["29.1"],"首先初始化一下项目":["29.1"],"并建立一下文件":["29.1"],"使用webpack":["29.3"],"开发模式":["29.3"],"npx":["29.3"],"配置文件":["29.4"],"在使用webpack之前先认识一下webpack的一些基本概念":["29.4"],"五大核心概念":["29.4"],"entry":["29.4"],"入口":["29.4"],"指示":["29.4"],"从哪个文件开始打包":["29.4"],"output":["29.4"],"输出":["29.4","29.9"],"打包完的文件输出到哪里去":["29.4"],"如何命名等":["29.4"],"加载器":["29.4"],"本身只能处理":["29.4"],"等资源":["29.4"],"其他资源需要借助":["29.4"],"处理样式资源":["29.5"],"在src中新建一个":["29.5"],"文件夹":["29.5"],"然后新增一个":["29.5"],"文件":["29.5","29.20","29.32","29.33"],"随便在里面写一点样式":["29.5"],"并在":["29.5"],"处理图片":["29.6"],"字体等资源":["29.6"],"过去在":["29.6"],"webpack4":["29.6"],"时":["29.6"],"我们处理图片资源通过":["29.6"],"进行处理":["29.6"],"现在":["29.6"],"处理字体":["29.7"],"视频":["29.7"],"音频等资源":["29.7"],"添加字体":["29.7"],"图标":["29.7"],"在打开阿里巴巴矢量图标库open":["29.7"],"修改输出资源的名称跟路径":["29.9"],"现在的打包文件都是全部放在dist根目录下面的":["29.9"],"看起来比较杂乱":["29.9"],"我们需要把文件根据文件属性放到不同的目录下面":["29.9"],"修改配置文件":["29.9"],"js兼容性处理":["29.11"],"浏览器对":["29.11"],"的一些":["29.11"],"语法兼容性不太好":["29.11"],"所以我们需要借助":["29.11"],"编译器":["29.11"],"来将":["29.11"],"语法转化为":["29.11"],"向后兼容":["29.11"],"的javascript语法":["29.11"],"从而能够运行在当前和旧版本的浏览器或其他环境中":["29.11"],"js的静态检查":["29.12"],"静态检查是为了统一代码风格":["29.12"],"减少bug":["29.12"],"节约开发时间":["29.12"],"安装eslint":["29.12"],"eslint":["29.12"],"提取css文件":["29.14"],"之前我们都是使用":["29.14"],"来处理css":["29.14"],"它把css":["29.14"],"打包到js中":["29.14"],"在js文件加载的时候":["29.14"],"css兼容性处理":["29.15"],"css3的一些新特性在有的浏览器中不兼容":["29.15"],"需要添加后缀或者前缀才能生效":["29.15"],"下载依赖":["29.15"],"压缩css":["29.16"],"引入less或者sass":["29.17"],"less跟sass跟css一样不能被webpack识别":["29.17"],"需要借助loader来编译":["29.17"],"less比起sass要简单许多":["29.17"],"区分环境":["29.18"],"本地开发和部署线上":["29.18"],"各自所看重的点是不一样的":["29.18"],"本地环境":["29.18"],"不需要有输出文件":["29.18"],"打包文件都在内存中":["29.18"],"需要打印":["29.18"],"debug":["29.18"],"信息":["29.18"],"需要":["29.18"],"热更新":["29.18"],"源代码映射":["29.20"],"是一个用来生成源代码与构建后代码一一映射的文件的方案":["29.20"],"它会生成一个":["29.20"],"里面包含源代码和构建后代码每一行":["29.20"],"每一列的映射关系":["29.20"],"当构建后代码出错了":["29.20"],"会通过":["29.20"],"hotmodulereplacement":["29.22"],"hmr":["29.22"],"热模块替换":["29.22"],"在程序运行中":["29.22"],"替换":["29.22"],"添加或删除模块":["29.22"],"而无需重新加载整个页面":["29.22"],"开发时我们修改了其中一个模块代码":["29.22"],"默认会将所有模块全部重新打包编译":["29.22"],"速度很慢":["29.22"],"include":["29.24"],"exclude":["29.24"],"开发时我们需要使用第三方的库或插件":["29.24"],"所有文件都下载到":["29.24"],"缓存":["29.25"],"利用缓存可以大幅度提高构建速度":["29.25"],"每次打包时":["29.25"],"文件都要经过":["29.25"],"多进程":["29.26"],"thread":["29.26"],"如果项目规模较小或者打包速度还可以的话":["29.26"],"不建议配置多进程":["29.26"],"因为每一个进程开启和通信都需要耗费一定的时间":["29.26"],"每个进程启动就有大约为":["29.26"],"600ms":["29.26"],"左右开销":["29.26"],"这样反而会增加时间成本":["29.26"],"获取电脑的cpu核心数":["29.26"],"每个电脑":["29.26"],"cpu核心数":["29.26"],"transform":["29.29"],"禁用了":["29.29"],"自动对每个文件的":["29.29"],"图片压缩":["29.30"],"minimizer":["29.30"],"开发如果项目中引用了较多图片":["29.30"],"那么图片体积会比较大":["29.30"],"将来请求速度比较慢":["29.30"],"我们可以对图片进行压缩":["29.30"],"减少图片体积":["29.30"],"注意":["29.30"],"如果项目中图片都是在线链接":["29.30"],"那么就不需要了":["29.30"],"本地项目静态图片才需要进行压缩":["29.30"],"安装依赖":["29.30"],"代码分割":["29.32"],"split":["29.32"],"打包代码时会将所有":["29.32"],"文件打包到一个文件中":["29.32"],"体积太大了":["29.32"],"我们如果只要渲染首页":["29.32"],"就应该只加载首页的":["29.32"],"其他文件不应该加载":["29.32"],"所以我们需要将打包生成的文件进行代码分割":["29.32"],"生成多个":["29.32"],"渲染哪个页面就只加载某个":["29.32"],"这样加载的资源就少":["29.32"],"速度就更快":["29.32"],"主要做了两件事":["29.32"],"分割文件":["29.32"],"将打包生成的文件进行分割":["29.32"],"按需加载":["29.32","29.33"],"需要哪个文件就加载哪个文件":["29.32"],"多入口代码分割":["29.32"],"新建一个demo演示":["29.32"],"目录结构":["29.32"],"public":["29.32"],"sum":["29.32"],"app":["29.32"],"package":["29.32"],"新增":["29.33"],"count":["29.33"],"export":["29.33"],"default":["29.33"],"统一命名":["29.34"],"文件指纹策略是将文件名后面加上":["29.34"],"值":["29.34"],"例如我们在基础配置中用到的":["29.34"],"filename":["29.34"],"ext":["29.34"],"这里里面":["29.34"],"包起来的":["29.34"],"就叫占位符":["29.34"],"它们都是什么意思呢":["29.34"],"请看下面这个表":["29.34"],"占位符":["29.34"],"解释":["29.34"],"文件后缀名":["29.34"],"runtime配置":["29.35"],"问题":["29.35"],"当我们修改":["29.35"],"math":["29.35"],"文件再重新打包的时候":["29.35"],"因为":["29.35"],"contenthash":["29.35"],"原因":["29.35"],"preload":["29.36"],"prefetch":["29.36"],"告诉浏览器立即加载资源":["29.36"],"core":["29.37"],"pwa":["29.38"],"webpack原理篇":["29.39"]},{"0":["3.5","4.1","6.5","10.18","10.24","14.5","26.17","29.11"],"1":["7.6","9.0","9.1","10.5","10.18","15.4","15.7","15.10","15.11","26.28","29.28"],"2":["3.6","9.0","10.5","25.1","25.3","26.28","29.21","29.32"],"3":["3.6","20.3","25.1","28.17","28.18","28.19"],"4":["3.6","10.5","10.19","28.4","29.4","29.31"],"5":["26.8","29.4","29.32"],"6":["29.32"],"7":["29.8","29.32"],"8":["29.32"],"9":["3.5","29.10"],"10":["29.13"],"11":["8.14","8.15","25.1"],"18":["25.1"],"25":["7.13"],"37":["25.1"],"40":["18.4"],"50":["10.25","18.4"],"85":["3.5"],"100":["6.5","18.4"],"150":["10.25"],"200":["10.24","18.4"],"300":["10.2"],"304":["20.6"],"1500":["15.11"],"4444":["29.33"],"20000":["3.6"],"86176":["28.11"],"1234567890":["7.13"],"利用h5的":["0.0"],"拖拽":["0.0"],"drop":["0.2","0.7","0.12"],"dragenter":["0.2"],"dragover":["0.2"],"dragleave":["0.2"],"filelist":["0.3","0.4"],"对象":["0.3","26.16","28.18"],"也可以来自拖放操作生成的":["0.3"],"datatransfer":["0.3"],"还可以是来自在一个":["0.3"],"htmlcanvaselement":["0.3"],"上执行":["0.3"],"mozgetasfile":["0.3"],"方法后返回结果":["0.3"],"的几个相关事件":["0.3"],"onload":["0.3","2.5"],"filelist对象":["0.4"],"js":["0.6","0.8","0.10","2.4","2.8","3.2","10.4","10.8","10.9","10.10","10.17","10.22","12.0","12.1","12.2","12.4","12.5","15.8","16.1","16.5","17.0","17.2","17.4","17.7","17.9","18.2","20.5","20.6","23.3","23.9","23.23","23.24","23.26","26.9","26.16","26.17","26.20","26.24","26.27","28.4","28.5","28.17","28.18","29.1","29.3","29.11","29.14","29.16","29.22","29.24","29.26","29.38"],"div":["0.6","0.9","26.20"],"class":["0.6","15.8","16.1","23.22","23.23","23.26"],"main":["0.6","28.5","29.3","29.33","29.35"],"document":["0.7","0.8","0.9","10.8","10.9","10.10","10.22","10.25","29.33"],"getelementbyid":["0.7","10.8","10.9","10.10","10.22","10.25","29.33"],"文件流数组":["0.7"],"fileblodarr":["0.7"],"文件数组":["0.7"],"filearr":["0.7"],"拖拽上传事件":["0.7"],"function":["0.7","8.15","12.0","12.1","12.2","12.3","12.4","12.5","17.4","17.9","18.2","23.20","23.24","23.27","28.8","28.11","29.11"],"获取input元素":["0.8"],"let":["0.8","0.9","9.1","10.4","10.8","10.9","10.10","10.22","12.0","12.6","15.5","18.3","20.5","23.9","23.19"],"fileinput":["0.8"],"创建单个文件预览":["0.9"],"filediv":["0.9"],"createelement":["0.9"],"删除按钮":["0.9"],"removediv":["0.9"],"id":["0.9","10.2","15.11"],"length":["0.9","9.1","12.8","14.5","16.4","29.26"],"innerhtml":["0.9"],"文件名":["0.9","2.7","29.34"],"filename":["0.9","2.7","29.9"],"p":["0.9"],"name":["0.9","4.1","15.8","15.11","23.18","23.21","23.25","29.33"],"title":["0.9"],"缩略图":["0.9"],"图片直接展示":["0.9"],"其他文件根据文件类型展示不同的缩略图":["0.9"],"通过对id的检验识别出当前需要删除的文件":["0.10"],"目前因为是根据删除按钮的id判断":["0.10"],"所以删除一个文件":["0.10"],"会重新加载一次dom":["0.10"],"删除文件操作":["0.10"],"450px":["0.11"],"border":["0.11"],"1px":["0.11"],"dashed":["0.11"],"a89b9b":["0.11"],"y":["0.11","10.16","25.10"],"滚动条样式":["0.11"],"webkit":["0.11"],"scrollbar":["0.11"],"4px":["0.11"],"thumb":["0.11"],"radius":["0.11"],"10px":["0.11"],"在做文件拖拽上传的时候需要将":["0.12"],"的默认行为取消":["0.12"],"不然无法触发":["0.12"],"拖拽上传文件":["1.1"],"前端文件下载应该是一个老生常谈的问题了":["2.0"],"a标签":["2.1"],"浏览器可以打开预览的文件":["2.2"],"的问题":["2.2"],"例如":["2.2","18.7","26.26","28.4"],"txt":["2.2"],"png":["2.2","10.17","19.4","19.5"],"jpg等文件":["2.2"],"模拟a标签下载":["2.3"],"然后通过":["2.4"],"去模拟":["2.4"],"a":["2.4","14.5","16.1","16.7","18.2","18.3","29.11"],"标签点击来下载文件":["2.4"],"兼容性查询":["2.4","2.5"],"可以看出来主流浏览器基本上都兼容此方法":["2.4","2.5"],"截图来源于":["2.4","2.5"],"can":["2.4"],"i":["2.4","28.9","28.10","29.16","29.32"],"通过":["2.5","28.18"],"回调函数的":["2.5"],"result":["2.5"],"属性返回":["2.5"],"data":["2.5","11.4","25.7"],"url":["2.5"],"格式的字符串":["2.5"],"base64编码":["2.5"],"href":["2.6","19.5"],"应该是最简单直接的下载了吧":["2.6"],"不过大部分时间都不能满足我们的需求":["2.6"],"所以现在用的比较少了":["2.6"],"下载文件":["2.7"],"param":["2.7"],"string":["2.7","23.9","23.18","23.19","23.21","23.22","23.25","23.27"],"downloadurl":["2.7"],"请求的地址":["2.7"],"同样不能下载浏览器可以浏览的文件":["2.8"],"说实话":["2.8"],"iframe接触的比较少":["2.8"],"如果有错误或者不足的地方请大家补充":["2.8"],"谢谢":["2.8"],"用过的下载文件的方法":["2.9"],"if":["3.0","3.3","12.1","12.3","12.4","12.7","12.8","16.4","18.3","26.22"],"else":["3.0","3.1","3.3","14.5"],"的项目代码吧":["3.0"],"逻辑或":["3.1"],"的短路运算":["3.1"],"若左边能转成true":["3.1"],"例子":["3.2"],"条件为":["3.2"],"true":["3.2","10.6","14.5","18.3","19.4"],"时返回1":["3.2"],"反之返回0":["3.2"],"const":["3.2","3.5","8.12","16.3","20.5","20.6","26.16","26.17","26.29","28.7","29.4","29.12","29.26"],"fn":["3.2","12.1","12.5","12.6","18.2"],"更高":["3.3"],"但是我想大家应该都觉得它写起来比较麻烦吧":["3.3"],"反正我觉得很麻烦":["3.3"],"例":["3.3"],"有a":["3.3"],"b":["3.3","3.6","16.5","29.11"],"c":["3.3","3.6","10.21","28.11"],"d四种种类型":["3.3"],"在a":["3.3"],"都是根据不同得参数使用不同得数据":["3.4"],"算法":["3.4"],"函数":["3.4","7.11","8.6","12.2","26.28"],"策略模式就是将一系列算法封装起来":["3.4"],"getdiscount":["3.5"],"userkey":["3.5"],"普通会员":["3.5"],"return":["3.5","3.6","12.7","12.8","14.5","15.5","16.4","18.4","26.29","29.11"],"年费会员":["3.5"],"我们有很多的方法去优化我们的代码":["3.7"],"提高我们代码的可读性":["3.7"],"就不多说了":["4.0"],"写这篇文章的初衷主要是丰富自己的知识和解决遇到的问题":["4.0"],"因为我基本上没接触过":["4.0"],"child1":["4.1"],"来自parent的消息":["4.1"],"frameborder":["4.1"],"同时还可以使用":["4.1"],"window":["4.1","8.0","8.4","9.1"],"onhashchange":["4.1"],"来监听参数的变化":["4.1"],"减少if":["5.1"],"问我能不能做一个九宫格抽奖来决定我们晚上吃什么":["6.0"],"flex":["6.1"],"就足够了":["6.1"],"抽奖盒子固定宽高":["6.1"],"v":["6.3","25.7","26.24"],"for":["6.3","26.24"],"动态生成九个":["6.3"],"item":["6.3","6.4"],"select":["6.3"],"样式是用来控制转动的时候当前选中的":["6.3"],"为每一个":["6.4"],"添加单机事件":["6.4"],"appoint":["6.5"],"index":["6.5","20.3","20.5","26.7","28.5","28.20"],"value":["6.5","12.8","26.14","26.17"],"定时器":["6.5"],"timer":["6.5","12.6"],"圈数":["6.5"],"turnsnumbers":["6.5"],"转多少圈中奖":["6.5"],"初始转动速度":["6.5"],"剩余几个中奖":["6.5"],"surplusnum":["6.5"],"博客主要记录一些学习的文章":["6.6","29.39"],"什么是正则表达式":["7.0"],"变量":["7.1"],"new":["7.1","12.7","14.6","16.3","29.7"],"regexp":["7.1","12.7"],"正则表达式":["7.1"],"ig":["7.1"],"简写":["7.1"],"匹配字符串的结尾":["7.2"],"匹配前面的子表达式零次或多次":["7.2"],"至少匹配前面的子表达式一次":["7.2"],"只能匹配前面的子表达式零次或一次":["7.2"],"n":["7.2","9.1","23.21"],"n是一个非负整数":["7.2"],"何时使用正则表达式":["7.3"],"验证字符串格式":["7.4"],"查找敏感词":["7.5"],"字符串":["7.7","7.11"],"只要字符串格式满足正则表达式的规则就会返回true":["7.7"],"否则返回false":["7.7"],"缺点":["7.11"],"如果只调用一次exec":["7.11"],"即使正则表达式后加了":["7.11"],"千分符":["7.13"],"var":["7.13","8.5","18.2"],"str":["7.13"],"reg":["7.13"],"d":["7.13","10.21","16.5","19.2","28.10","29.12","29.15","29.30","29.32"],"验证字符串的方法是test":["7.14"],"查找字符串的方法有多个":["7.14"],"timeoutid":["8.1"],"settimeout":["8.1","8.9","11.5"],"这是一个可选语法":["8.2"],"你可以使用字符串而不是":["8.2"],"在":["8.2","10.28","26.12","28.20"],"毫秒之后编译和执行字符串":["8.2"],"使用该语法是":["8.2"],"表示定时器的编号":["8.3"],"这个值可以传递给":["8.3"],"cleartimeout":["8.3"],"来取消该定时器":["8.3"],"setinterval":["8.4","8.7"],"intervalid":["8.5"],"延迟":["8.6"],"毫秒后执行的":["8.6"],"code":["8.6"],"用来标识通过":["8.7"],"创建的计时器":["8.7"],"这个值可以用来作为":["8.7"],"实际延时比设定值更久的原因":["8.8"],"最小延时":["8.10"],"之外":["8.10"],"chrome":["8.11"],"safari":["8.11"],"就会发现":["8.12"],"每次的结果都会存有差异":["8.12"],"javascript":["8.12","18.6"],"starttime":["8.12"],"遇到的关于无法清除定时器的问题":["8.13"],"time":["8.14"],"定义一个函数":["8.14","8.15"],"实现倒计时功能":["8.14","8.15"],"countdown":["8.15"],"事件循环":["8.16"],"这个语音上传有两种方式":["9.0"],"直接选择文件上传":["9.0"],"输入文字":["9.0"],"atob":["9.1"],"split":["9.1"],"使用atob":["9.1"],"将base64":["9.1"],"转为文本文件":["9.1"],"其实是因为工作中有一个小需求":["10.0"],"就是给特定的区域做水印":["10.0"],"思来想去":["10.0"],"canvas":["10.1","10.8","10.9","10.10","10.22","10.27","10.28"],"简介":["10.1"],"width":["10.2","29.5"],"height":["10.2"],"只有":["10.3"],"ie9":["10.3"],"ie应该没有人在用了吧":["10.3"],"之下的浏览器不支持":["10.3"],"比如":["10.4","11.1","23.9","28.15"],"webgl":["10.4"],"使用了基于":["10.4"],"opengl":["10.4"],"es的3d":["10.4"],"上下文":["10.4","26.28"],"experimental":["10.4"],"获取canvas元素对象":["10.4"],"创建路径起始点":["10.5"],"调用绘制方法去绘制出路径":["10.5"],"把路径封闭":["10.5"],"一旦路径生成":["10.5"],"通过描边或填充路径区域来渲染图形":["10.5"],"下面是需要用到的方法":["10.5"],"beginpath":["10.5"],"新建一条路径":["10.5"],"路径一旦创建成功":["10.5"],"图形绘制命令被指向到路径上生成路径":["10.5"],"moveto":["10.5"],"从":["10.6"],"弧度开始到":["10.6"],"弧度结束":["10.6"],"anticlosewise":["10.6"],"是布尔值":["10.6"],"表示逆时针":["10.6"],"false":["10.6"],"表示顺时针":["10.6"],"默认是顺时针":["10.6"],"注意":["10.6","10.17","20.3"],"这里的度数都是弧度":["10.6"],"在顺时针的情况下":["10.6"],"如果两个参数的差为math":["10.6"],"pi":["10.6"],"线条":["10.7"],"上下各占线宽的一半":["10.8"],"ctx":["10.8","10.9","10.25","26.28"],"getcontext":["10.9","10.24","10.25"],"2d":["10.9","10.24","10.25"],"每个部分都有各自独立的矩形拐角":["10.10"],"miter":["10.10"],"默认":["10.10"],"通过延伸相连部分的外边缘":["10.10"],"使其相交于一点":["10.10"],"形成一个额外的菱形区域":["10.10"],"linedashoffset":["10.11"],"属性来制定虚线样式":["10.11"],"方法接受一个数组":["10.11"],"来指定线段与间隙的交替":["10.11"],"位置填充指定的文本":["10.12"],"绘制的最大宽度是可选的":["10.12"],"stroketext":["10.12"],"位置绘制文本边框":["10.12"],"至于它们两个的区别":["10.12"],"sheight":["10.13"],"dx":["10.13"],"dy":["10.13"],"dwidth":["10.13"],"dheight":["10.13"],"参数表示绘制的图片":["10.13"],"表示":["10.13"],"的矩形":["10.13"],"裁剪":["10.13"],"选择框的左上角":["10.13"],"canvas状态存储在栈中":["10.14"],"每当save":["10.14"],"方法被调用后":["10.14"],"当前的状态就被推送到栈中保存":["10.14"],"一个绘画状态包括":["10.14"],"当前应用的变形":["10.14"],"即移动":["10.14"],"旋转和缩放":["10.14"],"strokestyle":["10.14"],"fillstyle":["10.14","10.24"],"globalalpha":["10.14"],"linewidth":["10.14"],"linecap":["10.14"],"linejoin":["10.14"],"miterlimit":["10.14"],"变形":["10.15"],"x":["10.16","16.3","18.4","23.9","23.20"],"接受两个参数":["10.16"],"是左右偏移量":["10.16"],"是上下偏移量":["10.16"],"它是顺时针方向的":["10.17"],"以弧度为单位的值":["10.17"],"旋转的中心是坐标原点":["10.17"],"image":["10.17"],"分别是横轴和纵轴的缩放因子":["10.18"],"可以为负数":["10.18"],"值默认对":["10.18"],"小于":["10.18"],"则缩小":["10.18"],"大于则放大":["10.18"],"如果参数为负实数":["10.18"],"相当于以":["10.18"],"e":["10.20"],"f":["10.20"],"这个方法是将当前的变形矩阵乘上一个基于自身参数的矩阵":["10.20"],"如下面的矩阵所示":["10.20"],"一个简单的案例":["10.22"],"组合与裁剪":["10.23"],"blue":["10.24"],"fillrect":["10.24","10.25"],"source":["10.24","28.11","29.18","29.20"],"over":["10.24"],"绘制一个矩形":["10.25"],"动画":["10.26"],"清空":["10.27"],"除非接下来要画的内容会完全充满":["10.27"],"例如背景图":["10.27"],"上绘制内容是用":["10.28"],"canvas教程":["10.29"],"什么是eventloop":["11.0"],"evnetloop是js的运行机制":["11.0"],"不进入主线程":["11.1"],"而进入任务队列的任务":["11.1"],"只有引擎认为某个异步任务可以执行了":["11.1"],"ajax":["11.1"],"操作从服务器得到了结果":["11.1"],"该任务":["11.1"],"该过程可能产生一系列异步任务":["11.2"],"这些异步任务分别进入对应的任务队列":["11.2"],"宏任务队列":["11.2"],"macrotask":["11.2"],"queue":["11.2"],"跟":["11.2","29.17"],"微任务队列":["11.2"],"microtask":["11.2"],"概念性的东西都说完了":["11.3"],"resolve":["11.4","16.3","26.10"],"reject":["11.4","16.3"],"promise1":["11.4"],"promise2":["11.4","16.3"],"then":["11.4"],"fn2":["11.5"],"await":["11.5"],"settimeout1":["11.5"],"看完一定懂的":["11.6"],"原型链":["12.0","17.5"],"上即可":["12.0"],"l代表左侧的实列":["12.0"],"r代表右侧的类型":["12.0"],"instance":["12.0"],"of":["12.0","14.5"],"l":["12.0","14.5"],"r":["12.0"],"获取类型的原型对象prototype":["12.0"],"返回对象":["12.1"],"实例":["12.1","28.15"],"如果构造函数有返回对象":["12.1"],"则对象实例就是构造函数返回的对象":["12.1"],"否则就返回this作为对象实例":["12.1"],"mynew":["12.1"],"fn必须是一个函数":["12.1"],"typeof":["12.1","12.4","12.7"],"throw":["12.1","12.4","16.2","16.3"],"需要一个一个的列举出来":["12.2"],"立即执行":["12.2"],"prototype":["12.2","12.3","12.4","15.2","17.2"],"mycall":["12.2"],"context":["12.2","12.3","12.4","26.12"],"arg":["12.2","12.3","23.24","29.11"],"如果context不存在":["12.2","12.3"],"undefined":["12.2","12.3"],"nul":["12.2","12.3"],"myapply":["12.3"],"则指向window":["12.3"],"方法":["12.4","17.7","17.8"],"且绑定过程中提供的this被忽略":["12.4"],"继承原函数的this对象":["12.4"],"但是参数还是会使用":["12.4"],"mybind":["12.4"],"this必须是一个函数":["12.4"],"error":["12.4"],"debounce":["12.5"],"delay":["12.5","12.6"],"保存一个timer":["12.5"],"throttle":["12.6"],"保存timer":["12.6"],"cache":["12.7"],"weakmap":["12.7"],"判断是否是引用类型":["12.7"],"如果不是则直接返回":["12.7"],"null":["12.7","12.8","15.5","28.6"],"object":["12.7"],"判断是否是特殊的对象类型":["12.7"],"date":["12.7"],"成功的回调":["12.8"],"onfulfilledcallbacks":["12.8"],"失败的回调":["12.8"],"onrejectedcallbacks":["12.8"],"执行后的值":["12.8"],"promiseresult":["12.8","16.3"],"成功的方法":["12.8"],"如果状态不是pending":["12.8"],"则直接返回":["12.8","16.4"],"因为状态已经改变就不可再次改变":["12.8","16.4"],"状态置为成功的状态fulfiled":["12.8","16.4"],"执行后的值改为传进来的值":["12.8","16.4"],"查看是否存在可执行的回调":["12.8","16.4"],"while":["12.8","16.4","18.3"],"shift":["12.8","16.4"],"console":["12.8","14.9","15.2","16.4","18.3","18.4","26.17","29.11","29.32","29.33"],"log":["12.8","14.9","15.2","16.4","18.3","18.4","26.17","29.11","29.32","29.33"],"失败的方法":["12.8","16.4"],"缓存列表":["12.9","14.6"],"添加订阅":["12.9"],"subscribe":["12.9","14.10"],"ob":["12.9","14.6","14.10"],"add":["12.9","14.6","14.10","26.9"],"移除订阅":["12.9"],"unsubscribe":["12.9","14.10"],"delete":["12.9","14.10"],"canvas基础":["13.1"],"设计模式":["14.1","14.12","15.14"],"design":["14.1"],"单一职责原则":["14.2"],"一个程序只做好一件事":["14.2"],"如果功能过于复杂就拆分开":["14.2"],"每个部分保持独立":["14.2"],"o":["14.2"],"openclosed":["14.2"],"概念":["14.4","14.8"],"events":["14.5"],"push":["14.5"],"optimize":["14.5"],"cost":["14.5"],"by":["14.5"],"using":["14.5"],"boolean":["14.5","23.21"],"flag":["14.5"],"marked":["14.5"],"at":["14.5"],"registration":["14.5"],"instead":["14.5"],"hash":["14.5","29.35"],"lookup":["14.5"],"test":["14.5","28.4","28.5"],"hashookevent":["14.5"],"observers":["14.6"],"set":["14.6"],"添加观察":["14.6"],"addobserver":["14.6"],"取消观察":["14.6"],"removeobserver":["14.6"],"foreach":["14.9"],"update":["14.9"],"观察者":["14.9"],"watcher":["14.9"],"将":["14.9","23.27","29.9"],"target":["14.9"],"指向当前观察者":["14.9"],"do":["14.9"],"something":["14.9"],"publish":["14.10"],"topic":["14.10"],"都是为了实现一对多的依赖关系":["14.11"],"单例模式":["15.0"],"列子":["15.1","15.4"],"在项目中的":["15.1"],"this":["15.2","15.5","15.8","16.3","26.12"],"初始化":["15.2"],"init":["15.2","15.5","26.4"],"初始化操作":["15.2"],"我是单例":["15.2"],"获取实例的静态方法":["15.2"],"getexample":["15.2"],"工厂模式":["15.3"],"操作函数":["15.5"],"example":["15.5"],"建造者模式":["15.6"],"建造者":["15.8"],"carbuilder":["15.8"],"constructor":["15.8","16.1","17.2","23.21"],"代理模式":["15.9"],"houses":["15.11"],"一室一厅":["15.11"],"price":["15.11"],"单间配套":["15.11"],"享元模式":["15.12"],"flyweight":["15.12"],"线程池":["15.13"],"连接池":["15.13"],"高考考场":["15.13"],"我是不会承认主要目的是为了面试做准备的":["16.0"],"promise的出现是为了解决回调地狱":["16.0"],"等":["16.1"],"然后根据promises":["16.1"],"规范得知":["16.1"],"状态一经改变就不可再次改变":["16.1"],"就可以得出最基础的promise对象":["16.1"],"代码如下":["16.1"],"mypromise":["16.1","16.3"],"executor":["16.1"],"执行传进来的回调函数":["16.1"],"的话":["16.2"],"那就相当于执行了":["16.2"],"rejecte":["16.2"],"这样我们就需要用到":["16.2"],"reason":["16.3"],"成功":["16.3"],"resolvemicrotask":["16.3"],"queuemicrotask":["16.3"],"then执行阶段错误捕获":["16.3"],"try":["16.3"],"resolvepromise":["16.3"],"catch":["16.3"],"err":["16.3"],"状态置为失败的状态rejected":["16.4"],"测试我们的代码是否符合promises":["16.5"],"规范可以借助":["16.5"],"promises":["16.5"],"aplus":["16.5"],"tests":["16.5"],"来检测":["16.5"],"初始化项目":["16.5"],"npm":["16.5","25.4","28.9","28.10","29.16","29.32","29.38"],"它就像它的名字一样":["16.6"],"承诺它过一段时间会给你一个结果":["16.6"],"构造函数的显式原型":["17.0"],"和其实例的隐式原型":["17.0"],"都指向同一个地方":["17.0"],"原型对象":["17.0","17.4"],"同一个构造函数创建的实例的隐式原型":["17.0"],"相同":["17.0"],"并且都跟该构造函数的显式原型":["17.0"],"一致":["17.0"],"验证一下":["17.0"],"函数与对象":["17.1"],"构造函数也是一个函数":["17.2"],"可以通过new关键字创建一个实例的函数就是构造函数":["17.2"],"function的本质也是一个函数":["17.2"],"function是它自己的实例":["17.2"],"存在于function的显式原型":["17.2"],"中":["17.2","23.4","29.7"],"保存了指向function的一个":["17.2"],"引用":["17.2","29.5"],"验证":["17.2","17.4"],"构造函数创建":["17.3"],"跟函数一样":["17.3"],"字面量方法的本质是new":["17.3"],"创建的是一个没有原型的对象":["17.3"],"构造函数创建的对象的原型都指向其构造函数":["17.3"],"object也是一个构造函数":["17.3"],"也就是说构造函数的":["17.4"],"是object构造函数的一个实例":["17.4"],"原型链的终点是null":["17.4"],"object的原型对象":["17.4"],"的隐式原型":["17.4"],"就是null":["17.4"],"person构造函数":["17.4"],"继承":["17.5"],"了构造函数的":["17.5"],"实例本身没有这个属性或者方法":["17.5"],"那js会沿着":["17.5"],"原型相关的方法":["17.6"],"判断一个对象是否是另外一个对象的原型":["17.7"],"但是需要注意只要某个对象存在原型链上":["17.7"],"就会返回true":["17.7"],"该方法接收两个参数":["17.8"],"第一个是现有对象":["17.8"],"第二个是新设置的原型对象":["17.8"],"person":["17.9","23.18","23.21","23.25"],"什么是作用域":["18.0"],"作用域就是代码执行的环境":["18.0"],"在函数作用域外部无法访问":["18.2"],"外层变量":["18.2"],"referenceerror":["18.3"],"没有定义":["18.3"],"bar":["18.4"],"词法环境":["18.5"],"的引用捆绑在一起":["18.5"],"或者说函数被引用包围":["18.5"],"这样的组合就是":["18.5"],"closure":["18.5"],"具有自动垃圾回收机制":["18.6"],"gc":["18.6"],"garbage":["18.6"],"就是":["18.7"],"当变量进入环境时":["18.7"],"在函数中声明一个变量":["18.7"],"引用计数":["18.8"],"引用计数的含义是跟踪记录每个值被引用的次数":["18.8"],"第4版":["18.9"],"但是平常忙于工作中":["19.0"],"reco主题":["19.1"],"安装":["19.2","29.14","29.30"],"vuepress":["19.2"],"install":["19.2","25.4","29.30"],"theme":["19.3"],"layout":["19.3"],"vue":["19.3","25.6","26.4","26.6","26.9","26.19"],"public":["19.3","28.5"],"副标题设置null来禁用":["19.4"],"heroimage":["19.4"],"hero":["19.4"],"herotext":["19.4"],"但也不会像你想象的那么糟":["19.5"],"网站描述":["19.5"],"dest":["19.5"],"dist":["19.5","28.11"],"打包后的文件存放路径":["19.5"],"base":["19.5"],"blog":["19.5"],"打包后的静态资源的路径":["19.5"],"网站的图标":["19.5"],"head":["19.5"],"link":["19.5"],"rel":["19.5"],"icon":["19.5"],"avatar":["19.5"],"不然pages需要收费":["19.6"],"在仓库的setting中找到pages":["19.6"],"开启pages":["19.6"],"浏览器会下载页面上的所有资源":["20.0"],"如html":["20.0"],"强缓存":["20.1"],"由服务器设置过期时间":["20.1"],"是":["20.2","23.1","28.16","29.34"],"http":["20.2","20.3","20.5","20.6"],"缓存机制中实现强缓存的一种方式":["20.2"],"它通过在响应头部中加入一个过期时间来控制缓存":["20.2"],"请求头中没有":["20.3"],"no":["20.3"],"或":["20.3"],"pragma":["20.3"],"这两个信息":["20.3"],"强制刷新会在请求头中添加":["20.3"],"直接通过浏览器的地址栏访问的资源缓存会失效":["20.3"],"跟强制刷新一样会在请求头中添加":["20.3"],"接下来我们通过一个简单的页面来实践一下":["20.3"],"目录结构":["20.3"],"我们准备两个文件":["20.3"],"和":["20.3","20.4","23.9","29.25"],"html":["20.3","28.5","29.5","29.32"],"再准备两张图片":["20.3"],"yml":["20.3"],"jpg":["20.3"],"modified":["20.4"],"since":["20.4"],"etag":["20.4"],"当浏览器第一次请求资源时":["20.4"],"跟空的":["20.5","20.6"],"body":["20.5","20.6","29.5"],"对强缓存的例子稍微修改一下":["20.5"],"require":["20.5","20.6","29.12","29.26"],"fs":["20.5","20.6"],"path":["20.5","26.29","29.4","29.34"],"server":["20.5"],"createserver":["20.5"],"req":["20.5"],"res":["20.5"],"filepath":["20.5"],"来判断该资源是否发生变化":["20.6"],"如果发生变化则返回新的资源":["20.6"],"并更新":["20.6"],"属性":["20.6"],"如果没有发生变化":["20.6"],"则返回":["20.6"],"我才开始学习":["23.0"],"typescript":["23.0","23.8","23.16"],"从官网的描述来看":["23.1"],"的理由":["23.2"],"更好的开发体验":["23.2"],"可以清晰的知道值的类型":["23.2"],"提前发现类型相关的代码错误":["23.2"],"编写的代码":["23.2"],"编译器可以使用":["23.3"],"node":["23.3","25.1","28.11","29.4"],"我们可以在声明一个变量之后设置我们想要添加的类型":["23.4"],"type":["23.4","25.10"],"布尔值":["23.5"],"除了支持十进制和十六进制字面量":["23.6"],"typescript还支持ecmascript":["23.6"],"2015中引入的二进制和八进制字面量":["23.6"],"跟javascript一样":["23.7"],"可以使用双引号":["23.7"],"或单引号":["23.7"],"表示字符串":["23.7"],"定义数组类型有两种方式":["23.8"],"在元素类型后面接上":["23.8"],"不匹配就会抛出异常":["23.9"],"你可以定义一对值分别为":["23.9"],"number":["23.9","23.19","23.20","23.21","23.27"],"类型的元组":["23.9"],"它是一种可以将多个常量分组为一个并附加一系列值的类型":["23.10"],"使用枚举定义的常量称为枚举器列表":["23.10"],"默认情况下":["23.10"],"枚举器从零开始按顺序编号":["23.10"],"可以是任意的一种类型":["23.11"],"在不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查就可以使用":["23.11"],"类型表示没有任何类型":["23.12"],"通常当一个函数没有返回值时":["23.12"],"它的返回值类型是":["23.12"],"两者各自有自己的类型分别叫做":["23.13"],"类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型":["23.14"],"类型是任何类型的子类型":["23.14"],"也可以赋值给任何类型":["23.14"],"相信我":["23.15"],"我知道自己在干什么":["23.15"],"类型断言好比其它语言里的类型转换":["23.15"],"但是不进行特殊的数据检查和解构":["23.15"],"它没有运行时的影响":["23.15"],"只是在编译阶段起作用":["23.15"],"类型断言有两种形式":["23.15"],"会自动推断变量的类型":["23.16"],"我们还可以将变量设置为联合类型":["23.17"],"联合类型是可以分配多个类型的变量":["23.17"],"interface":["23.18","23.25"],"age":["23.18","23.19","23.21"],"lucy":["23.19"],"它接受两个类型为":["23.20"],"的变量":["23.20"],"并返回一个":["23.20"],"iscool":["23.21"],"hasformatter":["23.22"],"format":["23.22"],"类的实例类型和一个构造函数":["23.23"],"的一种特性":["23.24"],"identity":["23.24"],"t":["23.24","23.25"],"括起泛型类型":["23.26"],"跟在类名后面":["23.26"],"缩小到更特定的类型":["23.27"],"addanother":["23.27"],"val":["23.27"],"ts":["23.27","26.2","26.7"],"www":["23.28"],"tsx":["24.1","26.5","26.19"],"但原生拖拽还存在许多问题":["25.0"],"如兼容性":["25.0"],"用户体验和可访问性等":["25.0"],"devdependencies":["25.1"],"types":["25.1"],"可调整大小":["25.2"],"网格吸附":["25.2"],"而不是使用":["25.3"],"vuex":["25.3"],"或者":["25.3"],"pinia":["25.3"],"以减少依赖项":["25.3"],"采用":["25.3"],"createapp":["25.6","26.9"],"from":["25.6","26.9","26.10","29.32"],"style":["25.6","29.22"],"grid":["25.7"],"model":["25.7"],"h":["25.10"],"w":["25.10"],"类型":["25.11"],"名称":["25.12"],"说明":["25.13"],"回调参数":["25.13"],"拖拽算法优化":["25.14"],"发生碰撞后的位置计算":["25.14"],"并提出问题":["25.15"],"webp":["26.0"],"记得第一次写":["26.0"],"git仓库":["26.1"],"搭建项目":["26.3"],"vite":["26.4"],"latest":["26.4"],"my":["26.4","28.5","29.1"],"app":["26.4","26.9"],"template":["26.4"],"vue3":["26.5","26.11"],"中使用":["26.5"],"jsx":["26.5","26.18"],"啦":["26.5"],"的默认图标库还需要安装图标库":["26.6"],"icons":["26.6"],"src":["26.7","26.10","28.5","28.11","29.1","29.3"],"文件下新增":["26.7"],"文件夹":["26.7"],"文件":["26.7","28.19","28.20","29.35"],"内容如下":["26.7"],"import":["26.7","26.9","28.2","29.32"],"createrouter":["26.7"],"createwebhistory":["26.7"],"routerecordraw":["26.7"],"安装sass":["26.8"],"其实我就是觉得新东西应该去用一下试试看":["26.9"],"yarn":["26.9"],"挂载":["26.9"],"export":["26.10","26.29"],"default":["26.10","26.29"],"defineconfig":["26.10"],"alias":["26.10"],"dirname":["26.10"],"对于":["26.11"],"created":["26.12"],"生命周期之前执行":["26.12"],"可直接写":["26.12"],"await语法":["26.12"],"中你应该避免使用":["26.12"],"因为它不会找到组件实例":["26.12"],"参数":["26.12"],"接收两个参数":["26.12"],"props":["26.12","26.28"],"来访问组件的生命周期钩子":["26.13"],"下表包含如何在":["26.13"],"setup":["26.13","26.28","26.29"],"内部调用生命周期钩子":["26.13"],"选项式":["26.13"],"api":["26.13","29.37"],"property":["26.14"],"指向该内部值":["26.14"],"template中可以直接使用":["26.14"],"不需要":["26.14"],"调用":["26.14"],"script和jsx中都需要使用":["26.14"],"proxy对象":["26.15"],"直接解构":["26.15"],"的话会丢失响应性":["26.15"],"如果需要结构的化":["26.15"],"需要借助":["26.15"],"torefs":["26.15"],"函数转换":["26.15"],"相关api":["26.15"],"readonly":["26.15"],"接受一个对象":["26.15"],"的返回值返回一个不可变的响应式":["26.16"],"ref":["26.16","26.17"],"count":["26.16","26.17"],"无法获取依赖源的新旧值":["26.17"],"logs":["26.17"],"的插值与":["26.19"],"模板语法中的插值一样":["26.19"],"使用模板字符串或者使用数组":["26.20"],"使用模板字符串两个类名之间使用空格隔开":["26.20"],"模板字符串":["26.20"],"show":["26.22"],"指令":["26.22","26.24"],"没有":["26.22"],"使用":["26.22"],"需要渲染列表我们只需要使用js":["26.24"],"的数组方法":["26.24"],"map":["26.24","29.18"],"就可以了":["26.24"],"而是改成了":["26.26"],"on":["26.26"],"click":["26.26"],"事件是":["26.26"],"onclick":["26.26","29.33"],"如果需要使用事件修饰符":["26.26"],"就需要借助":["26.26"],"model语法的":["26.27"],"正常写法":["26.27"],"input":["26.27"],"或者使用":["26.28"],"renderslot":["26.28"],"函数默认接收两个参数":["26.28"],"scss":["26.29"],"definecomponent":["26.29"],"isshowroutes":["26.29"],"computed":["26.29"],"currentpath":["26.29"],"useroute":["26.29"],"el":["26.29"],"基础配置优化篇":["27.1"],"上一篇文章把webpack的基本配置跟一些优化都说过了":["28.0"],"loader":["28.1","28.7","29.15","29.17","29.22","29.23"],"用于对模块的源代码进行转换":["28.2"],"可以使你在":["28.2"],"将按照相反的顺序执行":["28.3"],"链中的第一个":["28.3"],"将其结果":["28.3"],"也就是应用过转换后的资源":["28.3"],"传递给下一个":["28.3"],"依此类推":["28.3"],"最后":["28.3"],"类":["28.4","28.15"],"的执行优级为":["28.4"],"相同优先级的":["28.4"],"执行顺序为":["28.4"],"从右到左":["28.4"],"从下到上":["28.4"],"此时loader执行顺序":["28.4"],"loader3":["28.4"],"loader2":["28.4"],"loader1":["28.4"],"module":["28.4","28.8","29.6","29.12","29.15","29.18","29.20"],"rules":["28.4"],"其它需要在":["28.5"],"链中传递的信息":["28.5"],"我们写一个简单的loader测试一下":["28.5"],"新建一个demo":["28.5"],"文件目录结构如下":["28.5"],"webpack":["28.5","28.13","28.17","29.1","29.6","29.30"],"loaders":["28.5","28.10"],"config":["28.5","29.4","29.32"],"webpack配置文件":["28.5"],"package":["28.5"],"json":["28.5"],"简单配置一下":["28.5"],"传递map":["28.6"],"让source":["28.6"],"map不中断":["28.6"],"传递meta":["28.6"],"让下一个loader接收到其他参数":["28.6"],"当调用":["28.6"],"async":["28.7"],"异步回调":["28.7"],"返回":["28.7"],"callback":["28.7"],"exports":["28.8","29.12","29.15"],"content":["28.8"],"利用正则把接受的文件内容的console":["28.8"],"替换为空":["28.8"],"语法编译成":["28.9"],"es5":["28.9"],"语法":["28.9"],"下载依赖":["28.9"],"core":["28.9"],"utils":["28.10"],"remainingrequest":["28.11"],"users":["28.11"],"desktop":["28.11"],"modules":["28.11","29.24"],"css":["28.11","29.7","29.16","29.22"],"cjs":["28.11"],"plugin":["28.12","28.17","29.12","29.14","29.30","29.32"],"的支柱功能":["28.13"],"自身也是构建于":["28.13"],"你在":["28.13"],"在运行过程中会广播事件":["28.14"],"插件只需要监听它所关心的事件":["28.14"],"就能加入到这条生产线中":["28.14"],"去改变生产线的运作":["28.14"],"的事件流机制保证了插件的有序性":["28.14"],"使得整个系统扩展性很好":["28.14"],"深入浅出":["28.14"],"站在代码逻辑的角度就是":["28.14"],"在编译代码过程中":["28.14"],"会触发一系列":["28.14"],"钩子事件":["28.14"],"插件所做的":["28.14"],"在相应的钩子注册事件":["28.14"],"它扩展":["28.15"],"extends":["28.15"],"自":["28.15"],"tapable":["28.15"],"用来注册和调用插件":["28.15"],"这个对象会在首次启动":["28.15"],"时创建":["28.15"],"我们可以通过":["28.15"],"对象上访问到":["28.15"],"webapck":["28.15"],"的主环境配置":["28.15"],"从文档可知":["28.16"],"compile":["28.16"],"synchook":["28.16"],"也就是同步钩子":["28.16"],"只能用tap注册":["28.16"],"hooks":["28.16","28.19"],"tap":["28.16"],"compilationparams":["28.16"],"钩子":["28.17","28.18"],"它是打包输出前触发":["28.17","28.18"],"如何获取打包输出的资源":["28.17"],"compilation":["28.17"],"assets":["28.17"],"可以获取所有即将输出的资源文件":["28.17"],"实现":["28.17","28.18"],"plugins":["28.17","28.18","29.4"],"banner":["28.17"],"如何清空上次打包内容":["28.18"],"获取打包输出目录":["28.18"],"通过文件操作清空内容":["28.18"],"outputfilesystem":["28.18"],"操作文件":["28.18"],"开发思路":["28.19"],"在哪做":["28.19"],"compiler":["28.19"],"emit":["28.19"],"它是在打包输出前触发":["28.19"],"我们需要分析资源大小同时添加上分析后的":["28.19"],"md":["28.19"],"来实现":["28.20"],"输出":["28.20"],"前将内联":["28.20"],"注入进去":["28.20"],"删除多余的":["28.20"],"如何操作":["28.20"],"官方文档open":["28.20"],"in":["28.20","29.7"],"长篇文章":["28.21"],"不知道大家面试的时候有没有遇到过这种情况":["29.0"],"面试官问你":["29.0"],"了解过webpack嘛":["29.0"],"现在的文件目录结构":["29.1"],"安装依赖":["29.2","29.16","29.32","29.38"],"在本地安装webpack跟webpack":["29.2"],"cli":["29.2","29.32"],"mode":["29.3","29.4"],"development":["29.3","29.4"],"生产模式":["29.3","29.4"],"才能解析":["29.4"],"插件":["29.4","29.14"],"扩展":["29.4"],"的功能":["29.4"],"模式":["29.4"],"主要由两种模式":["29.4"],"开发模式":["29.4"],"production在根目录下新建一个":["29.4"],"js的核心模块":["29.4"],"专门用来处理文件路径":["29.4"],"中引用这个文件":["29.5"],"只有在入口文件中":["29.5"],"的文件才能打包输出":["29.5"],"background":["29.5"],"color":["29.5"],"yellowgreen":["29.5"],"box1":["29.5"],"200px":["29.5"],"已经将两个":["29.6"],"功能":["29.6","29.18"],"内置":["29.6"],"到":["29.6"],"里了":["29.6"],"即webpack5":["29.6"],"新增的":["29.6"],"资源模块":["29.6"],"asset":["29.6"],"允许使用资源文件":["29.6"],"图片":["29.6"],"字体":["29.6"],"图标等":["29.6"],"而不需要在借助其它loader来处理这些资源":["29.6"],"window下载喜欢的图标到本地":["29.7"],"把字体文件放入":["29.7"],"fonts":["29.7"],"把":["29.7"],"放入":["29.7"],"自动清空打包目录":["29.8"],"output":["29.9"],"输出文件名":["29.9"],"文件输出到":["29.9"],"static":["29.9"],"目录中":["29.9"],"我们在js中写一些es6语法的东西":["29.11"],"看一下输出的结果main":["29.11"],"sum":["29.11"],"reduce":["29.11"],"在webpack中使用eslint":["29.12"],"引入eslint插件":["29.12"],"eslintwebpackplugin":["29.12"],"创建一个style标签来生成样式":["29.14"],"这样会出现网站的闪屏现象":["29.14"],"为了避免闪屏":["29.14"],"我们希望css文件打包成单独的文件":["29.14"],"并通过link标签来加载":["29.14"],"minicss":["29.14"],"extract":["29.14"],"postcss":["29.15"],"preset":["29.15"],"env":["29.15"],"配置":["29.15","29.33"],"只需要配置":["29.17"],"less":["29.17"],"就可以":["29.17"],"sass需要":["29.17"],"sass":["29.17"],"错误提示应该使用":["29.18"],"cheap":["29.18","29.20"],"生产环境":["29.18"],"代码压缩":["29.18"],"tree":["29.18","29.28"],"shaking":["29.18"],"静态资源压缩":["29.18"],"代码分割":["29.18"],"需要压缩图片体积":["29.18"],"优化配置":["29.19"],"从构建后代码出错位置找到映射后源代码出错位置":["29.20"],"从而让浏览器提示源代码文件出错位置":["29.20"],"帮助我们更快的找到错误根源":["29.20"],"这里我们就讲sourcemap的两种值":["29.20"],"其它更多的配置":["29.20"],"所以我们需要做到修改某个模块代码":["29.22"],"就只有这个模块代码需要重新打包编译":["29.22"],"其他模块不变":["29.22"],"这样打包速度就能很快":["29.22"],"基本配置":["29.22"],"webpack默认是开启hmr功能的":["29.22"],"不过此时":["29.22"],"样式经过":["29.22"],"处理":["29.22","29.23"],"已经具备":["29.22"],"功能了":["29.22"],"但是":["29.22","29.35"],"oneof":["29.23"],"打包时每个文件都会经过所有":["29.23"],"中了":["29.24"],"而这些文件是不需要编译可以直接使用的":["29.24"],"所以我们在对":["29.24"],"文件处理时":["29.24"],"要排除":["29.24"],"eslint":["29.25"],"检查":["29.25"],"babel":["29.25"],"编译":["29.25"],"速度比较慢":["29.25"],"我们可以缓存之前的":["29.25"],"都不一样":["29.26"],"我们启动的进程就是电脑的":["29.26"],"nodejs核心模块":["29.26"],"直接使用":["29.26"],"os":["29.26"],"cpu核数":["29.26"],"threads":["29.26"],"cpus":["29.26"],"注入":["29.29"],"而是引入":["29.29"],"并且使所有辅助代码从这里引用":["29.29"],"为编译的每个文件都插入了辅助代码":["29.29"],"使代码体积过大":["29.29"],"对一些公共方法使用了非常小的辅助代码":["29.29"],"imagemin":["29.30"],"这个插件还需要配合其它的包一起使用":["29.30"],"它有两种模式可以选择":["29.30"],"推荐使用":["29.30"],"cnpm":["29.30"],"安装总是失败":["29.30"],"无损压缩":["29.30"],"gifsicle":["29.30"],"jpegtran":["29.30"],"新建文件":["29.32"],"内容无关紧要":["29.32"],"主要观察打包输出的结果":["29.32"],"btn":["29.33"],"eslint会对动态导入语法报错":["29.33"],"需要修改eslint配置文件":["29.33"],"webpackchunkname":["29.33"],"这是webpack动态导入模块命名的方式":["29.33"],"将来就会作为":["29.33"],"文件相对路径":["29.34"],"folder":["29.34"],"文件所在文件夹":["29.34"],"fullhash":["29.34"],"每次构建生成的唯一":["29.34"],"chunkhash":["29.34"],"根据":["29.34"],"chunk":["29.34"],"生成":["29.34"],"contenthash":["29.34"],"根据文件内容生成hash":["29.34"],"的区别":["29.34"],"webpack4":["29.34"],"值发生了变化":["29.35"],"这是正常的":["29.35"],"文件的":["29.35"],"值也发生了变化":["29.35"],"这会导致":["29.35"],"告诉浏览器在空闲时才开始加载资源":["29.36"],"它们共同点":["29.36"],"都只会加载资源":["29.36"],"并不执行":["29.36"],"都有缓存":["29.36"],"它们区别":["29.36"],"加载优先级高":["29.36"],"是专门用来做":["29.37"],"es6":["29.37"],"以及以上":["29.37"],"的":["29.37"],"polyfill":["29.37"],"提供项目的离线体验":["29.38"],"即在离线状态下也可以访问项目":["29.38"]},{"0":["0.11","3.2","10.6","10.9","10.25","11.5","23.9"],"1":["3.2","3.5","6.5","7.9","7.13","23.3","26.16","26.17","29.6","29.18"],"2":["0.11","4.1","10.6","10.14","10.27","11.2","28.6"],"3":["6.1","7.7","15.11","25.3","28.20","29.11"],"4":["7.12","25.1","29.11"],"5":["23.16","25.1","29.11","29.33"],"6":["29.11"],"7":["26.4"],"8":["3.5"],"9":["6.5"],"10":["10.8"],"18":["23.19","26.24"],"21":["20.2"],"54":["25.1"],"60":["10.25"],"100":["10.24","26.17"],"111":["28.16"],"125":["10.25"],"127":["4.1"],"180":["10.6"],"200":["20.3"],"1200":["15.11"],"1800":["15.11"],"2000":["28.16"],"60000":["3.6"],"事件":["0.0","0.12","28.14"],"获取到拖进我们特定区域的文件数据":["0.0"],"四个事件":["0.2"],"当一个元素或是选中的文字被拖拽释放到一个有效的释放目标位置时":["0.2"],"该事件会在文件读取完成后触发":["0.3"],"其中event":["0.3"],"target":["0.3","0.10","26.10"],"result为文件读取的返回值":["0.3"],"js":["0.3","2.5","2.6","3.1","3.3","3.4","10.6","10.11","10.12","16.2","17.5","17.8","23.6","23.7","23.8","23.10","23.11","23.12","23.13","23.15","23.19","26.5","26.12","26.22","26.26","26.28","28.19","29.2","29.6","29.7","29.18","29.29","29.34"],"var":["0.3"],"reader":["0.3"],"new":["0.3","8.12","9.1","11.5","14.9","15.2","15.5","16.4","17.7","17.9","28.20","29.11","29.12"],"event":["0.3","0.7","0.10","11.6","13.1"],"console":["0.3","3.5","8.14","8.15","17.4","18.2","23.9","23.27","26.12","26.16","28.8"],"log":["0.3","3.5","8.15","17.2","18.2","23.9","23.27","26.12","26.16"],"对象通常来自于":["0.4"],"input":["0.4"],"p":["0.6"],"drop":["0.6"],"text":["0.6","20.5"],"handleevent":["0.7"],"阻止事件的默认行为":["0.7"],"preventdefault":["0.7"],"if":["0.7","0.9","0.10","3.7","6.5","12.2","12.6","16.3"],"type":["0.7","0.9","3.3","20.5"],"文件进入并松开鼠标":["0.7"],"文件边框恢复正常":["0.7"],"getelementbyid":["0.8","10.4","10.12","10.17"],"通过input框上传文件":["0.8"],"addeventlistener":["0.8","0.10"],"img":["0.9"],"image":["0.9","2.4","2.5","10.16","10.20","18.4","29.7"],"test":["0.9","29.9","29.15","29.23"],"src":["0.9","29.4","29.12"],"else":["0.9","3.6","5.1","26.22"],"switch":["0.9","15.5"],"case":["0.9","15.5"],"application":["0.9"],"msword":["0.9"],"static":["0.9"],"word":["0.9"],"png":["0.9","2.4","2.5","10.16","10.20","18.4","29.7","29.9"],"break":["0.9","15.5"],"vnd":["0.9"],"openxmlformats":["0.9"],"officedocument":["0.9"],"wordprocessingml":["0.9"],"droptarget":["0.10"],"shadow":["0.11"],"inset":["0.11"],"5px":["0.11"],"rgba":["0.11"],"track":["0.11"],"获取拖拽文件":["0.12"],"在":["0.12","19.2","26.3"],"事件中通过":["0.12"],"e":["0.12","10.21"],"这次主要是结合自己最近在项目中的实践和百度来的一些下载方式":["2.0"],"a标签下载应该是目前大家用的最多的下载文件的方式了吧":["2.1"],"毕竟它简单明了":["2.1"],"接下来看一下兼容性":["2.2"],"主流浏览器大部分都支持这个属性":["2.2"],"如果要向下兼容建议采用其它的方式进行下载":["2.2"],"截图来源于":["2.2"],"can":["2.2","2.5","10.3"],"i":["2.2","2.5","10.3","10.9","29.2","29.7","29.14","29.26","29.29","29.33","29.38"],"use":["2.2","2.4","2.5","29.15"],"这里也没什么特别的":["2.3"],"下载文件":["2.4","2.5","2.8"],"param":["2.4","2.5","2.8"],"string":["2.4","2.5","2.8"],"blob":["2.4"],"文件流":["2.4","2.5"],"blob格式":["2.4","2.5"],"用法":["2.6"],"window":["2.6","12.3","28.20"],"function":["2.7","8.1","8.14","12.8","14.9","16.4","17.0","17.3","17.7","18.3","23.12","28.10","29.32"],"downloadfile":["2.7"],"创建表单":["2.7"],"const":["2.7","12.3","14.9","16.4","17.2","17.7","17.9","20.3","23.25","26.7","26.22","26.24","28.5","28.6","28.8","28.9","28.10","28.17","28.18","28.20","29.32"],"formobj":["2.7"],"document":["2.7","10.4","10.11","10.12","10.17"],"createelement":["2.7"],"downloadurl":["2.8"],"请求的地址":["2.8"],"如果有什么不足或者错误之处":["2.9"],"多重嵌套的":["3.0"],"返回左边式子的值":["3.1"],"反之返回右边式子的值":["3.1"],"下面用一个简单的案例来表述":["3.1"],"nboolean":["3.2"],"return":["3.2","6.5","12.1","12.5","12.6","15.8","23.20","23.24","23.27","28.8","29.32"],"使用三元运算符":["3.2"],"b的时候输出1":["3.3"],"c输出2":["3.3"],"d输出3":["3.3"],"默认输出0":["3.3"],"let":["3.3","8.2","8.12","10.11","10.12","10.17","12.1","12.2","12.3","12.4","12.5","12.9","14.6","14.10","20.3","20.6","23.6","23.7","23.8","23.11","23.13","23.15","23.16","23.17"],"a":["3.3","12.1","15.2","15.5","16.6","23.9","23.21","26.19"],"并使它们相互之间可以替换":["3.4"],"被封装起来的算法具有独立性":["3.4"],"外部不可改变其特性":["3.4"],"接下来我们用对象配置的方法实现一下上述的例子":["3.4"],"超级会员":["3.5"],"输出":["3.6"],"可以发现":["3.6"],"这段代码十分简单":["3.6"],"但是":["3.6"],"函数比较庞大":["3.6"],"所有的逻辑分支都包含在":["3.6"],"语句中":["3.6"],"如果增加了一种新的绩效等级d":["3.6"],"或者把a等级的倍数改成5":["3.6"],"那我们必须阅读所有代码才能去做修改":["3.6"],"️":["3.6"],"所以我们可以用对象配置":["3.6"],"策略模式去简化这个函数":["3.6"],"对":["3.7"],"所以对它的通信方式不是很了解":["4.0"],"前几天":["4.0"],"需要注意的是通过":["4.1"],"的时候":["4.1"],"传输携带中文的话":["4.1"],"记得使用":["4.1"],"decodeuricomponent":["4.1"],"进行解码":["4.1"],"postmessage":["4.1"],"安全":["4.1"],"可靠且支持跨域的":["4.1"],"通信方式":["4.1"],"它可以在两个窗口之间异步传递消息":["4.1"],"在发送方中":["4.1"],"方法向另一个窗口发送消息":["4.1"],"该方法接收两个参数":["4.1"],"要发送的消息和目标窗口的源":["4.1"],"例如":["4.1"],"http":["4.1","15.10"],"emmm":["6.0"],"既然对象都开口了":["6.0"],"奖品项为盒子的1":["6.1"],"超过换行就行":["6.1"],"这里循环的":["6.3"],"key":["6.3","14.9","26.29"],"值":["6.3"],"我使用的索引值":["6.3"],"主要是为了后面添加编辑奖品的时候":["6.3"],"id不一定能保证按顺序排列":["6.3"],"appoint":["6.4"],"index":["6.4","19.3","20.6","26.9","28.9","28.11","29.6","29.7"],"传入参数为当前的索引值":["6.4"],"computed":["6.5"],"剩余圈数":["6.5"],"指定中奖的索引":["6.5"],"初始化":["6.5"],"init":["6.5","16.5"],"开始抽奖":["6.5"],"startraffle":["6.5"],"如果已经存在定时器则表示已经在转动":["6.5"],"不理会":["6.5"],"如有不足":["6.6","29.39"],"正则表达式就是专门规定一个字符串中字符出现的规律的一套规则":["7.0"],"注意":["7.1","10.16","26.3"],"如果想要在正则表达式使用js的变量或者js函数处理后返回的字符串":["7.1"],"匹配确定的n次":["7.2"],"至少匹配n次":["7.2"],"m":["7.2"],"手机号验证":["7.4"],"弹幕敏感词等":["7.5"],"验证字符串":["7.6"],"缺点":["7.7","29.20"],"只要字符串中含有符合规则的内容":["7.7"],"正则表达式就会匹配":["7.7"],"返回true":["7.7"],"解决":["7.7","7.11"],"查找敏感词":["7.8"],"reg":["7.9","7.10","7.12"],"g":["7.11","7.13","28.8","29.9"],"也只会获得第一个敏感词的内容和位置":["7.11"],"如果想要获取所有敏感词的位置和内容":["7.11"],"必须反复调用exec":["7.11"],"replace":["7.13","28.8"],"示例2":["7.13"],"使用0宽断言切割url":["7.13"],"search":["7.14"],"match":["7.14"],"settimeout":["8.0","8.3","26.17","28.6","28.16"],"delay":["8.1"],"arg1":["8.1"],"不推荐的":["8.2"],"原因和使用":["8.2"],"eval":["8.2"],"一样":["8.2"],"有安全风险":["8.2"],"javascript":["8.2","23.1","28.3"],"示例":["8.2"],"需要注意的是":["8.3"],"和":["8.3","26.6","29.34"],"方法重复调用一个函数或执行一个代码段":["8.4"],"setinterval":["8.5","8.9"],"func":["8.5"],"这个语法是可选的":["8.6"],"你可以传递一个字符串来代替一个函数对象":["8.6"],"你传递的字符串会被编译然后每个delay毫秒时间内执行一次":["8.6"],"clearinterval":["8.7"],"的参数来清除对应的计时器":["8.7"],"值得注意的是":["8.7"],"定时器仍然有可能因为当前页面":["8.10"],"或者操作系统":["8.10"],"firefox":["8.11"],"在内的浏览器其内部以32位带符号整数存储延时":["8.11"],"date":["8.12"],"gettime":["8.12"],"开始时间":["8.12"],"frequency":["8.12"],"countdown":["8.14"],"倒计时":["8.15"],"mdn定时器":["8.16"],"利用tts能力转为语音":["9.0"],"然后在上传":["9.0"],"是不是看起来都挺正常的":["9.0"],"但是问题就出在":["9.0"],"tts能力不是自己公司的":["9.0"],"u8arr":["9.1"],"uint8array":["9.1"],"创建一个二进制数据缓冲区":["9.1"],"可以理解为一个数组":["9.1"],"while":["9.1","12.0"],"就选择使用":["10.0"],"去做":["10.0"],"即画布的意思":["10.1"],"当前的浏览器版本不支持":["10.2"],"请升级浏览器":["10.2"],"所以我们可以放心的使用":["10.3"],"use兼容性截图":["10.3"],"使用getcontext函数来获取画笔":["10.4"],"ctx":["10.4","10.10","10.12","10.17"],"getcontext":["10.4","10.8","10.10","10.12","10.17","10.22"],"设置颜色":["10.4"],"fillstyle":["10.4"],"x":["10.5","10.13","23.23","29.32"],"y":["10.5","10.13","16.5","23.20","23.23","29.32"],"把画笔移动到指定的坐标":["10.5"],"相当于设置路径的起始点坐标":["10.5"],"lineto":["10.5"],"绘制一条从当前位置到指定":["10.5"],"以及":["10.5"],"位置的直线":["10.5"],"则代表绘制一个圆":["10.6"],"弧度是指的":["10.6"],"轴正方向":["10.6"],"radians":["10.6"],"math":["10.6","10.25"],"degrees":["10.6"],"角度转换成弧度":["10.6"],"arcto":["10.6"],"x1":["10.6"],"y1":["10.6"],"x2":["10.6"],"线条有4个属性":["10.7"],"2d":["10.8","10.10","10.12","10.22"],"线宽10":["10.8"],"beginpath":["10.8","10.25"],"moveto":["10.8"],"三种样式":["10.9"],"linecaps":["10.9"],"分别绘制三种样式的线条":["10.9"],"for":["10.9","12.9","14.6","14.10"],"三种连接样式":["10.10"],"属性设置起始偏移量":["10.11"],"canvas":["10.11","10.12","10.17","25.3"],"大家可以从下列的案例中清晰的看出来":["10.12"],"轴和":["10.13"],"轴坐标":["10.13"],"选择框的宽高":["10.13"],"也可以认为是缩放比例":["10.13"],"shadowoffsetx":["10.14"],"shadowoffsety":["10.14"],"shadowblur":["10.14"],"shadowcolor":["10.14"],"globalcompositeoperation":["10.14"],"的值":["10.14"],"当前的裁切路径":["10.14"],"clipping":["10.14"],"path":["10.14","20.3","20.6","26.7","28.5","29.12","29.32"],"可以调用任意多次":["10.14"],"方法":["10.14","10.27"],"类似数组的":["10.14"],"push":["10.14"],"移动的是":["10.16"],"的坐标原点":["10.16"],"坐标变换":["10.16"],"或":["10.18","23.4","26.15","28.2"],"轴作为对称轴镜像反转":["10.18"],"默认情况下":["10.18"],"的":["10.18"],"单位就是":["10.18"],"个像素":["10.18"],"举例说":["10.18"],"如果我们设置缩放因子是":["10.18"],"transform":["10.19"],"如果任意一个参数是":["10.20"],"infinity":["10.20"],"变形矩阵也必须被标记为无限大":["10.20"],"f":["10.21"],"这个方法会将当前的变形矩阵重置为单位矩阵":["10.21"],"translate":["10.22","10.25"],"共12种样式":["10.24"],"red":["10.24"],"注":["10.24"],"下面的展示中":["10.24"],"蓝色表示旧的":["10.24"],"即之前画布中的图形":["10.24"],"红色为新的":["10.24"],"默认设置":["10.24"],"移动坐标原点到矩形中心点":["10.25"],"设置一个圆形裁剪路径":["10.25"],"arc":["10.25"],"pi":["10.25"],"true":["10.25","12.0","14.9","26.10","28.5"],"否则你需要清空所有":["10.27"],"最简单的做法就是用":["10.27"],"clearrect":["10.27"],"提供的或者自定义的方法":["10.28"],"而通常":["10.28"],"我们仅仅在脚本执行结束后才能看见结果":["10.28"],"比如说":["10.28"],"博客主要记录一些学习的文章":["10.29","14.12","15.14","25.15","28.21"],"也就是":["11.0"],"事件循环":["11.0"],"采用回调函数的形式":["11.1"],"才会进入主线程执行":["11.1"],"排在异步任务后面的代码":["11.1"],"不用等待异步任务结束会马上运行":["11.1"],"也就是说":["11.1","18.5","18.6"],"异步任务不具有":["11.1"],"堵塞":["11.1"],"同步代码执行完毕":["11.2"],"调用栈":["11.2"],"stack":["11.2"],"清空":["11.2"],"检查是否存在":["11.2"],"微任务":["11.2"],"做几个题目校验一下学习成果":["11.3"],"promise3":["11.4"],"promise4":["11.4"],"settimeout2":["11.5"],"promise":["11.5"],"resolve":["11.5","20.3","20.5","20.6","28.5","29.4","29.12","29.32"],"reject":["11.5"],"rprototype":["12.0"],"获取实例的隐式原型":["12.0"],"proto":["12.0","17.3"],"循环判断":["12.0"],"直到最顶层null或者找到为止":["12.0"],"must":["12.1"],"be":["12.1","12.4"],"arg":["12.1"],"完成前两步":["12.1"],"创建新对象":["12.1"],"链接原型":["12.1"],"newobj":["12.1"],"object":["12.1","14.5","14.9"],"create":["12.1","14.5"],"则指向window":["12.2"],"使用符号确保属性名唯一":["12.2","12.3"],"fn":["12.2","12.3","17.2"],"symbol":["12.2","12.3"],"this指向传入对象":["12.2","12.3"],"this":["12.3","16.1","17.0","17.4","23.21","28.17","29.11"],"带参数执行函数":["12.3"],"bind":["12.4"],"what":["12.4"],"is":["12.4"],"trying":["12.4"],"to":["12.4"],"bound":["12.4"],"not":["12.4","26.13"],"callable":["12.4"],"保存this":["12.4"],"方便后续执行的时候使用":["12.4"],"self":["12.4"],"获取参数列表除第一个this之外的参数":["12.4"],"args":["12.4","12.5","12.6"],"array":["12.4"],"timer":["12.5"],"如果以及存在则清除":["12.5"],"如果存在timer则返回":["12.6"],"instanceof":["12.7"],"如果出现循环引用":["12.7"],"状态置为失败的状态rejected":["12.8"],"then":["12.8","16.4","29.33"],"onfulfilled":["12.8","16.4"],"onrejected":["12.8","16.4"],"如果不传":["12.8","16.4"],"就使用默认函数":["12.8","16.4"],"typeof":["12.8","16.4"],"reason":["12.8","16.4"],"发布消息":["12.9"],"publish":["12.9"],"topic":["12.9"],"params":["12.9","14.10"],"of":["12.9","14.6","14.10"],"遍历缓存列表":["12.9","14.10"],"update":["12.9","14.10"],"loop":["13.1"],"pattern":["14.1","15.6","15.12"],"是一套被反复使用":["14.1"],"开放":["14.2"],"封闭原则":["14.2"],"对扩展开放":["14.2"],"对修改封闭":["14.2"],"增加需求时":["14.2"],"扩展新代码":["14.2"],"而非修改已有代码":["14.2"],"发布":["14.4"],"once":["14.5"],"先绑定":["14.5"],"后删除":["14.5"],"off":["14.5"],"apply":["14.5","28.17","28.18","28.19"],"arguments":["14.5"],"all":["14.5"],"若没有传参数":["14.5"],"清空所有订阅":["14.5"],"delete":["14.6"],"推送消息":["14.6"],"pusharticle":["14.6"],"val":["14.6","14.9","26.14"],"相对于观察者模式":["14.8"],"re":["14.9"],"render":["14.9"],"view":["14.9"],"definereactive":["14.9"],"obj":["14.9"],"defineproperty":["14.9"],"enumerable":["14.9"],"configurable":["14.9"],"发布者":["14.10"],"都是为了实现一个状态的改变触发回调函数进行通知":["14.11"],"singleton":["15.0"],"全局loading":["15.1"],"其实就是单例模式":["15.1"],"测试":["15.2","28.8"],"b":["15.2","15.5","18.2","18.3"],"c":["15.2","18.2","18.3","23.21"],"factory":["15.3"],"使用document":["15.4"],"aclass":["15.5"],"builder":["15.6"],"例子":["15.7"],"电脑工厂":["15.7"],"部件1":["15.8"],"setage":["15.8"],"age":["15.8","17.0","17.4","23.25","26.24","29.11"],"proxy":["15.9"],"列子":["15.10"],"两室一厅":["15.11"],"lease":["15.11"],"驾校驾考车等":["15.13"],"资源可以共享":["15.13"],"共同使用的":["15.13"],"是一种异步编程的解决方案":["16.0"],"promise有三种状态":["16.0"],"pending":["16.0","16.1"],"状态值pending":["16.1"],"等待态":["16.1"],"fulfiled":["16.1"],"成功态":["16.1"],"rejected":["16.1"],"失败态":["16.1"],"默认为pending":["16.1"],"try":["16.2"],"catch":["16.2"],"在执行回调的时候去捕获throw了":["16.2"],"失败":["16.3"],"rejectmicrotask":["16.3"],"如果":["16.3"],"时执行第一个回调":["16.3"],"成功的回调":["16.3"],"throw":["16.4"],"promise2":["16.4"],"安装promises":["16.5"],"install":["16.5","29.18"],"在mypromise":["16.5"],"目前我们使用promise都是基于promises":["16.6"],"规范":["16.7"],"面试官":["16.7"],"构造函数":["17.0"],"person":["17.0","17.4","17.7","23.22"],"name":["17.0","17.2","17.4","26.7","26.24","29.11","29.32"],"sayname":["17.0","17.4"],"fn1":["17.2"],"consle":["17.2"],"function也是一个构造函数":["17.2"],"那它也是":["17.3"],"的实例":["17.3"],"object的":["17.3"],"也指向function的":["17.3"],"prototype":["17.3"],"通过":["17.3"],"向上":["17.5"],"查找":["17.5"],"直到找到或者到":["17.5"],"null":["17.5"],"为止":["17.5"],"验证":["17.5"],"person构造函数":["17.5"],"person1":["17.7","17.9"],"为现有对象设置原型":["17.8"],"返回一个新对象":["17.8"],"在程序运行时代码中的某些特定部分中变量":["18.0"],"全局作用域":["18.1"],"内层变量":["18.2"],"未定义直接赋值":["18.2"],"foo":["18.3"],"分析这个试题前":["18.4"],"大家可以先看一下这个图":["18.4"],"从图中可以看出":["18.4"],"当前试题中存在三个嵌套的作用域":["18.4"],"执行":["18.4"],"时":["18.4"],"创建了一个局部变量":["18.4"],"且值为40":["18.4"],"同时把":["18.4"],"函数返回":["18.4"],"赋值给":["18.4"],"闭包让你可以在一个内层函数中访问到其外层函数的作用域":["18.5"],"闭包的特点":["18.5"],"让外部访问函数内部变量成为可能":["18.5"],"可以避免使用全局变量":["18.5"],"collecation":["18.6"],"执行环境会负责管理代码执行过程中使用的内存":["18.6"],"其原理是":["18.6"],"就将这个变量标记为":["18.7"],"进入环境":["18.7"],"从逻辑上讲":["18.7"],"永远不能释放进入环境的变量所占用的内存":["18.7"],"因为只要执行流进入相应的环境":["18.7"],"当声明了一个变量并将一个引用类型值赋给该变量时":["18.8"],"则这个值的引用次数就是1":["18.8"],"豆瓣":["18.9"],"douban":["18.9"],"难以抽出很多时间去搭建自己的博客":["19.0"],"不知道大家有没有听说过vuepress":["19.0"],"个人博客预览地址":["19.1"],"package":["19.2"],"json":["19.2","26.10"],"中添加启动":["19.2"],"编译命令":["19.2"],"建议在启动命令添加上":["19.2"],"temp":["19.2"],"styles":["19.3"],"styl":["19.3"],"palette":["19.3"],"标题":["19.4"],"tagline":["19.4"],"副标题":["19.4"],"actiontext":["19.4"],"快速上手":["19.4"],"actionlink":["19.4"],"zh":["19.4"],"guide":["19.4"],"插件":["19.5","26.6","29.12"],"plugins":["19.5","28.19","28.20","29.12"],"register":["19.5"],"components":["19.5","26.6"],"评论插件":["19.5"],"主题":["19.5"],"reco":["19.5"],"theme":["19.5","26.9"],"导航栏":["19.5"],"侧边栏配置":["19.5"],"时间轴是自带的":["19.5"],"只需要配置路由":["19.5"],"link就是文档的路径":["19.5"],"相当于vue中的路由":["19.5"],"themeconfig":["19.5"],"默认为main分支":["19.6"],"保存":["19.6"],"css":["20.0","25.6","26.9","29.6","29.14","29.15","29.34"],"javascript等":["20.0"],"这些资源会占用大量的带宽和时间":["20.0"],"在该时间到期之前":["20.1"],"的值是一个日期":["20.2"],"格式为":["20.2"],"wed":["20.2"],"oct":["20.2"],"提供一个":["20.3"],"node":["20.3","29.25"],"服务":["20.3"],"用于返回浏览器请求的资源":["20.3"],"和图片":["20.3"],"require":["20.3","28.5","28.10","28.20","29.4","29.32"],"fs":["20.3","28.18"],"server":["20.3","20.6"],"createserver":["20.3","20.6"],"req":["20.3","20.6"],"res":["20.3","20.6"],"filepath":["20.3","20.6"],"dirname":["20.3","20.5","20.6","28.5","29.4","29.12","29.32"],"url":["20.3","20.5","20.6"],"writehead":["20.3"],"服务器会返回该资源的":["20.4"],"值和":["20.4"],"last":["20.4"],"时间":["20.4"],"html":["20.5","29.7"],"jpg":["20.5"],"stat":["20.5"],"statsync":["20.5"],"lastmodified":["20.5"],"mtime":["20.5"],"toutcstring":["20.5"],"header":["20.5","26.20"],"content":["20.5","28.7","28.10"],"crypto":["20.6"],"也不知道还能不能跟上时代的脚步":["23.0"],"的超集":["23.1"],"具有更高的可读性":["23.2"],"更加容易重构":["23.2"],"越来越受欢迎":["23.2"],"大部分前端开源库":["23.2"],"框架都逐步支持":["23.2"],"包来安装":["23.3"],"安装":["23.3"],"我们一般称之为":["23.4"],"类型注释":["23.4"],"类型签名":["23.4"],"boolean":["23.5"],"num":["23.6"],"也可以使用":["23.7"],"模板字符串":["23.7"],"表示由此类型元素组成的一个数组":["23.8"],"numarr":["23.8"],"与数组一样":["23.9"],"我们可以通过下标来访问元组中的元素":["23.9"],"数字枚举":["23.10"],"默认从0开始":["23.10"],"进行标记":["23.11"],"warnuser":["23.12"],"u":["23.13"],"然而":["23.14"],"没有":["23.14"],"类型是":["23.14"],"的子类型或可以赋值给":["23.14"],"其一是":["23.15"],"尖括号":["23.15"],"语法":["23.15"],"somevalue":["23.15"],"any":["23.15"],"id":["23.16"],"number":["23.18","23.23","23.25"],"family":["23.18"],"father":["23.18"],"可选属性和只读属性":["23.19"],"implements":["23.22"],"constructor":["23.22","28.17","29.11"],"public":["23.22"],"point":["23.23"],"我们给identity添加了类型变量":["23.24"],"documents":["23.25"],"genericnumber":["23.26"],"t":["23.26"],"zerovalue":["23.26"],"add":["23.26","26.5"],"视为一个字符串":["23.27"],"concat":["23.27"],"知道":["23.27"],"在这里是一个数字":["23.27"],"typescriptlang":["23.28"],"org":["23.28"],"从搭建到实践":["24.1"],"此外":["25.0"],"每次遇到这种需求时":["25.0"],"手动实现可能较为麻烦且浪费时间":["25.0"],"typescript":["25.1"],"eslint":["25.1"],"plugin":["25.1","26.5","28.5","28.18","28.19","29.16","29.38"],"碰撞检测":["25.2"],"兼容移动端":["25.2"],"采用":["25.2"],"grid":["25.3","25.4"],"布局作为基础布局":["25.3"],"但是方块中的布局使用定位实现":["25.3"],"主要是为了实现缩放效果":["25.3"],"vue3":["25.4","26.0"],"layout":["25.4","25.10"],"save":["25.4"],"app":["25.6"],"draggablestart":["25.7","25.13"],"draggablehandle":["25.7"],"draggableend":["25.7"],"remove":["25.7"],"名称":["25.10"],"类型":["25.10"],"默认值":["25.10","25.11"],"说明":["25.10","25.12"],"data":["25.10"],"default":["25.12","29.32"],"拖拽开始时触发":["25.13"],"拖拽的方块的id":["25.13"],"用户感知不佳":["25.14"],"初始化布局数据计算算法优化":["25.14"],"是在2021年了":["26.0"],"基础":["26.2"],"需要额外的双横线":["26.4"],"直接安装就行":["26.5"],"yarn":["26.5"],"vitejs":["26.5"],"图标的自动导入需要安装":["26.6"],"unplugin":["26.6"],"d":["26.6","28.9","29.14","29.16","29.26","29.38"],"自动按需导入":["26.6"],"首先你需要安装":["26.6"],"auto":["26.6"],"import":["26.6","26.28","29.5","29.33"],"这两款插件":["26.6"],"from":["26.7","26.28"],"routes":["26.7"],"login":["26.7"],"component":["26.7"],"这里我比较习惯用":["26.8"],"scss":["26.8","26.9"],"router":["26.9"],"element":["26.9"],"plus":["26.9"],"chalk":["26.9"],"dark":["26.9"],"vars":["26.9"],"style":["26.9","29.7"],"引入pinia":["26.9"],"配置文件路径别名还需要修改一下":["26.10"],"tsconfig":["26.10"],"compileroptions":["26.10"],"esnext":["26.10"],"usedefineforclassfields":["26.10"],"module":["26.10","28.5","29.4","29.22","29.32"],"的学习":["26.11"],"我大部分都是看官方文档学习的":["26.11"],"attribute":["26.12"],"非响应式对象":["26.12"],"等同于":["26.12"],"attrs":["26.12","26.28"],"插槽":["26.12"],"hook":["26.13"],"inside":["26.13"],"beforecreate":["26.13"],"相关api":["26.14"],"unref":["26.14"],"如果参数是一个":["26.14"],"则返回内部值":["26.14"],"否则返回参数本身":["26.14"],"这是":["26.14"],"响应式或纯对象":["26.15"],"ref":["26.15"],"并返回原始对象的只读代理":["26.15"],"只读代理是深层的":["26.15"],"任何被访问的嵌套":["26.15"],"也是只读的":["26.15"],"isproxy":["26.15"],"检查对象是否是由":["26.15"],"plusone":["26.16"],"value":["26.16","26.27","26.29"],"api":["26.17"],"与选项式":["26.17"],"tsx在":["26.18"],"支持有效的":["26.19"],"javascript表达式":["26.19"],"比如":["26.19","29.29"],"classname":["26.20"],"isbg":["26.20"],"headerbg":["26.20"],"和三目表达式都可以实现":["26.22"],"setup":["26.22","26.24"],"isshow":["26.22"],"listdata":["26.24"],"tom":["26.24","29.11"],"withmodifiers":["26.26"],"方法啦":["26.26"],"方法接收两个参数":["26.26"],"第一个参数是绑定的事件":["26.26"],"第二个参数是需要使用的事件":["26.26"],"修饰符":["26.26"],"vue":["26.27","26.28"],"其中包含":["26.28"],"slots":["26.28"],"emit":["26.28"],"等":["26.28"],"scrollbar":["26.29"],"class":["26.29","28.17","28.18","28.19","28.20","29.11"],"menucontent":["26.29"],"menu":["26.29"],"active":["26.29"],"mode":["26.29"],"vertical":["26.29"],"map":["26.29"],"route":["26.29"],"item":["26.29"],"这篇文章就讲一下原理":["28.0"],"load":["28.2"],"加载":["28.2"],"模块时预处理文件":["28.2"],"因此":["28.2"],"链中的最后一个":["28.3"],"返回":["28.3"],"webpack":["28.3","28.8","29.5","29.16","29.38"],"所期望的":["28.3"],"可以是同步的":["28.3"],"也可以是异步的":["28.3"],"htmlwebpackplugin":["28.5","28.20","29.32"],"exports":["28.5","29.4","29.32"],"单入口":["28.5","29.32"],"entry":["28.5","28.15","29.32","29.34"],"output":["28.5","28.15","29.32"],"dist":["28.5","29.4","29.32"],"filename":["28.5","29.4"],"clean":["28.5","28.18","29.8"],"rules":["28.5","29.9","29.15"],"函数时":["28.6"],"总是返回":["28.6"],"undefined":["28.6"],"异步":["28.6"],"async":["28.6"],"进行异步操作":["28.6"],"可以同步或者异步调用的并返回多个结果的函数":["28.7"],"err":["28.7"],"sourcemap":["28.7"],"config":["28.8","29.1"],"preset":["28.9"],"env":["28.9","29.18"],"loaders":["28.9","28.15"],"loaderutils":["28.10"],"fileloader":["28.10"],"根据文件内容生产一个新的文件名称":["28.10"],"这里是inline":["28.11"],"loader用法":["28.11"],"代表后面还有一个css":["28.11"],"loader等待处理":["28.11"],"最终我们需要将remainingrequest中的路径转化成相对路径":["28.11"],"webpack才能处理":["28.11"],"希望得到":["28.11"],"所以":["28.11"],"需要将绝对路径转化成相对路径":["28.11"],"要求":["28.11"],"必须是相对路径":["28.11"],"配置中用到的":["28.13"],"相同的插件系统":["28.13"],"之上":["28.13"],"插件目的在于解决":["28.13"],"当":["28.14"],"构建的时候":["28.14"],"插件注册的事件就会随着钩子的触发而执行了":["28.14"],"内部的钩子":["28.14"],"什么是钩子":["28.14"],"钩子的本质就是":["28.14"],"为了方便我们直接介入和控制编译过程":["28.14"],"把编译过程中触发的各类关键事件封装成事件接口暴露了出来":["28.14"],"这些接口被很形象地称做":["28.14"],"hooks":["28.14"],"钩子":["28.14"],"开发插件":["28.14"],"离不开这些钩子":["28.14"],"loader":["28.15","29.26"],"等等配置信息":["28.15"],"它有以下主要属性":["28.15"],"options":["28.15","28.17"],"可以访问本次启动":["28.15"],"时候所有的配置文件":["28.15"],"包括但不限于":["28.15"],"等等完整配置信息":["28.15"],"inputfilesystem":["28.15"],"make":["28.16"],"asyncparallelhook":["28.16"],"也就是异步并行钩子":["28.16"],"特点就是异步任务同时执行":["28.16"],"可以使用":["28.16"],"tapasync":["28.16"],"tappromise":["28.16"],"如果使用tap注册的话":["28.16"],"进行异步操作是不会等待异步操作执行完成的":["28.16"],"compilation":["28.16"],"使用tapasync":["28.16"],"tappromise注册":["28.16"],"进行异步操作会等异步操作做完再继续往下执行":["28.16"],"callback":["28.16"],"需要处理文件":["28.17"],"extensions":["28.17"],"获取操作文件的对象":["28.18"],"emit是异步串行钩子":["28.18"],"实现":["28.19","28.20"],"analyze":["28.19"],"inline":["28.20"],"chunk":["28.20"],"safe":["28.20"],"之前有没有做过webpack的配置或者优化":["29.0"],"然后你想半天":["29.0"],"回答说":["29.0"],"main":["29.1","29.4","29.9"],"npm":["29.2","29.14","29.18","29.26","29.29","29.33"],"production":["29.3"],"文件输出目录":["29.4"],"必须是绝对路径":["29.4"],"方法返回一个绝对路径":["29.4"],"当前文件的文件夹绝对路径":["29.4"],"输出文件名":["29.4"],"height":["29.5","29.6"],"tomato":["29.5"],"运行":["29.5"],"npx":["29.5"],"serve":["29.5"],"添加图片资源":["29.6"],"box1":["29.6"],"box2":["29.6"],"box3":["29.6"],"width":["29.6"],"200px":["29.6"],"background":["29.6"],"repeat":["29.6"],"no":["29.6"],"文件夹中":["29.7"],"修改配置文件":["29.7"],"只需要在输出配置":["29.8"],"加载器":["29.9","29.15"],"处理图片资源":["29.9"],"jpe":["29.9"],"gif":["29.9"],"webp":["29.9"],"处理js":["29.10"],"student":["29.11"],"指定检查文件的根目录":["29.12"],"主要为了排除检查dist目录下的js文件":["29.12"],"context":["29.12"],"eslint配置":["29.12"],"新建":["29.12"],"eslintrc":["29.12","29.33"],"处理css资源":["29.13"],"mini":["29.14"],"配置":["29.14","29.25","29.26","29.30"],"这里需要注意的是":["29.14"],"我们需要把":["29.14"],"处理css的loader":["29.15"],"正则匹配文件":["29.15"],"minicssextractplugin":["29.15"],"minimizer":["29.16"],"搭配起来使用":["29.17"],"因为less":["29.17"],"stylu这些样式的配置基本一致":["29.17"],"就不一个一个的去配置了":["29.17"],"这里以":["29.17"],"根据不同的需求":["29.18"],"就需要根据环境来区分不同的配置":["29.18"],"本地安装":["29.18"],"cross":["29.18"],"文档地址":["29.18"],"在前面":["29.19"],"大家可以查看webpack":["29.20"],"devtool":["29.20"],"文档":["29.20"],"主要用于开发模式中":["29.20"],"优点":["29.20"],"打包编译速度快":["29.20"],"只包含行映射":["29.20"],"没有列映射":["29.20"],"提升打包构建速度":["29.21"],"还不行":["29.22"],"js需要我们在入口文件":["29.22"],"mian":["29.22"],"中手动配置":["29.22"],"hot":["29.22"],"accept":["29.22"],"接收两个参数":["29.22"],"第一个参数是需要开启hmr功能的模块":["29.22"],"第二个参数是一个可选的回调函数":["29.22"],"在模块更新前需要做的事情":["29.22"],"如果没有可不传":["29.22"],"我们新建一个":["29.22"],"sum":["29.22"],"来测试这个功能":["29.22"],"虽然因为":["29.23"],"正则原因实际没有处理上":["29.23"],"下面的文件":["29.24"],"包含":["29.24"],"只处理":["29.24"],"xxx":["29.24"],"文件":["29.24"],"排除":["29.24"],"编译结果":["29.25"],"这样第二次打包时速度就会更快了":["29.25"],"开启缓存的配置也很简单":["29.25"],"因为babel":["29.25"],"loader跟eslint已经内置了缓存功能":["29.25"],"只需要开启就好了":["29.25"],"loader的缓存位置":["29.25"],"安装依赖":["29.26","29.29"],"减少代码体积":["29.27"],"shaking":["29.28"],"extend":["29.29"],"默认情况下会被添加到每一个需要它的文件中":["29.29"],"你可以将这些辅助代码作为一个独立模块":["29.29"],"来避免重复引入":["29.29"],"optipng":["29.30"],"svgo":["29.30"],"有损压缩":["29.30"],"mozjpeg":["29.30"],"pngquant":["29.30"],"有损":["29.30"],"无损压缩的区别":["29.30"],"我们以无损压缩配置为例":["29.30"],"优化代码运行性能":["29.31"],"export":["29.32"],"配置文件":["29.32"],"多入口":["29.32"],"是webpack命名规则":["29.32"],"使用chunk的name作为输出的文件名":["29.32"],"的值显示":["29.33"],"需要安装插件":["29.33"],"每次修改任何一个文件":["29.34"],"所有文件名的":["29.34"],"至都将改变":["29.34"],"所以一旦修改了任何一个文件":["29.34"],"整个项目的文件缓存都将失效":["29.34"],"根据不同的入口文件":["29.34"],"进行依赖文件解析":["29.34"],"构建对应的":["29.34"],"生成对应的哈希值":["29.34"],"我们":["29.34"],"是同一个引入":["29.34"],"会共享一个":["29.34"],"根据文件内容生成":["29.34"],"的缓存失效":["29.35"],"明明我们只修改":["29.35"],"为什么":["29.35"],"也会变身变化呢":["29.35"],"更新前":["29.35"],"加载优先级低":["29.36"],"只能加载当前页面需要使用的资源":["29.36"],"可以加载当前页面资源":["29.36"],"也可以加载下一个页面需要使用的资源":["29.36"],"浏览器空闲的时候进行资源的拉取":["29.36"],"总结":["29.36"],"翻译过来叫做垫片":["29.37"],"补丁":["29.37"],"就是用社区上提供的一段代码":["29.37"],"让我们在不兼容某些新特性的浏览器上":["29.37"],"使用该新特性":["29.37"],"主要是解决一些":["29.37"],"workbox":["29.38"]},{"0":["8.12","10.10","23.4","23.6"],"1":["0.10","0.11","3.3","10.25","12.4","17.8","20.6","23.8","23.9","23.20"],"2":["23.8","23.20","28.11"],"3":["10.9","23.20","28.6","28.11"],"4":["6.5","23.11","25.3"],"5":["10.18","26.19"],"8":["6.5","20.3","20.5"],"10":["10.12","29.9"],"16":["26.24"],"17":["23.27"],"18":["29.11"],"20":["10.9","10.10","26.24"],"22":["17.0","17.4"],"28":["20.2"],"30":["10.9"],"34":["23.27"],"75":["10.25"],"100":["10.4","10.8","10.12","10.22"],"150":["10.4"],"200":["20.5"],"222":["28.16"],"333":["28.16"],"400":["20.3"],"1000":["28.6","28.16"],"1024":["29.9"],"2015":["20.2"],"3000":["29.22"],"4000":["8.2"],"5500":["4.1"],"8080":["7.13"],"86400":["20.3"],"143778":["10.25"],"或者通过":["0.0"],"input":["0.0"],"事件被抛出":["0.2"],"当拖动的元素或被选择的文本进入有效的放置目标时":["0.2"],"result":["0.3","12.1","12.2","12.3","16.5","28.6"],"onerror":["0.3"],"该事件会在文件读取发生错误的时候触发":["0.3"],"并抛出异常状态码值":["0.3"],"error":["0.3"],"code":["0.3"],"一共有5个码值":["0.3"],"分别代表不同的错误":["0.3"],"如下":["0.3"],"元素的":["0.4"],"files":["0.4","0.7","0.12"],"拖拽文件到此上传文件":["0.6"],"span":["0.6"],"onclick":["0.6"],"style":["0.7","2.7"],"bordercolor":["0.7"],"a89b9b":["0.7"],"for":["0.7","10.10","10.25","10.28","25.7"],"file":["0.7","0.10"],"of":["0.7"],"datatransfer":["0.7","0.12"],"change":["0.8"],"event":["0.8","14.6","15.2"],"上传的文件都会保存到文件数组中":["0.8"],"filearr":["0.8"],"push":["0.8","16.3"],"ms":["0.9"],"powerpoint":["0.9"],"ppt":["0.9"],"presentationml":["0.9"],"presentation":["0.9"],"excel":["0.9"],"id":["0.10","6.5"],"indexof":["0.10"],"清空整个文件上传盒子":["0.10"],"单个文件":["0.11"],"div":["0.11","6.3","26.28"],"144px":["0.11"],"获取拖拽文件列表数据":["0.12"],"length":["0.12"],"属性获取文件数量":["0.12"],"如果有遗漏或者错误的地方":["2.0"],"a标签分两种":["2.1"],"image":["2.2","6.1","10.3","10.4","10.24","20.3","20.5","29.5","29.6","29.11"],"注意":["2.2"],"下载跨域文件会导致":["2.2"],"属性失效":["2.2"],"就是我们熟知的文件流转":["2.3"],"filename":["2.4","2.5","2.8","28.10","29.32"],"下载文件的名字":["2.4","2.5"],"考虑到兼容性问题":["2.4","2.5"],"最好加上后缀名":["2.4","2.5"],"function":["2.4","2.5","2.8","16.5","17.5","28.5","29.20"],"downloadfile":["2.4","2.5","2.6","2.8"],"读取文件流":["2.5"],"const":["2.5","12.2","12.8","17.0","17.3","17.4","26.9","26.26","29.14","29.16","29.30","29.38"],"zip":["2.6"],"form":["2.7"],"action":["2.7"],"method":["2.7"],"get":["2.7","3.6","12.7","14.9"],"文件名":["2.8"],"请大家及时指正":["2.9"],"在维护的时候真的让人很恼火":["3.0"],"有时候一个":["3.0"],"bug":["3.0"],"let":["3.1","3.4","3.5","3.6","10.5","10.6","10.14","10.16","10.18","12.7","23.4"],"c":["3.1"],"a":["3.1","3.4","12.3","17.8","23.15","29.20"],"三元运算符使用的地方也比较多":["3.2"],"console":["3.3","8.2","17.2","23.12","23.20","26.26","28.5"],"log":["3.3","8.2","8.14","17.0","17.4","23.12","23.20","26.26","28.5"],"type":["3.4","9.1","20.3","23.18","29.9"],"使用对象配置":["3.5"],"策略模式实现":["3.5"],"策略模式":["3.5"],"我们可以根据用户类型来生成我们的折扣对象":["3.5"],"discounts":["3.5"],"strategies":["3.6"],"new":["3.6","12.8","17.0","17.4","28.5","29.30","29.32"],"map":["3.6","15.11","28.11"],"else":["3.7","16.3","20.5"],"并没有歧视的意思":["3.7"],"跟我的一个朋友":["4.0"],"在下杨公子":["4.0"],"聊天时":["4.0"],"child":["4.1"],"hello":["4.1"],"world":["4.1"],"在接收方中":["4.1"],"addeventlistener":["4.1"],"方法监听":["4.1"],"message":["4.1"],"事件":["4.1"],"该事件对象包含三个属性":["4.1"],"data":["4.1"],"表示接收到的数据":["4.1"],"origin":["4.1"],"表示发送方的源":["4.1"],"提高代码可读性":["5.1"],"不做也不行啊":["6.0"],"转动方向是这样的":["6.1"],"png":["6.1","10.4","10.24","20.3","20.5","29.5"],"所以用索引值比较直观":["6.3"],"js":["6.3","6.4","10.5","10.14","10.16","10.18","17.3","18.5","23.5","28.3","28.14","29.17","29.20"],"template":["6.3","28.5","29.32"],"class":["6.3","15.2","26.20","29.7"],"box":["6.3"],"做成点击事件指定奖品主要是为了不让对象发现":["6.4"],"指定的奖品":["6.4"],"如果没有指定奖品则随机指定一个奖品":["6.5"],"取随机数0":["6.5"],"数组的索引值":["6.5"],"math":["6.5"],"round":["6.5"],"random":["6.5"],"取随机数10":["6.5"],"20圈":["6.5"],"4时少转一圈":["6.5"],"num":["6.5"],"望大家指出":["6.6","29.39"],"则只能使用标准写法创建正则表达式":["7.1"],"i":["7.1","10.10","29.5","29.17"],"表示忽略大小写":["7.1"],"g":["7.1","23.3"],"表示匹配所有":["7.1"],"javascript":["7.1","7.7","7.11","18.3","23.2"],"m和n均为非负整数":["7.2"],"其中n":["7.2"],"最少匹配n次且最多匹配m次":["7.2"],"匹配除":["7.2"],"邮箱验证等":["7.4"],"以下用reg表示正则表达式":["7.6"],"配合":["7.7"],"和":["7.7","8.7","10.2","28.15"],"一起使用":["7.7"],"表示从头到尾匹配":["7.7"],"以下reg表示正则表达式":["7.8"],"search":["7.9"],"match":["7.10"],"直到找不到":["7.11"],"返回null为止":["7.11"],"示例":["7.11"],"var":["7.11","10.10","10.25","16.5","17.8"],"findall":["7.12","7.14"],"url":["7.13"],"http":["7.13"],"localhost":["7.13","29.22"],"public":["7.13","29.33"],"index":["7.13","29.32","29.33"],"html":["7.13","19.3","20.6","28.8","29.4","29.33"],"uname":["7.13"],"exec":["7.14"],"arg2":["8.1"],"timer":["8.2","8.12"],"settimeout":["8.2","8.7","12.6"],"定时器":["8.2","8.12"],"setinterval":["8.3"],"共用一个编号池":["8.3"],"技术上":["8.3"],"在每次调用之间具有固定的时间延迟":["8.4"],"delay":["8.5","8.6","8.11"],"arg1":["8.5"],"这个语法因为存在安全风险所以不被推荐使用":["8.6"],"是每次延迟的毫秒数":["8.6"],"一秒等于1000毫秒":["8.6"],"共享同一个id池":["8.7"],"并且":["8.7"],"的每调用一次定时器的最小间隔是4ms":["8.9"],"浏览器本身":["8.10"],"这就会导致如果一个延时":["8.11"],"执行次数":["8.12"],"倒计时":["8.14"],"秒":["8.14","8.15"],"当时间为0的时候清除定时器":["8.15"],"if":["8.15","12.0","12.5","15.11","16.1"],"博客主要记录一些学习的文章":["8.16"],"它返回的是一个":["9.0"],"base64":["9.0"],"流":["9.0"],"这样就导致先前的上传接口不支持":["9.0"],"因为它是直接接收":["9.0"],"charcodeat":["9.1"],"将文本文件转为utf":["9.1"],"16的ascii":["9.1"],"放到类型化数组对象中":["9.1"],"blob对象":["9.1"],"blob":["9.1"],"简单效果如下":["10.0"],"代码片段":["10.0"],"实现思路":["10.0"],"是":["10.1","23.2"],"html5":["10.1"],"标签":["10.2"],"只有两个可选的属性":["10.2"],"感兴趣的可以去看一下":["10.3"],"的一些api的兼容性":["10.3"],"green":["10.4"],"绘制矩形":["10.4"],"fillrect":["10.4"],"执行上例代码":["10.4"],"我们就可以得到如下的一个矩形":["10.4"],"closepath":["10.5"],"闭合路径之后":["10.5"],"图形绘制命令又重新指向到上下文中":["10.5"],"stroke":["10.5","10.8"],"通过线条来绘制图形轮廓":["10.5"],"fill":["10.5"],"通过填充路径的内容区域生成实心的图形":["10.5"],"接下来就用这些方法随意绘制一个图形":["10.5"],"获取canvas元素对象":["10.5"],"document":["10.5","10.6","10.14","10.16","10.18"],"getelementbyid":["10.5","10.6","10.11","10.14","10.16","10.18"],"y2":["10.6"],"radius":["10.6"],"根据给定的控制点和半径画一段圆弧":["10.6"],"最后再以直线连接两个控制点":["10.6"],"canvas":["10.6"],"ctx":["10.6","10.11","10.16"],"getcontext":["10.6"],"2d":["10.6","10.17"],"beginpath":["10.6","10.9"],"lineto":["10.8"],"线宽20":["10.8"],"moveto":["10.9"],"线宽":["10.10"],"linewidth":["10.10"],"font":["10.12"],"50px":["10.12"],"sans":["10.12"],"serif":["10.12"],"我爱学习":["10.12"],"不信你看":["10.12"],"的左上角在目标画布上":["10.13"],"在目标画布上绘制的宽高":["10.13"],"关于两个不同坐标和宽高的区别":["10.13"],"大家可以从下图跟概念结合理解一样":["10.13"],"图片来源":["10.13"],"mdn":["10.13"],"关于restore":["10.14"],"每一次调用":["10.14"],"上一个保存的状态就从栈中弹出":["10.14"],"所有设定都恢复":["10.14"],"pop":["10.14"],"fillstyle":["10.17","10.25"],"red":["10.17"],"save":["10.17"],"保存旋转前的状态":["10.17"],"个单位就变成对应":["10.18"],"这样绘制出来的形状就会是原先的一半":["10.18"],"变形矩阵":["10.19"],"否则会抛出异常":["10.20"],"这个函数的参数各自代表如下":["10.20"],"m11":["10.20"],"然后用相同的参数调用":["10.21"],"transform":["10.21","10.22"],"新图像会覆盖在原有图像":["10.24"],"in":["10.24","29.12"],"只绘制新旧图形重叠的部分":["10.24"],"其他区域全部透明":["10.24"],"绘制新图形":["10.24"],"out":["10.24"],"只绘制新旧图形没有重叠的部分":["10.24"],"填充圆形路径":["10.25"],"绘制三角形":["10.25"],"j":["10.25"],"保存":["10.27"],"状态":["10.27"],"如果你要改变一些会改变":["10.27"],"循环里面做完成动画是不太可能的":["10.28"],"因此":["10.28","25.0"],"如有不足":["10.29","14.12","15.14","25.15","28.21"],"我个人的理解就是":["11.0"],"为了使单线程的js在执行的时候不发生阻塞":["11.0"],"效应":["11.1"],"调用栈":["11.1"],"执行栈":["11.1"],"stack":["11.1"],"执行栈会将当前的执行上下文":["11.1"],"通俗一点可以理解成当前的函数调用":["11.1"],"压入到执行栈当中":["11.1"],"如果存在则按顺序执行":["11.2"],"直至清空":["11.2"],"如果在执行过程中产生了新的":["11.2"],"则把该任务放入队列的队尾":["11.2"],"settimeout2":["11.4"],"end":["11.4","20.3","20.5"],"这里的结果是什么呢":["11.4"],"不妨结合上面简述的知识看一下":["11.4"],"promise1":["11.5"],"then":["11.5"],"promise2":["11.5","12.8"],"loop":["11.6"],"null":["12.0","14.5","16.1"],"return":["12.0","12.2","12.3","14.9","16.1","16.3","20.3","23.21","26.22","26.26","26.28","28.16"],"false":["12.0","26.22"],"prototype":["12.1","17.7"],"第三步":["12.1"],"改变构造函数的this指向":["12.1"],"apply":["12.1","12.6","28.20"],"第四步":["12.1"],"判断返回值":["12.1"],"测试":["12.1","12.2","12.3"],"带参数执行函数":["12.2"],"contextfn":["12.2","12.3"],"删除fn":["12.2","12.3"],"确保不会污染原对象":["12.2","12.3"],"delete":["12.2","12.3"],"slice":["12.4"],"call":["12.4"],"arguments":["12.4"],"fnop":["12.4"],"绑定后生成的函数":["12.4"],"fbound":["12.4"],"bindargs":["12.4"],"使用apply改变调用时的this指向":["12.4"],"cleartimeout":["12.5"],"延迟执行函数":["12.5"],"this":["12.6","15.11","16.2","17.5","23.12","23.15","26.17","28.10","28.11","28.20"],"则返回缓存的对象":["12.7"],"防止递归进入死循环":["12.7"],"has":["12.7"],"使用原对象的构造函数创建一个新对象":["12.7"],"newobj":["12.7"],"constructor":["12.7","15.2","28.20"],"throw":["12.8"],"成功":["12.8","16.4"],"resolvemicrotask":["12.8","16.4"],"queuemicrotask":["12.8","16.4"],"then执行阶段错误捕获":["12.8","16.4"],"x":["12.8","16.4","17.8","23.26"],"resolvepromise":["12.8","16.4"],"失败":["12.8","16.4"],"rejectmicrotask":["12.8","16.4"],"发布者":["12.9"],"eventbus":["12.9","14.10"],"推送消息":["12.9","14.10"],"pusharticle":["12.9","14.10"],"val":["12.9","14.10","26.26"],"一些手写的源码解析":["13.1"],"多数人知晓的":["14.1"],"经过分类编目的":["14.1"],"l":["14.2"],"liskov":["14.2"],"substitution":["14.2"],"里氏替换原则":["14.2"],"子类能覆盖父类":["14.2"],"订阅模式其实是一种对象间一对多的依赖关系":["14.4"],"specific":["14.5"],"cbs":["14.5"],"没有":["14.5"],"直接":["14.5"],"遍历缓存列表":["14.6"],"update":["14.6","20.6"],"触发观察者的回调函数":["14.6"],"观察者":["14.6"],"name":["14.6","17.3","17.5","23.7"],"发布":["14.8"],"指向观察者":["14.9"],"收集":["14.9"],"set":["14.9"],"newval":["14.9"],"新值与旧值相等":["14.9"],"或新值与旧值都为nan":["14.9"],"发布订阅者模式比观察者模式多了一个调度中心":["14.11"],"pattern":["15.0","15.3","15.9"],"永远只会存在一个":["15.1"],"loading":["15.1"],"true":["15.2","17.2","29.8","29.22","29.32"],"符合单一职责的单例模式":["15.2"],"把功能函数提取出来":["15.2"],"如初始化":["15.2"],"等操作方法":["15.2"],"功能类":["15.2"],"funcclass":["15.2"],"createelement创建dom元素":["15.4"],"就是使用工厂模式的思想实现的":["15.4"],"bclass":["15.5"],"defulat":["15.5"],"又称生成器模式":["15.6"],"汽车工厂类似与这种由多个部件组成的":["15.7"],"部件2":["15.8"],"setaddress":["15.8"],"address":["15.8"],"链模式使用":["15.8"],"相关的拦截器":["15.10"],"item":["15.11","25.7"],"运用共享技术来有效地支持大量细粒度对象的复用":["15.12"],"以减少创建的对象的数量":["15.12"],"优点":["15.13"],"减少了系统中的对象数量":["15.13"],"提高了程序运行效率和性能":["15.13"],"等待态":["16.0"],"fulfiled":["16.0"],"value":["16.1"],"如果状态不是pending":["16.1"],"则直接返回":["16.1"],"因为状态已经改变就不可再次改变":["16.1"],"状态置为成功的状态fulfiled":["16.1"],"执行传进来的回调函数":["16.2"],"executor":["16.2"],"resolve":["16.2","28.16"],"时执行第二个回调":["16.3"],"失败的回调":["16.3"],"pending":["16.3"],"时":["16.3"],"暂时保存两个回调":["16.3"],"onfulfilledcallbacks":["16.3"],"onrejectedcallbacks":["16.3"],"如果":["16.4"],"js中添加以下代码":["16.5"],"我们手写的promise":["16.5"],"mypromise":["16.5"],"测试代码":["16.5"],"deferred":["16.5"],"规范实现的":["16.6"],"then方法我参考了":["16.6"],"能说下promise实现异步的原理吗":["16.7"],"consle":["17.0"],"实例":["17.0","26.9"],"person1":["17.0","17.4","23.25"],"tom":["17.0","17.4"],"person2":["17.0","17.4","17.7","17.9"],"proto":["17.2"],"创建的对象就是object的实例":["17.3"],"验证":["17.3"],"people":["17.3"],"lucy":["17.3","23.7","26.24"],"jim":["17.4","26.24"],"person":["17.5"],"age":["17.5","23.17"],"函数和对象的":["18.0"],"可访问性":["18.0"],"在任何地方都能访问到的对象称之为全局作用域":["18.1"],"这不是对象字面量":["18.3"],"而是一个独立的块":["18.3"],"解释器会根据其中内容识别出它来":["18.3"],"d":["18.3","26.5","29.18","29.29","29.33"],"即执行":["18.4"],"函数代码":["18.4"],"这里的":["18.4"],"并没有":["18.4"],"声明":["18.4"],"直接赋值":["18.4"],"所以顺着":["18.4"],"向上查找":["18.4"],"在fn中没有找到":["18.4"],"继续向上查找":["18.4"],"在全局作用域中找到了":["18.4"],"所以全局作用域下的":["18.4"],"变量的值被改变为50":["18.4"],"接下来输出a":["18.4"],"同理":["18.4"],"防止全局变量污染":["18.5"],"可以让局部变量常驻在内存中":["18.5"],"会造成内存泄漏":["18.5"],"有一块内存空间被长期占用":["18.5"],"而不被释放":["18.5"],"垃圾收集器会定期":["18.6"],"周期性":["18.6"],"找出那些不在继续使用的变量":["18.6"],"然后释放其内存":["18.6"],"就可能会用到它们":["18.7"],"而当变量离开环境时":["18.7"],"则将其标记为":["18.7"],"离开环境":["18.7"],"如果同一个值又被赋给另一个变量":["18.8"],"则该值的引用次数加1":["18.8"],"com":["18.9"],"一个可以快速搭建类似于vue官方文档一样的文档":["19.0"],"vuepress官方文档":["19.1"],"这样我们更改配置文件后就不需要重新启动项目也能看到效果啦":["19.2"],"scripts":["19.2","29.18"],"dev":["19.2","19.3","29.18","29.20"],"templates":["19.3"],"谨慎配置":["19.3"],"ssr":["19.3"],"features":["19.4"],"title":["19.4"],"简洁至上":["19.4"],"details":["19.4"],"以":["19.4"],"markdown":["19.4"],"为中心的项目结构":["19.4"],"以最少的配置帮助你专注于写作":["19.4"],"nav":["19.5"],"text":["19.5","20.3"],"主页":["19.5"],"home":["19.5"],"时间轴":["19.5"],"timeline":["19.5"],"date":["19.5"],"随笔":["19.5"],"因为我的自动部署是在gh":["19.6"],"pages分支":["19.6"],"所以我的pages的source为gh":["19.6"],"为了减少这些资源的加载时间":["20.0"],"http缓存机制被引入":["20.0"],"浏览器会直接从本地缓存中获取资源":["20.1"],"07":["20.2"],"00":["20.2"],"gmt":["20.2"],"content":["20.3"],"charset":["20.3","20.5","29.4"],"utf":["20.3","20.5","29.4"],"缓存一天":["20.3"],"filestream":["20.3"],"createreadstream":["20.3"],"pipe":["20.3"],"on":["20.3"],"clienterror":["20.3"],"err":["20.3","28.18"],"socket":["20.3"],"bad":["20.3"],"request":["20.3"],"r":["20.3"],"n":["20.3","23.13"],"当浏览器再次请求该资源时":["20.4"],"它会将这些值作为请求头部的":["20.4"],"判断资源是否发生变化":["20.5"],"headers":["20.5"],"writehead":["20.5"],"jpg":["20.6"],"filecontent":["20.6"],"readfilesync":["20.6"],"hash":["20.6","28.10"],"createhash":["20.6"],"md5":["20.6"],"digest":["20.6"],"hex":["20.6"],"看来是舒适的工作环境让我逐渐失去了前进的动力":["23.0"],"️":["23.0"],"也就是说":["23.1"],"拥有":["23.1"],"超集":["23.2"],"完全兼容":["23.2"],"npm":["23.3","29.5","29.17","29.20"],"install":["23.3"],"nunm":["23.4"],"number":["23.4","23.8","23.15","23.16","23.24"],"在元组初始化的时候":["23.9"],"如果出现类型和":["23.9"],"不匹配的话":["23.9"],"direction":["23.10"],"north":["23.10"],"south":["23.10"],"east":["23.10"],"notsure":["23.11"],"any":["23.11"],"is":["23.12","23.15"],"默认情况下":["23.13","26.17","28.6"],"类型":["23.14","23.16"],"除了":["23.14","29.24"],"本身之外":["23.14"],"即使":["23.14"],"string":["23.15","23.17"],"strlength":["23.15"],"familyperson":["23.18"],"readonly":["23.19"],"只读属性":["23.19"],"es6":["23.20"],"箭头函数的写法":["23.20"],"sayhello":["23.21"],"hi":["23.21"],"我是":["23.21"],"username":["23.22"],"protected":["23.22"],"password":["23.22"],"interface":["23.23"],"point3d":["23.23"],"帮助我们捕获用户传入的类型":["23.24"],"比如":["23.24","29.32"],"之后我们就可以使用这个类型":["23.24"],"上述中的":["23.24"],"并没有什么特别的含义":["23.24"],"conardli":["23.25"],"y":["23.26"],"哈哈":["23.27"],"另一个例子":["23.27"],"下面":["23.27"],"我们定义了一个名为":["23.27"],"allvehicles":["23.27"],"的联合类型":["23.27"],"它可以是":["23.27"],"plane":["23.27"],"docs":["23.28"],"在本文中":["25.0"],"我们将介绍如何使用":["25.0"],"parser":["25.1","29.9"],"vitejs":["25.1"],"pointer":["25.2"],"事件编写":["25.2"],"进行网格线的绘制":["25.3"],"因为暂时没有找到更好的绘制方法":["25.3"],"同时":["25.3"],"欢迎大家提出更好的建议":["25.3"],"在编写组件时":["25.3"],"yarn":["25.4","26.4"],"vue3griflayout":["25.6"],"vue3":["25.6","26.18"],"布局数据":["25.10"],"支持双向绑定v":["25.10"],"model":["25.10"],"layoutdata":["25.10"],"col":["25.10"],"说明":["25.11"],"自定义每个方块的内容":["25.12"],"draggablehandle":["25.13"],"拖拽中触发":["25.13"],"添加紧凑布局":["25.14"],"一直没有很好静下心来好好梳理一下":["26.0"],"一点点":["26.2"],"node":["26.3","26.10","28.3","28.6","29.18"],"create":["26.4"],"vue":["26.5","26.11","26.29","29.12"],"安装完之后在":["26.5"],"可以自动导入api":["26.6"],"如":["26.6","29.37"],"router":["26.6"],"elementplus":["26.6"],"这些的api":["26.6"],"在使用过程中就不需要我们手动去导入":["26.6"],"啦":["26.6"],"自动导入组件":["26.6"],"只会导入我们使用的组件":["26.6"],"pages":["26.7"],"注意这里要带上":["26.7"],"文件后缀":["26.7"],"history":["26.7"],"所以安装一下":["26.8"],"createpinia":["26.9"],"创建":["26.9"],"use":["26.9"],"moduleresolution":["26.10"],"strict":["26.10"],"jsx":["26.10"],"preserve":["26.10"],"sourcemap":["26.10"],"resolvejsonmodule":["26.10"],"isolatedmodules":["26.10"],"不得不说":["26.11"],"slots":["26.12"],"触发事件":["26.12"],"方法":["26.12"],"emit":["26.12","28.16"],"needed":["26.13"],"created":["26.13"],"beforemount":["26.13"],"onbeforemount":["26.13"],"isref":["26.14"],"的语法糖函数":["26.14"],"检查值是否为一个":["26.14"],"创建的响应式代理":["26.15"],"isreactive":["26.15"],"但是该代理是":["26.15"],"创建的":["26.15"],"错误":["26.16"],"或者":["26.16"],"接受一个具有":["26.16"],"以及相应的":["26.17"],"watch选项":["26.17"],"完全等效":["26.17"],"需要侦听特定的数据源":["26.17"],"并在单独的回调函数中执行副作用":["26.17"],"它也是惰性的":["26.17"],"即回调仅在侦听源发生变化时被调用":["26.17"],"与":["26.17"],"b":["26.19"],"只不过在":["26.19"],"数组":["26.20"],"element":["26.22"],"setup":["26.26"],"clickbox":["26.26"],"指定绑定值写法":["26.27"],"modelvalue":["26.27"],"export":["26.28","29.20"],"default":["26.28","29.20"],"definecomponent":["26.28"],"从ctx中解构出来":["26.28"],"proptype":["26.29"],"routerecordraw":["26.29"],"原理篇":["27.1"],"类似于其他构建工具中":["28.2"],"任务":["28.2"],"task":["28.2"],"运行在":["28.3"],"中":["28.3","28.15"],"并且能够执行任何操作":["28.3"],"可以通过":["28.3"],"options":["28.3","28.7","28.18","29.15","29.30"],"对象配置":["28.3"],"仍然支持使用":["28.3"],"使用":["28.4","29.24"],"的方式":["28.4"],"配置方式":["28.4"],"在":["28.4","28.6","28.14"],"webpack":["28.4","29.2","29.26"],"config":["28.4","29.22"],"文件中指定":["28.4"],"plugins":["28.5","29.15","29.30","29.32","29.33"],"mode":["28.5","29.11","29.32"],"development":["28.5"],"我们自定义的loader":["28.5"],"打印我们接收到的文件内容":["28.5"],"由于同步计算过于耗时":["28.6"],"这样的单线程环境下进行此操作并不是好的方案":["28.6"],"我们建议尽可能地使你的":["28.6"],"异步化":["28.6"],"但如果计算量很小":["28.6"],"也是可以的":["28.6"],"raw":["28.6"],"meta":["28.7","29.4","29.33"],"getoptions":["28.7"],"schema":["28.7","28.9"],"获取":["28.7"],"的":["28.7"],"path":["28.8","28.18"],"require":["28.8","28.9","29.14","29.16","29.30","29.38"],"htmlwebpackplugin":["28.8"],"plugin":["28.8","29.26","29.33"],"单入口":["28.8"],"json":["28.9","29.1","29.18"],"module":["28.9","29.24","29.25","29.26","29.29","29.30","29.33","29.34"],"interpolatename":["28.10"],"ext":["28.10"],"输出文件":["28.10"],"相对路径必须以":["28.11"],"或":["28.11"],"开头":["28.11"],"相对路径的路径分隔符必须是":["28.11"],"不能是":["28.11"],"relativerequest":["28.11"],"split":["28.11"],"part":["28.11"],"将路径转化为相对路径":["28.11"],"relativepath":["28.11"],"utils":["28.11"],"contextify":["28.11"],"context":["28.11"],"loader":["28.13","29.5","29.11","29.25","29.29"],"无法实现的":["28.13"],"其他功能":["28.13"],"为":["28.14"],"提供了统一的插件接口":["28.14"],"类型定义":["28.14"],"它是":["28.14"],"的核心功能库":["28.14"],"中目前有十种":["28.14"],"源码中可以看到":["28.14"],"他们是":["28.14"],"outputfilesystem":["28.15"],"可以进行文件操作":["28.15"],"相当于":["28.15"],"nodejs":["28.15"],"fs":["28.15"],"hooks":["28.15","28.20"],"可以注册":["28.15"],"的不同种类":["28.15"],"hook":["28.15"],"从而可以在":["28.15"],"必须调用":["28.16"],"必须返回promise":["28.16"],"promise":["28.16"],"asyncserieshook":["28.16"],"也就是异步串行钩子":["28.16"],"特点就是异步任务顺序执行":["28.16"],"css":["28.17"],"emit是异步串行钩子":["28.17","28.19"],"tapasync":["28.17","28.18"],"callback":["28.17","28.18"],"assets包含所有即将输出的资源":["28.17"],"通过过滤只保留需要处理的文件":["28.17"],"compilation":["28.18","28.19","28.20"],"获取输出文件目录":["28.18"],"outputpath":["28.18"],"output":["28.18","29.34"],"删除目录所有文件":["28.18"],"tap":["28.19","28.20"],"object":["28.19"],"entries将对象变成二维数组":["28.19"],"tests":["28.20"],"compiler":["28.20"],"gethooks":["28.20"],"alterassettaggroups":["28.20"],"webpack是一个比较流行的打包工具":["29.0"],"可以通过配置loader":["29.0"],"plugin来优化我们的代码":["29.0"],"webpack配置文件":["29.1"],"package":["29.1","29.18"],"在src":["29.1"],"是用来运行本地安装":["29.3"],"包的":["29.3"],"rules":["29.4","29.26"],"为了更好的观察我们打包输出的文件":["29.4"],"我们先配置一下devserve":["29.4"],"在根目录中新增一个public文件夹":["29.4"],"并在其中新建一个index":["29.4"],"doctype":["29.4","29.33"],"lang":["29.4","29.33"],"en":["29.4","29.33"],"head":["29.4","29.33"],"在这里报错了":["29.5"],"原因是":["29.5"],"webpack只能处理js和json文件":["29.5"],"其它类型的文件不能处理":["29.5"],"需要借助loader来处理":["29.5"],"安装":["29.5"],"处理css文件":["29.5"],"size":["29.6"],"contain":["29.6"],"images":["29.6"],"webp":["29.6"],"iconfont":["29.7"],"icon":["29.7"],"bluetoothoff":["29.7"],"就可以实现":["29.8"],"asset":["29.9"],"dataurlcondition":["29.9"],"maxsize":["29.9"],"小于10kb的图片会被base64处理":["29.9"],"generator":["29.9"],"将图片文件输出到":["29.9"],"兼容性跟静态检查":["29.10"],"测试的时候":["29.11"],"把模式":["29.11"],"的值改为":["29.11"],"none":["29.11"],"这样就可以比较清晰的看到输出啦":["29.11"],"可以看的出来":["29.11"],"我们使用的es6的语法在输出的资源中还是原本的语法":["29.11"],"这样的话在低版本浏览器就会出现兼容性的问题":["29.11"],"png安装babel以及相关依赖":["29.11"],"编译es6语法转化为es5的语法":["29.11"],"core":["29.11"],"编译的核心包":["29.11"],"文件":["29.12"],"并根据官网规则配置":["29.12"],"比较出名的几个规则":["29.12"],"官方的规则open":["29.12"],"window":["29.12"],"recommended":["29.12"],"cli":["29.12"],"替换成":["29.14"],"插件的loader":["29.14"],"并且需要调用插件":["29.14"],"minicssextractplugin":["29.14"],"postcssoptions":["29.15"],"配置文件":["29.16"],"cssminimizerplugin":["29.16"],"为例":["29.17"],"安装依赖":["29.17","29.37"],"配置启动命令":["29.18"],"打开":["29.18"],"我们已经把基本配置都配置好了":["29.19"],"新建一个js文件夹":["29.20"],"并在文件夹中建立a":["29.20"],"js文件":["29.20"],"故意写入一点错误代码":["29.20"],"然后运行":["29.20"],"run":["29.20"],"exports":["29.22","29.24","29.25","29.26","29.29","29.30","29.33","29.34"],"其他省略":["29.22"],"devserver":["29.22"],"host":["29.22"],"启动服务器域名":["29.22"],"port":["29.22"],"启动服务器端口号":["29.22"],"open":["29.22"],"是否自动打开浏览器":["29.22"],"但是都要过一遍":["29.23"],"比较慢":["29.23"],"顾名思义就是只能匹配上一个":["29.23"],"文件以外其他文件都处理":["29.24"],"加载器":["29.24","29.25","29.26","29.29"],"modules":["29.25"],"eslint的缓存位置我们可以自己设置":["29.25"],"terserplugin":["29.26"],"terser":["29.26"],"是一个术语":["29.28"],"通常用于描述移除":["29.28"],"配置":["29.29","29.38"],"配置也相对简单":["29.29"],"只需要在":["29.29"],"中引用插件就好":["29.29"],"imageminimizerplugin":["29.30"],"插件":["29.30"],"压缩图片":["29.30"],"implementation":["29.30"],"imagemingenerate":["29.30"],"体验":["29.31"],"什么是chunk":["29.32"],"打包的资源就是chunk":["29.32"],"输出出去叫bundle":["29.32"],"chunk的name是啥呢":["29.32"],"entry中xxx":["29.32"],"xxx":["29.32","29.35"],"name就是xxx":["29.32"],"注意是前面的xxx":["29.32"],"和文件名无关":["29.32"],"为什么需要这样命名呢":["29.32"],"如果还是之前写法main":["29.32"],"那么打包生成两个js文件都会叫做main":["29.32"],"js会发生覆盖":["29.32"],"实际上会直接报错的":["29.32"],"clear":["29.32"],"production":["29.32"],"运行指令":["29.32"],"npx":["29.32"],"此时在":["29.32"],"目录我们能看到输出了两个":["29.32"],"总结":["29.32"],"配置了几个入口":["29.32"],"至少输出几个":["29.32"],"提取重复文件":["29.32"],"通过输出文件":["29.32"],"我们可以看出来":["29.32"],"eslint":["29.33"],"解决动态导入import语法报错问题":["29.33"],"只有文件内容变化了":["29.34"],"值才会变化":["29.34"],"所有文件":["29.34"],"值是独享且不同的":["29.34"],"有了以上的知识":["29.34"],"我们就可以根据不同的占位符来配置一下了":["29.34"],"输出":["29.34"],"static":["29.34"],"入口文件打包输出资源命名方式":["29.34"],"chunkfilename":["29.34"],"引用的":["29.35"],"更新后":["29.35"],"yyy":["29.35"],"当前页面优先级高的资源用":["29.36"],"加载":["29.36"],"下一个页面需要使用的资源用":["29.36"],"它们的问题":["29.36"],"兼容性较差":["29.36"],"babel":["29.37"],"无法解决的兼容性问题":["29.37"],"async函数":["29.37"],"promise对象等":["29.37"],"workboxplugin":["29.38"]},{"0":["0.8","8.15","10.4","10.14","29.4"],"1":["0.3","3.4","11.4"],"2":["0.0","3.3"],"3":["3.3","18.4","23.8","25.0","29.6"],"4":["11.2"],"5":["25.3","29.22","29.30"],"6":["7.7","29.22"],"8":["20.6","25.1","28.6","29.4","29.33"],"9":["8.12"],"10":["10.22"],"12":["25.10","26.3"],"17":["23.25"],"18":["12.2","12.3","15.8","17.0","17.4","23.7"],"20":["10.11"],"26":["25.1"],"40":["10.6"],"50":["10.5","10.6","10.10","25.10"],"100":["0.11","10.9","10.16","10.17","10.18"],"110":["10.8"],"123":["17.5"],"150":["10.6","10.14"],"160":["10.8"],"180":["10.17"],"200":["10.12","15.11"],"400":["20.5"],"555":["29.20"],"3000":["28.16"],"8080":["20.3"],"2147483647":["8.11"],"元素获取文件":["0.0"],"事件被触发":["0.2"],"当元素或者选择的文本被拖拽到一个有效的放置目标上时":["0.2"],"switch":["0.3"],"case":["0.3"],"alert":["0.3"],"未找到文件":["0.3"],"break":["0.3","14.5"],"安全错误":["0.3"],"属性或者拖拽操作的元素的":["0.4"],"datatransfer":["0.4"],"upload":["0.6"],"点击上传":["0.6"],"把文件保存到文件数组中":["0.7"],"push":["0.7","12.8","16.4","26.29"],"初始化文件":["0.7"],"filestoblod":["0.7","0.8"],"else":["0.7","6.5","12.8","16.4"],"target":["0.8"],"files":["0.8","28.18"],"spreadsheetml":["0.9"],"sheet":["0.9"],"pdf":["0.9"],"text":["0.9","20.6"],"plain":["0.9"],"innerhtml":["0.10"],"删除文件数组中对应的数据":["0.10"],"filearr":["0.10"],"splice":["0.10","14.5"],"170px":["0.11"],"3px":["0.11"],"display":["0.11","2.7"],"inline":["0.11"],"block":["0.11"],"缩略图":["0.11"],"img":["0.11"],"145px":["0.11"],"删除按钮":["0.11"],"absolute":["0.11"],"right":["0.11"],"type":["0.12","20.6","23.9","23.27","26.29"],"属性获取文件类型":["0.12"],"filereader":["0.12"],"对象":["0.12","17.4"],"通过":["0.12"],"readasdataurl":["0.12"],"希望大家及时指出":["2.0"],"直接a标签点击下载":["2.1"],"download属性":["2.1"],"用法":["2.2","28.4"],"属性可以指定下载的文件的文件名":["2.2"],"如果有属性值则该属性值就是下载后的文件的文件名":["2.2"],"js":["2.2","10.13","19.3","26.8","26.19","29.8","29.36"],"a":["2.2","7.13","12.2","23.11","23.24","29.1"],"blob":["2.3","28.14"],"base64":["2.3"],"读取文件流":["2.4"],"const":["2.4","2.8","6.4","8.14","15.8","23.18","23.20","23.21","28.19","29.1"],"window":["2.4","28.15"],"创建a标签并设置属性":["2.4","2.5"],"reader":["2.5"],"new":["2.5","12.0","15.8","16.5","23.21","23.26","28.15"],"读取完成的回调事件":["2.5"],"e":["2.5"],"使用该方法需要注意":["2.6"],"none":["2.7","20.4"],"创建input":["2.7"],"用于传参":["2.7"],"formitem":["2.7"],"input":["2.7"],"创建iframe":["2.8"],"document":["2.8","10.13","19.5","29.4"],"createelement":["2.8"],"博客主要记录一些学习的文章":["2.9","11.6","16.7","18.9","23.28"],"如有不足":["2.9","8.16","11.6"],"排查下来":["3.0"],"严重感觉身体被掏空":["3.0"],"本文并未有消灭或歧视":["3.0"],"比如":["3.2"],"条件赋值":["3.2"],"递归":["3.2"],"num值在nboolean为true时为10":["3.2"],"否则为5":["3.2"],"let":["3.2","10.13","18.5","23.5","23.26","28.19"],"num":["3.2"],"d":["3.3","7.2","7.7","28.5","29.2","29.5","29.11","29.17","29.37"],"tactics":["3.4"],"b":["3.4","17.8"],"default":["3.5","26.7","28.10","29.30"],"至此":["3.6"],"这个需求做完了":["3.6"],"然后产品经理说要加上一个部门区分":["3.6"],"假设公司有两个部门d和f":["3.6"],"d部门的业绩较好":["3.6"],"所以年终奖翻1":["3.6"],"2倍":["3.6"],"f部门的业绩较差":["3.6"],"年终奖打9折":["3.6"],"改造以上代码":["3.6"],"把状态值拼接":["3.6"],"然后存入map中":["3.6"],"只是希望在大家以后的代码中不仅仅只有":["3.7"],"他提到了":["4.0"],"的通信方式":["4.0"],"source":["4.1","28.19"],"表示发送方窗口的引用":["4.1"],"function":["4.1","28.9"],"event":["4.1","12.9","14.10"],"判断消息是否来自可信任的源":["4.1"],"if":["4.1","14.9","29.22"],"console":["4.1","12.2","12.3","12.9","14.6","14.10","15.5","15.11","16.1","17.0","17.3","20.3","29.20"],"log":["4.1","12.2","12.3","12.9","14.6","15.5","15.11","16.1","17.3","20.3"],"兼容性":["4.1"],"来自":["4.1"],"mdn":["4.1"],"image":["4.1","10.12","20.6","28.5","29.32"],"iframe之间的通信":["5.1"],"最后给大家看一个简化版的":["6.0"],"没有美工样式":["6.0"],"抽奖方式主要分为两种":["6.1"],"一种是随机抽取":["6.1"],"完全随机":["6.1"],"还有一种是指定奖品抽取":["6.1"],"index":["6.3","28.14"],"in":["6.3","12.7","25.7","28.15"],"raffleitem":["6.3"],"appointraffle":["6.4"],"ref":["6.4"],"handleraffle":["6.5"],"转动的方法实现":["6.5"],"这里需要注意的是":["6.5"],"我们使用的是索引值":["6.5"],"所以转动一圈为":["6.5"],"而不是":["6.5"],"抽奖方法":["6.5"],"每转完一圈":["6.5"],"转动速度规则":["6.5"],"speedrole":["6.5"],"如果圈数跟需要转动的总圈数相同并且转到本轮中奖的位置则停止转动":["6.5"],"谢谢":["6.6","29.39"],"匹配数组中包含的字符":["7.1"],"arr":["7.1","12.0"],"国":["7.1"],"人":["7.1"],"str":["7.1"],"之外的任何单个字符":["7.2"],"表示或":["7.2"],"匹配一个数字字符":["7.2"],"匹配一个非数字字符":["7.2"],"f":["7.2"],"匹配六位数字":["7.7"],"var":["7.7"],"reg":["7.7"],"敏感词":["7.9","7.10","7.12"],"查找模式匹配":["7.9"],"正则表达式":["7.11"],"do":["7.11"],"result":["7.11"],"zhongguo":["7.13"],"upwd":["7.13"],"zhongguo123":["7.13"],"z":["7.13","23.23","23.24"],"z0":["7.13"],"每个方法都有自己的优缺点":["7.14"],"零宽断言":["7.14"],"主要是在指定的位置添加限制条件":["7.14"],"方法设置一个定时器":["8.0"],"可选":["8.2"],"延迟的毫秒数":["8.2"],"一秒等于1000毫秒":["8.2"],"函数的调用会在该延迟之后发生":["8.2"],"如果省略该参数":["8.2"],"delay取默认值0":["8.2"],"意味着":["8.2"],"clearinterval":["8.3","8.12","8.15"],"可以互换":["8.3"],"但是":["8.3"],"方法重复调用函数或执行代码片段":["8.4"],"每次调用之间有固定的时间延迟":["8.4"],"arg2":["8.5"],"函数的每次调用会在该延迟之后发生":["8.6"],"和settimeout一样":["8.6"],"实际的延迟时间可能会稍长一点":["8.6"],"这个时间计算单位是毫秒":["8.6"],"cleartimeout":["8.7","12.6"],"在技术上是可互换使用的":["8.7"],"这通常是由于函数嵌套导致":["8.9"],"被其他任务占用导致延时":["8.10"],"需要被强调是":["8.10"],"大于":["8.11"],"毫秒":["8.11"],"setinterval":["8.12","10.28"],"执行十次后停止并清除定时器":["8.12"],"定义定时器":["8.14","8.15"],"间隔一秒执行一次该函数":["8.14","8.15"],"timer":["8.14","8.15"],"formdata":["9.0","9.1"],"的":["9.0","28.3"],"不支持":["9.0"],"audio":["9.1"],"wav":["9.1"],"formdata对象":["9.1"],"fd":["9.1"],"把文件追加到formdata对象中":["9.1"],"append":["9.1"],"autocall":["9.1"],"file":["9.1"],"️":["10.0"],"封装一个全局指令":["10.0"],"这里案列是私有指令":["10.0"],"新增的元素":["10.1"],"主要用来绘制图形":["10.1"],"分别设置标签的高度与宽度":["10.2"],"默认值为":["10.2"],"png":["10.3","10.12","10.13","20.6","28.5","29.6","29.32","29.34"],"当浏览器不兼容的时候":["10.3"],"就会显示我们标签中的备选文案":["10.3"],"当前的浏览器版本不支持":["10.3"],"我们分析一下上述的代码":["10.4"],"以栅格的图来描述可以得到以下图片":["10.4"],"一个格子为50":["10.4"],"可以看得出来":["10.4"],"我们":["10.4"],"画图":["10.4"],"的起点为":["10.4"],"画布":["10.4"],"的左上角":["10.4"],"坐标为":["10.4"],"使用getcontext函数来获取画笔":["10.5"],"ctx":["10.5","10.13","10.14","10.18"],"getcontext":["10.5","10.11","10.13","10.14","10.16","10.18"],"2d":["10.5","10.11","10.13","10.14","10.16","10.18"],"开启路径绘制":["10.5"],"移动画笔起点到":["10.5"],"stroke":["10.6"],"lineto":["10.9"],"linewidth":["10.9"],"length":["10.10","23.15"],"beginpath":["10.10"],"moveto":["10.10"],"对了":["10.12"],"文本还有一点小知识":["10.12"],"就是控制文本的样式":["10.12"],"value":["10.12","14.9"],"当前我们用来绘制文本的样式":["10.12"],"这个字符串使用和":["10.12"],"css":["10.12","28.4"],"属性相同的语法":["10.12"],"实践":["10.13"],"canvas":["10.13"],"getelementbyid":["10.13"],"fillrect":["10.14","10.22"],"使用默认设置绘制一个矩形":["10.14"],"保存默认状态":["10.14"],"save":["10.16","10.18","10.25"],"保存坐原点平移之前的状态":["10.16"],"translate":["10.17"],"平移坐标原点":["10.17"],"math":["10.17"],"pi":["10.17"],"保存初始状态":["10.18"],"strokestyle":["10.18"],"red":["10.18"],"strokerect":["10.18"],"水平方向的缩放":["10.20"],"m12":["10.20"],"竖直方向的倾斜偏移":["10.20"],"方法":["10.21"],"如果任意一个参数是无限大":["10.21"],"atop":["10.24"],"新图形只绘制与旧图形内容重叠的地方":["10.24"],"旧图形正常绘制":["10.24"],"新图形位于旧图形上方":["10.24"],"destination":["10.24"],"新图像会在老图像的下面":["10.24"],"绘制旧图形":["10.24"],"fff":["10.25"],"在圆形中随机取坐标原点":["10.25"],"floor":["10.25"],"random":["10.25"],"状态的设置":["10.27"],"样式":["10.27"],"变形之类的":["10.27"],"又要在每画一帧之时都是原始状态的话":["10.27"],"你需要先保存一下":["10.27"],"为了实现动画":["10.28"],"我们需要一些可以定时执行重绘的方法":["10.28"],"我们可以通过以下三种方法来实现定时重绘":["10.28"],"望大家指出":["10.29","14.12","15.14","25.15","28.21"],"eventloop有两种":["11.0"],"浏览器的eventloop":["11.0"],"执行完成后就会把它弹出去":["11.1"],"任务队列":["11.1"],"queue":["11.1"],"任务队列通俗的讲就是存放异步任务的队列":["11.1"],"js的任务队列有两种":["11.1"],"宏任务队列":["11.1"],"macrotask":["11.1"],"在当前周期执行":["11.2"],"执行完毕":["11.2"],"为空":["11.2"],"相信这样简单的题目":["11.4"],"对于正在看文章的你来说是轻而易举的":["11.4"],"我们来分析一下具体的流程":["11.4"],"end":["11.5"],"这里结果又会是什么呢":["11.5"],"测试":["12.0"],"obj":["12.0"],"fn":["12.0"],"class":["12.0","17.5","26.24","26.26","29.4"],"father":["12.0"],"father1":["12.0"],"student":["12.1"],"name":["12.1","12.2","12.3","12.9","14.10","23.4","26.29","28.7","29.4","29.30"],"age":["12.1","12.2","12.3","23.7"],"this":["12.1","12.5","23.22","28.9","28.18"],"tom":["12.1","12.2","12.3","15.8"],"add":["12.2","12.3","25.4"],"hobby":["12.2","12.3"],"my":["12.2","12.3","23.12"],"this只和运行的时候有关系":["12.4"],"所以这里的this和上面的self不是一样的":["12.4"],"return":["12.4","15.11","16.5","20.5","23.22","26.24","28.5","28.10","28.11","28.17"],"apply":["12.4","12.5"],"instanceof":["12.4","16.3","17.9"],"concat":["12.4"],"继承原型":["12.4"],"settimeout":["12.5"],"清除定时器":["12.6"],"null":["12.6"],"缓存对象":["12.7"],"用于循环引用的情况":["12.7"],"set":["12.7","26.16"],"for":["12.7"],"key":["12.7","25.7"],"hasownproperty":["12.7"],"递归克隆":["12.7"],"如果":["12.8"],"为":["12.8","16.4","28.6"],"时执行第一个回调":["12.8","16.4"],"时执行第二个回调":["12.8","16.4"],"时":["12.8","16.4"],"暂时保存两个回调":["12.8","16.4"],"订阅者":["12.9","14.10"],"观察者模式跟发布订阅者模式":["13.1"],"js的设计模式":["13.1"],"代码设计经验的总结":["14.1"],"使用设计模式是为了可重用代码":["14.1"],"让代码更容易被他人理解":["14.1"],"父类能出现的地方子类就能出现":["14.2"],"i":["14.2","28.5","29.11","29.36","29.37"],"interface":["14.2","23.27"],"segregation":["14.2"],"接口隔离原则":["14.2"],"保持接口的单一独立":["14.2"],"当一个对象的状态发送改变时":["14.4"],"若没有":["14.5"],"handler":["14.5"],"清空":["14.5"],"对应的缓存列表":["14.5"],"删除相应的":["14.5"],"cb":["14.5"],"while":["14.5"],"给":["14.6"],"发送消息":["14.6"],"订阅模式相对于观察者模式是面向调度中心编程的":["14.8"],"将对象处理为可被观察的":["14.9"],"暂时只处理对象第一层属性":["14.9"],"observer":["14.9"],"typeof":["14.9"],"也就是通过第三方来管理发布者跟订阅者":["14.11"],"又称为单体模式":["15.0"],"顾名思义一个类只能存在一个实例":["15.0"],"效果":["15.1"],"而不会重复出现":["15.1"],"浏览器的window":["15.1"],"单例类":["15.2"],"根据不同的输入值":["15.3"],"vue":["15.4","15.10","19.4","25.0","26.2","29.36"],"router的几种模式":["15.4"],"say":["15.5","29.20"],"我是aclass":["15.5"],"分步创建一个对象":["15.6"],"各个部件由代理商或者外包给其它人员进行生产":["15.7"],"最后自己来装配形成完整的产品":["15.7"],"china":["15.8"],"又称委托模式":["15.9"],"router":["15.10"],"可以出租":["15.11"],"什么时候签合同":["15.11"],"这个价格你可以看一下其它的房间":["15.11"],"中介":["15.11"],"intermediary":["15.11"],"如果系统中存在多个相同的对象":["15.12"],"那么只需共享一份就可以了":["15.12"],"精简了内存占用":["15.13"],"加快运行速度":["15.13"],"外部状态相对独立":["15.13"],"成功态":["16.0"],"rejected":["16.0"],"执行后的值改为传进来的值":["16.1"],"成功的回调":["16.1"],"reject":["16.2","16.5"],"err":["16.2","20.5"],"捕捉到错误直接执行reject":["16.2"],"promise":["16.3"],"typeerror":["16.3"],"the":["16.3"],"and":["16.3"],"are":["16.3"],"same":["16.3"],"同我们原来的判断":["16.3"],"这里只是为了和promisea":["16.3"],"规范保持统一":["16.3"],"object":["16.3","26.29","28.17"],"resolve":["16.5","28.8","29.26"],"面试官":["16.6"],"能说下promise实现异步的原理吗":["16.6"],"jim":["17.0"],"ƒ":["17.0"],"people1":["17.3"],"juli":["17.3"],"通过new":["17.3"],"object创建的对象就是object的实例":["17.3"],"函数":["17.4","26.12","26.17"],"fn1":["17.4"],"fn2":["17.4"],"consle":["17.4"],"prototype":["17.5"],"sayname":["17.5"],"isprototypeof":["17.7"],"true":["17.7","17.9","23.21","26.15","26.29","28.6","29.30"],"作用域分为全局作用域跟函数作用域":["18.0"],"js中没有":["18.0"],"window对象下的所有属性和方法都有全局作用域":["18.1"],"uncaught":["18.2"],"referenceerror":["18.2"],"is":["18.2","23.9"],"let与var的区别":["18.3"],"let声明的变量不存在变量提升":["18.3"],"严谨的说":["18.3"],"let声明的变量会产生":["18.3"],"暂时性死区":["18.3"],"不能在声明变量之前使用变量":["18.3"],"let定义的变量不能重复声明":["18.3"],"否则会报错":["18.3"],"变量在fn中找到":["18.4"],"使用就是fn中的":["18.4"],"而不是全局作用域下的":["18.4"],"所以a":["18.4"],"c就是全局作用域下的a":["18.4"],"c加上fn中的b":["18.4"],"最后输出200":["18.4"],"在全局作用域下打印":["18.4"],"使用的全局作用域的":["18.4"],"所以输出200":["18.4"],"试题":["18.4"],"aa":["18.4"],"test":["18.4","29.5","29.6","29.24","29.25","29.26","29.29","29.34"],"闭包的经典应用":["18.5"],"在es6":["18.5"],"出来之前":["18.5"],"解决for循环中的变量i是全局变量":["18.5"],"在定时器中最后得到的i都是循环的最后结果":["18.5"],"这个过程不是实时的":["18.6"],"因为其开销比较大并且gc时停止响应其他操作":["18.6"],"所以垃圾回收器会按照固定的时间间隔周期性的执行":["18.6"],"不再使用的变量也就是生命周期结束的变量":["18.6"],"垃圾回收器在运行的时候会给存储在内存中的所有变量都加上标记":["18.7"],"当然":["18.7","23.2"],"可以使用任何标记方式":["18.7"],"然后":["18.7"],"它会去掉环境中的变量以及被环境中的变量引用的变量的标记":["18.7"],"相反":["18.8"],"如果包含对这个值引用的变量又取得了另外一个值":["18.8"],"还提供博客主题让我们快速搭建自己的博客":["19.0"],"其中还内置评论":["19.0"],"reco主题文档":["19.1"],"docs":["19.2"],"build":["19.2","29.18"],"config":["19.3","26.5","26.6"],"enhanceapp":["19.3"],"readme":["19.3"],"vue驱动":["19.4"],"享受":["19.4"],"webpack":["19.4","29.18","29.36"],"的开发体验":["19.4"],"在":["19.4"],"留言板":["19.5"],"suggestion":["19.5"],"message":["19.5","23.12"],"board":["19.5"],"md":["19.5"],"自动部署主要是利用github的action实现":["19.6"],"具体的可以看仓库里面的代码":["19.6"],"︎":["20.0"],"缓存分为":["20.0"],"的实现方式有两种":["20.1"],"expires":["20.1"],"它表示该资源的过期时间":["20.2"],"当浏览器再次请求该资源时":["20.2"],"会判断是否在该过期时间内":["20.2"],"如果是则直接从缓存中获取资源":["20.2"],"否则重新向服务器请求":["20.2"],"要设置":["20.2"],"listen":["20.3"],"opened":["20.3"],"localhost":["20.3"],"address":["20.3"],"port":["20.3"],"一个简单的页面":["20.3"],"包含一张图片":["20.3"],"因为我们会直接通过浏览器的地址栏访问":["20.3"],"所以":["20.3"],"的缓存策略会失效":["20.3"],"这里我们判断缓存是否生效是通过页面中的图片去判断的":["20.3"],"doctype":["20.3"],"lang":["20.3"],"en":["20.3"],"head":["20.3"],"meta":["20.3"],"equiv":["20.3","29.4","29.33"],"x":["20.3","29.4"],"ua":["20.3","29.4","29.33"],"compatible":["20.3","29.4","29.33"],"match":["20.4"],"字段发送给服务器":["20.4"],"filestream":["20.5"],"createreadstream":["20.5"],"pipe":["20.5"],"on":["20.5"],"clienterror":["20.5"],"socket":["20.5"],"bad":["20.5"],"request":["20.5"],"r":["20.5"],"n":["20.5"],"etag需要加双引号":["20.6"],"header":["20.6"],"content":["20.6","28.9","29.4","29.33"],"charset":["20.6","29.33"],"utf":["20.6","28.6","29.33"],"headers":["20.6"],"这篇文章主要是我总结的一些":["23.0"],"的所有功能":["23.1"],"并且提供了可选的静态类型和基于类的面向对象编程":["23.1"],"所有":["23.2"],"语法规则":["23.2"],"使用":["23.2","29.23"],"也有一些缺点":["23.2"],"编译":["23.3"],"文件":["23.3"],"string":["23.4","23.16","26.29"],"lucy":["23.4","23.18"],"isboolean":["23.5"],"hexliteral":["23.6"],"0xf00d":["23.6"],"number":["23.7","23.17"],"使用数组泛型":["23.8"],"类型不匹配":["23.9"],"error":["23.9"],"not":["23.9"],"assignable":["23.9"],"to":["23.9"],"west":["23.10"],"指定开始值":["23.10"],"color":["23.10"],"maybe":["23.11"],"warning":["23.12"],"一个":["23.12","28.13","28.15"],"是所有类型的子类型":["23.13"],"就是说你可以把":["23.13"],"any":["23.14","26.29"],"也不可以赋值给":["23.14"],"下面是一些返回":["23.14"],"类型的函数":["23.14"],"另一个为":["23.15"],"as":["23.15","26.29"],"firstname":["23.16"],"conardli":["23.16","23.21"],"可选属性":["23.19"],"只读属性只能在对象刚刚创建的时候修改其值":["23.19"],"我今年":["23.21"],"岁了":["23.21"],"person1":["23.21"],"tolocalelowercase":["23.22"],"extends":["23.23","23.27"],"只不过是一个约定好的规范而已":["23.24"],"也就是说使用大写字母":["23.24"],"定义的类型变量都属于泛型":["23.24"],"把":["23.24"],"passport":["23.25"],"bank":["23.25"],"mygenericnumber":["23.26"],"或":["23.27"],"train":["23.27"],"类型":["23.27"],"vehicle":["23.27"],"topspeed":["23.27"],"carriages":["23.27"],"ts":["24.1","26.5","26.6","26.9"],"和":["25.0","26.16","28.16"],"typescript":["25.0","25.3","28.2"],"干净的依赖关系":["25.2"],"definecomponent":["25.3"],"而不是最新的":["25.3"],"setup":["25.3"],"语法糖":["25.3"],"以获得更好的":["25.3"],"支持":["25.3"],"grid":["25.6"],"layout":["25.6"],"picker":["25.6"],"id":["25.7","25.11"],"列数":["25.10"],"rowh":["25.10"],"行高":["25.10"],"resize":["25.12"],"拖拽方块的id":["25.13"],"拖拽方块的数据":["25.13"],"限定宽高时元素超出范围的处理方法":["25.14"],"缩放":["25.14"],"的知识":["26.0"],"js版本":["26.3"],"pnpm":["26.4"],"中插入一下代码":["26.5"],"import":["26.5","28.4","29.20","29.22"],"按需自动导入":["26.6"],"然后把下列代码插入到你的":["26.6"],"vite":["26.6"],"的配置文件中":["26.6"],"autoimport":["26.6"],"from":["26.6","28.4","29.20","29.22"],"elementplusresolver":["26.6"],"export":["26.7","26.9","28.10"],"修改入口文件":["26.7"],"mian":["26.7"],"createapp":["26.7"],"sass":["26.8"],"mount":["26.9"],"创建store":["26.9"],"src":["26.9","28.8","29.26"],"store":["26.9"],"definestore":["26.9"],"usemainstore":["26.9"],"main":["26.9","28.3","28.8","29.7","29.20","29.22"],"esmoduleinterop":["26.10"],"lib":["26.10","28.14"],"dom":["26.10"],"skiplibcheck":["26.10"],"baseurl":["26.10"],"paths":["26.10"],"的官方文档真的太":["26.11"],"nice":["26.11"],"暴露公共":["26.12"],"property":["26.12"],"expose":["26.12"],"函数中的":["26.12"],"是响应式的":["26.12"],"当传入新的":["26.12"],"prop":["26.12"],"mounted":["26.13"],"onmounted":["26.13"],"beforeupdate":["26.13"],"onbeforeupdate":["26.13"],"updated":["26.13"],"onupdated":["26.13"],"toref":["26.14"],"可以用来为源响应式对象上的某个":["26.14"],"新创建一个":["26.14"],"torefs":["26.14"],"将响应式对象":["26.14"],"reactive对象":["26.14"],"但包裹了由":["26.15"],"创建的另一个代理":["26.15"],"它也会返回":["26.15"],"isreadonly":["26.15"],"创建的只读代理":["26.15"],"toraw":["26.15"],"get":["26.16"],"函数的对象":["26.16"],"用来创建可写的":["26.16"],"相比":["26.17"],"允许我们":["26.17"],"惰性地执行副作用":["26.17"],"更具体地说明应触发侦听器重新运行的状态":["26.17"],"能够获取依赖源的新旧值":["26.17"],"侦听单一源":["26.17"],"侦听器数据源可以是一个具有返回值的":["26.17"],"getter":["26.17"],"也可以直接是一个":["26.17"],"中的应用":["26.18"],"tsx中":["26.19"],"由双大括号":["26.19"],"变为了单大括号":["26.19"],"style绑定需要使用":["26.20"],"span":["26.22","26.24","26.26"],"我是if":["26.22"],"我是else":["26.22"],"div":["26.24","26.26","29.4"],"box":["26.24"],"姓名":["26.24"],"box1":["26.26"],"我是box1":["26.26"],"title":["26.28","29.4"],"使用插槽":["26.28"],"可以通过":["26.28"],"v":["26.28"],"props":["26.29"],"required":["26.29"],"userouter":["26.29"],"jumproute":["26.29"],"并提供了处理前端构建步骤的得力方式":["28.2"],"可以将文件从不同的语言":["28.2"],"如":["28.2"],"query":["28.3","29.9"],"参数来设置选项":["28.3"],"但是这种方式已被废弃":["28.3"],"除了常见的通过":["28.3"],"package":["28.3","28.16","29.15"],"json":["28.3","28.16","29.15"],"来将一个":["28.3"],"npm":["28.3","28.5","29.11","29.36","29.37"],"内联方式":["28.4"],"在每个":["28.4"],"语句中显式指定":["28.4"],"styles":["28.4"],"style":["28.4"],"这里是test":["28.5"],"安装依赖":["28.5","29.36"],"cli":["28.5"],"运行npx":["28.5"],"就可以看到控制台中输出了外面loader中的内容":["28.5"],"获取optios":["28.5"],"大家在使用":["28.5"],"的时候":["28.5"],"应该都配置过":["28.5"],"options":["28.5","28.9"],"吧":["28.5"],"那我们开发的时候怎么去接收跟定义这个options呢":["28.5"],"获取":["28.5"],"资源文件会被转化为":["28.6"],"字符串":["28.6"],"然后传给":["28.6"],"通过设置":["28.6"],"可以接收原始的":["28.6"],"buffer":["28.6"],"content是一个buffer数据":["28.6"],"emitfile":["28.7","28.10"],"产生一个文件":["28.7"],"entry":["28.8"],"output":["28.8"],"dirname":["28.8","29.26"],"dist":["28.8"],"filename":["28.8"],"exports":["28.9","28.14","29.5","29.6","29.11","29.14","29.17","29.38"],"getoptions":["28.9"],"使用异步loader":["28.9"],"暴露出去":["28.10"],"给js引用":["28.10"],"记得加上":["28.10"],"join":["28.11"],"relativerequest是inline":["28.11"],"代表要处理的index":["28.11"],"css资源":["28.11"],"使用css":["28.11"],"loader处理":["28.11"],"代表禁用所有配置的loader":["28.11"],"只使用inline":["28.11"],"插件由以下组成":["28.13"],"javascript":["28.13","29.28"],"命名函数":["28.13"],"在插件函数的":["28.13"],"https":["28.14"],"github":["28.14"],"com":["28.14"],"master":["28.14"],"synchook":["28.14"],"require":["28.14"],"syncbailhook":["28.14"],"生命周期中植入不同的逻辑":["28.15"],"文档open":["28.15"],"对象代表一次资源的构建":["28.15"],"实例能够访问所有的模块和它们的依赖":["28.15"],"对象会对构建依赖图中所有模块":["28.15"],"进行编译":["28.15"],"在编译阶段":["28.15"],"启动调试":["28.16"],"通过调试查看":["28.16"],"对象数据情况":["28.16"],"assetpaths":["28.17"],"keys":["28.17"],"filter":["28.17"],"path":["28.17","29.25","29.26"],"splitted":["28.17"],"split":["28.17"],"removefiles":["28.18"],"执行成功err为undefined":["28.18"],"执行失败err就是错误原因":["28.18"],"try":["28.18"],"读取当前目录下所有文件":["28.18"],"二维数组中第一项值是key":["28.19"],"第二项值是value":["28.19"],"assets":["28.19","28.20"],"entries":["28.19"],"headtags":["28.20"],"getinlinetag":["28.20"],"bodytags":["28.20"],"afteremit":["28.20"],"ps":["29.0"],"当时心想":["29.0"],"这面试要凉了":["29.0"],"js中简单写一点代码":["29.1"],"我安装的版本":["29.2"],"指定":["29.3"],"从":["29.3"],"文件开始打包":["29.3"],"不但会打包":["29.3"],"http":["29.4","29.33"],"ie":["29.4","29.15","29.33"],"edge":["29.4","29.33"],"viewport":["29.4","29.33"],"width":["29.4","29.33"],"device":["29.4","29.33"],"initial":["29.4","29.33"],"scale":["29.4","29.33"],"body":["29.4"],"修改配置文件":["29.5","29.6","29.8"],"module":["29.5","29.11","29.14","29.16","29.17","29.38"],"加载器":["29.5","29.14","29.34"],"rules":["29.5","29.6","29.14","29.17","29.24","29.25","29.29","29.34"],"处理css的loader":["29.5","29.14"],"正则匹配文件":["29.5","29.14"],"use":["29.5","29.26"],"处理图片资源":["29.6","29.34"],"dnd":["29.7"],"mode":["29.7","29.18"],"camera":["29.7"],"imgs":["29.9"],"hash":["29.9"],"ext":["29.9"],"字体":["29.9"],"图标":["29.9"],"视频":["29.9"],"preset":["29.11","29.30"],"env":["29.11"],"编译的预设":["29.11"],"预设中内置了许多es5实现es6语法的方法":["29.11"],"配置babel":["29.11"],"essential":["29.12"],"react":["29.12"],"app":["29.12"],"能解决大多数样式兼容性问题":["29.15"],"控制兼容性":["29.15"],"我们可以在":["29.15"],"文件中添加":["29.15"],"browserslist":["29.15"],"来控制样式的兼容性做到什么程度":["29.15"],"配置":["29.17","29.37"],"serve":["29.18"],"development":["29.18"],"prod":["29.18"],"现在要对这些配置做一些优化":["29.19"],"列如":["29.19"],"log1":["29.20"],"然后在控制台发现报错信息":["29.20"],"它不能清晰的反映该错误是在哪一个文件中":["29.20"],"开启hmr功能":["29.22"],"只能用于开发环境":["29.22"],"生产环境不需要了":["29.22"],"判断是否支持hmr功能":["29.22"],"剩下的就不匹配了":["29.23"],"使用方法很简单":["29.23"],"把loader全部放进":["29.23"],"oneof":["29.24","29.25","29.26","29.29","29.34"],"排除node":["29.24","29.25","29.26","29.29"],"exclude":["29.25","29.26","29.29"],"modules代码不编译":["29.25","29.26"],"include":["29.25","29.26","29.29"],"node":["29.26","29.29"],"modules":["29.26","29.29"],"也可以用包含":["29.26"],"中的没有使用上的代码":["29.28"],"注意":["29.28"],"modules下的文件":["29.29"],"其他文件都处理":["29.29"],"interlaced":["29.30"],"progressive":["29.30"],"optimizationlevel":["29.30"],"prefixids":["29.30"],"sortattrs":["29.30"],"params":["29.30"],"xmlnsorder":["29.30"],"alphabetical":["29.30"],"这里存在一个问题":["29.30"],"就是webpack给我们提供了一个存放压缩文件的配置项":["29.30"],"如果多入口文件中都引用了同一份代码":["29.32"],"我们不希望这份代码被打包到两个文件中":["29.32"],"导致代码重复":["29.32"],"体积更大":["29.32"],"我们需要提取多入口的重复代码":["29.32"],"只打包生成一个":["29.32"],"其他文件引用它就好":["29.32"],"修改配置":["29.32"],"动态导入输出资源命名方式":["29.34"],"assetmodulefilename":["29.34"],"media":["29.34"],"图片":["29.34"],"字体等资源命名方式":["29.34"],"注意用hash":["29.34"],"jpe":["29.34"],"g":["29.34"],"gif":["29.34"],"文件名发生了变化":["29.35"],"间接导致":["29.35"],"也发生了变化":["29.35"],"解决":["29.35"],"将":["29.35"],"plugin":["29.36"]},{"0":["3.3","10.13","10.16","10.17","16.5","18.5","20.3","23.26","28.16","29.2","29.32","29.33"],"1":["3.6","12.7","16.5","18.4","23.10"],"2":["3.4","6.5","11.4","12.7","26.9"],"3":["0.3","3.4","4.1","10.27","12.7","29.18"],"4":["0.3","28.6"],"5":["0.3","3.2","10.11","10.25","11.2","29.2"],"6":["28.16"],"7":["28.16"],"8":["8.11","29.15"],"9":["7.13","25.1"],"10":["3.2","18.2","25.10","28.16","29.34"],"13":["18.2"],"15":["10.14"],"17":["20.5","23.17","23.21","28.16"],"18":["12.1","12.4","23.18"],"20":["10.8"],"45":["10.17"],"50":["0.11"],"57":["20.5"],"73":["29.2"],"100":["10.5","10.10"],"111":["12.7"],"120":["10.14"],"123":["20.3"],"150":["10.2"],"180":["10.5"],"200":["10.5","20.6"],"250":["10.5"],"304":["20.4"],"1000":["8.14","8.15","15.11"],"1024":["29.34"],"2023":["20.5"],"8080":["20.5"],"20000":["29.32"],"通过":["0.0","28.4"],"filereader对象":["0.0"],"触发":["0.2"],"事件":["0.2"],"读取被中断":["0.3"],"文件不可读":["0.3"],"编码错误":["0.3"],"对象的":["0.4"],"id":["0.6","25.3"],"dragleave":["0.7"],"离开时边框恢复":["0.7"],"进入边框变为红色":["0.7"],"点击上传":["0.8"],"txt":["0.9"],"javascript":["0.9","28.2"],"html":["0.9","14.5"],"css":["0.9","10.2","28.16"],"default":["0.9","26.6","29.22"],"split":["0.10"],"清空文件流数组":["0.10"],"fileblodarr":["0.10"],"top":["0.11"],"20px":["0.11"],"347aa5":["0.11"],"color":["0.11","26.20"],"red":["0.11","10.14","23.10","26.20"],"text":["0.11"],"align":["0.11"],"center":["0.11"],"line":["0.11"],"18px":["0.11"],"font":["0.11"],"weight":["0.11"],"bold":["0.11"],"size":["0.11"],"25px":["0.11"],"cursor":["0.11"],"file":["0.12","28.18","28.19"],"方法获取文件二进制流":["0.12"],"onload":["0.12","10.13"],"获取文件数据":["0.12"],"模拟a标签下载":["2.1"],"href":["2.2","2.4","2.5"],"test":["2.2","7.11","28.8","28.20","29.11","29.14","29.17"],"jpg":["2.2"],"点击下载":["2.2"],"默认文件名":["2.2"],"下载":["2.3"],"document":["2.4","2.5","4.1"],"createelement":["2.4","2.5","4.1"],"style":["2.4","2.5","2.8"],"display":["2.4","2.5","2.8"],"none":["2.4","2.5","2.8"],"a":["2.5","12.4","12.7"],"target":["2.5"],"url长度限制":["2.6"],"url编码":["2.6"],"浏览器可直接浏览的文件类型是不提供下载的":["2.6"],"如txt":["2.6"],"value":["2.7"],"name":["2.7","6.5","12.4","12.7","16.5","20.3","28.16"],"appendchild":["2.7"],"src":["2.8","20.3","29.24","29.25","29.29"],"望大家指出":["2.9","8.16","11.6","16.7","18.9","23.28"],"的意思":["3.0"],"b":["3.1","29.1"],"大家看着上面的代码会难受嘛":["3.1"],"本人有一丢丢的强迫症":["3.1"],"明明就是一个很简单的判断却需要写好几行代码才能实现":["3.1"],"求0":["3.2"],"n之间的整数的和":["3.2"],"sum":["3.2"],"function":["3.2","10.13","15.11","23.14","29.22"],"c":["3.4"],"d":["3.4","3.6","14.2","25.4","26.10","29.4","29.36"],"从上面的案列中可以明显看得出来":["3.5"],"使用对象配置比使用if":["3.5"],"else可读性更高":["3.5"],"后续如果需要添加用户折扣也只需要修改折扣对象就行":["3.5"],"对象配置不一定非要使用对象去管理我们键值对":["3.5"],"还可以使用":["3.5"],"map":["3.5"],"去管理":["3.5"],"以绩效":["3.6"],"部门的方式拼接键值存入":["3.6"],"博客主要记录一些学习的文章":["3.7","7.14"],"我觉得很有意思":["4.0"],"就开始了解和学习":["4.0"],"在这篇文章中":["4.0"],"png":["4.1","19.6","29.20"],"可以使用一个隐藏的iframe和window":["4.1"],"name属性在不同的窗口之间共享数据":["4.1"],"在子页面中":["4.1"],"将要传递给父页面的数据保存在":["4.1"],"属性中":["4.1"],"在父页面中":["4.1"],"创建一个隐藏的":["4.1"],"元素":["4.1"],"并且将其源设置为":["4.1"],"子页面的":["4.1"],"const":["4.1","8.15","12.9","14.6","14.10","15.5","17.5","26.20","29.18","29.36"],"九宫格抽奖的简单实现":["5.1"],"编辑奖品这些":["6.0"],"瞒着女朋友加的功能":["6.1"],"为了以后能吃到自己喜欢的东西":["6.1"],"转动速度的规则是":["6.1"],"true":["6.3","12.1","16.3","17.3","23.4","23.16","25.10","28.8","28.10","29.12","29.25","29.26"],"null":["6.4","16.3"],"中奖":["6.5"],"raffleitem":["6.5"],"清除定时器":["6.5"],"cleartimeout":["6.5"],"清除指定中奖项":["6.5"],"转动规则的方法":["6.5"],"转动速度分为4个阶段":["6.5"],"前面的":["6.5"],"加速转动":["6.5"],"我是中国人":["7.1"],"我爱中国":["7.1"],"reg":["7.1"],"join":["7.1"],"匹配一个换页符":["7.2"],"匹配一个换行符":["7.2"],"r":["7.2"],"匹配一个回车符":["7.2"],"s":["7.2","29.17"],"result":["7.7"],"abc123456":["7.7"],"返回结果为true":["7.7"],"只要找到第一个匹配然后返回":["7.9"],"缺点":["7.10","15.13"],"只能获得敏感词的内容":["7.10"],"敏感词":["7.11"],"console":["7.11","12.0","12.1","12.4","12.5","12.6","15.8","17.5","20.5","29.1"],"log":["7.11","12.0","12.1","12.4","12.5","12.6","14.10","15.8","17.5","20.5"],"遍历匹配":["7.12"],"可以获取字符串中所有匹配的字符串":["7.12"],"ig":["7.13"],"在这个位置之前或之后的字符满足条件才匹配成功":["7.14"],"该定时器在定时器到期后执行一个函数或指定的一段代码":["8.0"],"马上":["8.2"],"执行":["8.2"],"或者尽快执行":["8.2"],"不管是哪种情况":["8.2"],"实际的延迟时间可能会比期待的":["8.2"],"delay毫秒数":["8.2"],"值长":["8.2"],"arg1":["8.2"],"为了避免混淆":["8.3"],"不要混用取消定时函数":["8.3"],"在同一个对象上":["8.3"],"它返回一个时间间隔id":["8.4"],"该id唯一地标识时间间隔":["8.4"],"千分之一秒":["8.6"],"这个定时器会使指定方法或者代码段执行的时候进行时间延迟":["8.6"],"如果这个参数值小于10":["8.6"],"但是":["8.7"],"我们必须去匹配":["8.7"],"嵌套层级达到一定深度":["8.9"],"直到调用":["8.10"],"settimeout":["8.10","10.28"],"大约24":["8.11"],"每次定时器执行结束时间":["8.12"],"endtime":["8.12"],"setinterval":["8.14","8.15"],"当时间为0的时候清除定时器":["8.14"],"经过一段时间的":["9.0"],"百度":["9.0"],"思考":["9.0"],"得出下列的思路":["9.0"],"date":["9.1"],"now":["9.1"],"return":["9.1","20.6","26.9","29.22"],"上传到服务器":["9.1"],"httprequest":["9.1"],"axios":["9.1"],"method":["9.1"],"利用":["10.0"],"画出一块带水印文字的背景图":["10.0"],"它可以用来制作照片集或者制作简单":["10.1"],"也不是那么简单":["10.1"],"注意":["10.2"],"使用":["10.2","28.5"],"也可以设置":["10.2"],"请升级浏览器":["10.3"],"需要注意的是":["10.3"],"标签的结束标签":["10.3"],"所有元素的位置都相对于原点来定位":["10.4"],"所以图中矩形左上角的坐标为距离左边":["10.4"],"x":["10.4","29.22"],"轴":["10.4"],"像素":["10.4"],"距离上边":["10.4"],"y":["10.4","16.3","29.22"],"描述路径的行进":["10.5"],"closepath":["10.6"],"红线":["10.8","10.9"],"中心线":["10.8"],"stroke":["10.9"],"lineto":["10.10","10.25"],"实线长度":["10.11"],"间隙长度":["10.11"],"默认的字体是":["10.12"],"10px":["10.12"],"textalign":["10.12"],"文本对齐选项":["10.12"],"可选的值包括":["10.12"],"start":["10.12"],"end":["10.12","20.6"],"left":["10.12"],"right":["10.12"],"or":["10.12"],"img":["10.13","20.3"],"new":["10.13","23.22","29.14","29.16","29.38"],"创建img元素":["10.13"],"防止图片还未加载完成就绘制":["10.13"],"从而抛出异常":["10.13"],"在原有配置基础上对颜色做改变":["10.14"],"使用新的设置绘制一个矩形":["10.14"],"保存当前状态":["10.14"],"平移坐标原点":["10.16"],"strokerect":["10.16"],"旋转":["10.17"],"blue":["10.17","23.10"],"fillrect":["10.17"],"放大1":["10.18"],"5倍":["10.18"],"m21":["10.20"],"水平方向的倾斜偏移":["10.20"],"m22":["10.20"],"那么变形矩阵也必须被标记为无限大":["10.21"],"否则会抛出异常":["10.21"],"从根本上来说":["10.21"],"旧图形只绘制与新图形内容重叠的地方":["10.24"],"新图形正常绘制":["10.24"],"旧图形位于新图形上方":["10.24"],"lighter":["10.24"],"新老图像都显示":["10.24"],"moveto":["10.25"],"绘制动画图形":["10.27"],"animated":["10.27"],"shapes":["10.27"],"这一步才是重绘动画帧":["10.27"],"requestanimationframe":["10.28"],"贴一个时钟案例给大家看一下":["10.28"],"代码片段":["10.28"],"谢谢":["10.29","14.12","15.14","25.15","28.21"],"和":["11.0","20.0","20.1","23.12","25.2","28.4"],"nodejs的eventloop":["11.0"],"跟":["11.1"],"微任务队列":["11.1"],"microtask":["11.1"],"宏任务":["11.1"],"script":["11.1"],"取出":["11.2"],"中位于队首的任务":["11.2"],"放入":["11.2"],"执行全局同步代码":["11.4"],"顺序执行输出":["11.4"],"把promise的回调函数放入微任务队列":["11.4"],"等待执行":["11.4"],"把settimeout放入宏任务队列":["11.4"],"相信大家都答对了":["11.5"],"这里的关键在前面已经提过":["11.5"],"在执行微任务队列中任务的时候":["11.5"],"如果又产生了微任务":["11.5"],"那么会继续添加到队列的末尾":["11.5"],"也会在这个周期执行":["11.5"],"直到微任务队列为空":["11.5"],"还有一个关键点是":["11.5"],"array":["12.0"],"proto":["12.1"],"is":["12.2","12.3","14.5"],"i":["12.2","12.3","18.5","29.4"],"m":["12.2","12.3"],"come":["12.2","12.3"],"from":["12.2","12.3","26.5","28.11"],"测试":["12.4","12.5","12.6","12.7","12.9","15.5"],"tom":["12.4","14.6","23.18","23.19"],"age":["12.4"],"fn":["12.4","18.3"],"add":["12.4","26.8"],"hobby":["12.4"],"my":["12.4","23.7"],"task":["12.5","12.6"],"promise":["12.8","16.4"],"typeerror":["12.8","16.4"],"the":["12.8","14.5","16.4"],"and":["12.8","14.5","16.4"],"are":["12.8","14.5","16.4"],"same":["12.8","16.4"],"同我们原来的判断":["12.8","16.4"],"instanceof":["12.8","16.4"],"这里只是为了和promisea":["12.8","16.4"],"规范保持统一":["12.8","16.4"],"object":["12.8","16.4","28.5","28.20"],"给":["12.9","14.10"],"发送消息":["12.9","14.10"],"promise原理学习":["13.1"],"保证代码可靠性":["14.1"],"设计模式更加通俗的说它是一种思维方式":["14.1"],"类似单一职责原则":["14.2"],"这里更关注接口":["14.2"],"dependency":["14.2"],"inversion":["14.2"],"依赖倒转原则":["14.2"],"所有依赖于它的对象都将得到状态改变的通知":["14.4"],"传入的":["14.5"],"区分大小写":["14.5"],"若不一致":["14.5"],"有提示":["14.5"],"lowercaseevent":["14.5"],"tolowercase":["14.5"],"tip":["14.5"],"emitted":["14.5"],"in":["14.5"],"component":["14.5"],"formatcomponentname":["14.5"],"but":["14.5"],"registered":["14.5"],"note":["14.5"],"that":["14.5"],"attributes":["14.5"],"case":["14.5"],"insensitive":["14.5"],"you":["14.5"],"cannot":["14.5"],"use":["14.5","29.14","29.17","29.29"],"v":["14.5","23.27"],"to":["14.5"],"listen":["14.5","20.5"],"camelcase":["14.5"],"老师":["14.6"],"jim":["14.6"],"他以调度中心为连接来管理发布者跟订阅者":["14.8"],"keys":["14.9","28.20"],"简单的vue构造函数":["14.9"],"options":["14.9","29.25","29.26","29.29"],"data":["14.9","28.2","29.6"],"当第二次用相同的类创建实例的时候":["15.0"],"document对象也是单例模式":["15.1"],"es6新增的模块import":["15.1"],"返回不同的类":["15.3"],"history":["15.4"],"我是bclass":["15.5"],"允许按步骤构造一个复杂对象":["15.6"],"构建过程可以采用不同的表示":["15.6"],"在这个过程中":["15.7"],"为目标对象创建一个访问对象":["15.9"],"react":["15.10"],"renthouse":["15.11"],"不必每个都去实例化每一个对象":["15.12"],"不会影响到内部状态":["15.13"],"所以享元对象能够在不同的环境被共享":["15.13"],"失败态":["16.0"],"初始状态是":["16.0"],"状态置为失败的状态rejected":["16.1"],"现在我们在看以下效果":["16.2"],"let":["16.2","16.3","16.4","23.22","23.23","26.29"],"p":["16.2"],"called":["16.3"],"false":["16.3","17.7","28.5"],"call":["16.3"],"module":["16.5","28.3","28.10","29.7","29.8","29.37"],"exports":["16.5","28.10","29.8","29.16","29.20","29.37"],"最后在修改以下启动命令":["16.5"],"version":["16.5","28.16"],"description":["16.5"],"main":["16.5"],"的代码":["16.6"],"我自己实现的代码可以运行":["16.6"],"如有不足":["16.7","18.9","23.28"],"constructor":["17.0"],"也就是说function是它自己的实例":["17.2"],"people1":["17.4"],"lucy":["17.4"],"people2":["17.4"],"juli":["17.4"],"等同于":["17.8"],"块级作用域":["18.0"],"最外层定义的变量跟方法具有全局作用据":["18.1"],"not":["18.2","20.4"],"defined":["18.2"],"at":["18.2"],"anonymous":["18.2"],"代码解析":["18.2"],"a变量定义在最外层":["18.2"],"undefined":["18.3","18.4","23.12"],"不能在变量声明前使用变量":["18.3"],"uncaught":["18.3"],"bb":["18.4"],"for":["18.5"],"var":["18.5"],"当然只可能是局部变量":["18.6"],"全局变量的生命周期直至浏览器卸载页面才会结束":["18.6"],"局部变量只在函数的执行过程中存在":["18.6"],"而在这个过程中会为局部变量在栈或堆上分配相应的空间":["18.6"],"闭包":["18.7"],"而在此之后再被加上标记的变量将被视为准备删除的变量":["18.7"],"原因是环境中的变量已经无法访问到这些变量了":["18.7"],"最后":["18.7"],"垃圾回收器完成内存清除工作":["18.7"],"则这个值的引用次数减1":["18.8"],"当这个值的引用次数变成0时":["18.8"],"tag墙":["19.0"],"创建":["19.2"],"文件夹":["19.2"],"并在":["19.2"],"文件夹中创建readme":["19.2"],"md":["19.3"],"guide":["19.3"],"中使用":["19.4","28.3"],"组件":["19.4"],"同时可以使用":["19.4"],"来开发自定义主题":["19.4"],"高性能":["19.4"],"关于我":["19.5"],"account":["19.5"],"items":["19.5"],"个人信息":["19.5"],"about":["19.5"],"掘金":["19.5"],"https":["19.5"],"image":["19.6","26.4","29.20"],"强缓存":["20.0"],"协商缓存":["20.0"],"头部":["20.2"],"需要在服务器端进行配置":["20.2"],"例如":["20.2"],"在":["20.2","23.20"],"ie":["20.3"],"edge":["20.3"],"viewport":["20.3"],"width":["20.3"],"device":["20.3"],"initial":["20.3"],"scale":["20.3"],"title":["20.3","26.29","29.33"],"hello":["20.3","26.9","29.1"],"world":["20.3"],"body":["20.3","29.33"],"h1":["20.3"],"别忘记替换成你的图片名称":["20.3"],"然后随便准备两张图片就可以了":["20.3"],"我们在项目的跟目录使用":["20.3"],"来启动项目":["20.3"],"如下图提示":["20.3"],"就表示启动成功":["20.3"],"然后我们通过浏览器访问":["20.3"],"服务器会比较这些值与资源的当前状态":["20.4"],"如果资源没有发生变化":["20.4"],"服务器返回":["20.4"],"opened":["20.5"],"localhost":["20.5"],"address":["20.5"],"port":["20.5"],"首次请求":["20.5"],"响应头携带":["20.5"],"mon":["20.5"],"05":["20.5"],"jun":["20.5"],"08":["20.5"],"gmt":["20.5"],"writehead":["20.6"],"else":["20.6"],"filestream":["20.6"],"createreadstream":["20.6"],"的基础知识":["23.0"],"同时":["23.1"],"引入了太多的新概念":["23.2"],"类似泛型":["23.2"],"枚举等等":["23.2"],"不过好在ts":["23.2"],"是渐进式的":["23.2"],"就是你完全不会直接写":["23.2"],"tsc":["23.3"],"helloworld":["23.3"],"ts":["23.3","23.20"],"isboolean":["23.4"],"boolean":["23.4","25.10"],"binaryliteral":["23.6"],"word":["23.7","26.9"],"元素类型":["23.8"],"大小不匹配":["23.9"],"green":["23.10"],"string":["23.11","23.14","25.11","28.5"],"instead":["23.11"],"类型的变量只能为它赋予":["23.12"],"赋值给":["23.13"],"number":["23.13","23.26"],"类型的变量":["23.13"],"返回never的函数必须存在无法达到的终点":["23.14"],"error":["23.14"],"message":["23.14"],"hasdog":["23.16"],"如果函数没有返回值":["23.20"],"里表示为返回":["23.20"],"我们可以通过下面的写法":["23.21"],"属性会在构造函数中自动分配":["23.21"],"我们类会更加简洁":["23.21"],"readonly":["23.21"],"person1":["23.22"],"换成":["23.24"],"也是一样的":["23.24"],"下面我们介绍一下一些常见泛型变量代表的意思":["23.24"],"type":["23.24","28.5","29.6","29.34"],"statement":["23.25"],"visa":["23.25"],"person2":["23.25"],"wingspan":["23.27"],"planeortrain":["23.27"],"getspeedratio":["23.27"],"grid布局实现的拖拽布局插件":["24.1"],"开发一个简单的拖拽布局插件":["25.0"],"以解决上述问题并巩固":["25.0"],"除了":["25.2"],"vue":["25.2","26.10"],"子组件只需要一个":["25.3"],"作为唯一的标识就可以实现数据关联":["25.3"],"该灵感来源":["25.3"],"element":["25.3"],"plus":["25.3"],"的":["25.3"],"pnpm":["25.4"],"drop":["25.6"],"dist":["25.6"],"gutter":["25.10"],"网格间距":["25.10"],"drage":["25.10"],"自定义缩放的图标":["25.12"],"remove":["25.12"],"draggableend":["25.13"],"拖拽结束时触发":["25.13"],"拖拽结束后的布局数据":["25.13"],"删除的图标自适应大小":["25.14"],"兼容各种屏幕":["25.14"],"现在的项目也没用上":["26.0"],"只能自己摸索学习啦":["26.0"],"的环境下":["26.3"],"这边我使用":["26.4"],"这里选择":["26.4"],"vuejsx":["26.5"],"resolvers":["26.6"],"iconsresolver":["26.6"],"resolver":["26.6"],"export":["26.6","29.22"],"defineconfig":["26.6"],"plugins":["26.6","29.14","29.16","29.26","29.38"],"自动引入api":["26.6"],"imports":["26.6"],"app":["26.7"],"yarn":["26.8"],"类似于vue2组件中的data":["26.9"],"用于存储全局状态数据":["26.9"],"但有两个要求":["26.9"],"必须是函数":["26.9"],"目的是为了在服务端渲染的时候避免交叉请求导致的数据状态污染":["26.9"],"必须是箭头函数":["26.9"],"这样是为了更好的":["26.9"],"类型推导":["26.9"],"state":["26.9","26.17"],"msg":["26.9"],"getters":["26.9"],"include":["26.10"],"tsx":["26.10"],"auto":["26.10"],"啦":["26.11"],"主要是学习一下":["26.11"],"时":["26.12"],"它将被更新":["26.12"],"因为":["26.12"],"你":["26.12"],"不能使用":["26.12"],"es6":["26.12"],"解构":["26.12"],"它会消除":["26.12"],"的响应性":["26.12"],"如果需要解构":["26.12"],"beforeunmount":["26.13"],"onbeforeunmount":["26.13"],"unmounted":["26.13"],"onunmounted":["26.13"],"errorcaptured":["26.13"],"转换为普通对象":["26.14"],"解构为单个响应式对象":["26.14"],"shallowref":["26.14"],"创建一个跟踪自身":["26.14"],"变化的":["26.14"],"但不会使其值也变成响应式的":["26.14"],"简单理解为创建一个和ref相同结构的非响应式变量":["26.14"],"返回":["26.15"],"代理的原始对象":["26.15"],"用于写入数据而避免触发更改":["26.15"],"markraw":["26.15"],"返回对象本身":["26.15"],"标记一个对象":["26.15"],"使其永远不会转换为":["26.15"],"侦听一个":["26.17"],"reactive":["26.17"],"vue3模板语法":["26.19"],"span":["26.19","26.29"],"双大括号":["26.20"],"div":["26.22","26.29","29.33"],"年龄":["26.24"],"prop":["26.24"],"item":["26.24"],"box2":["26.26","29.4","29.33"],"修饰符写法":["26.27"],"来使用插槽":["26.28"],"vslot":["26.28"],"slottem":["26.28"],"if":["26.29","28.20"],"children":["26.29"],"slots":["26.29"],"sub":["26.29"],"转换为":["28.2"],"或将内联图像转换为":["28.2"],"模块导出为":["28.3"],"还可以在":["28.3"],"rules":["28.3","28.8","29.11"],"字段直接引用一个模块":["28.3"],"插件":["28.3","29.26","29.38"],"plugin":["28.3","29.4"],"modules":["28.4","28.15","28.16","29.11"],"含义":["28.4"],"处理":["28.4"],"文件":["28.4"],"将资源中的":["28.4"],"分开":["28.4"],"可以通过添加不同前缀":["28.4"],"跳过其他类型":["28.4"],"getoptios":["28.5"],"schema":["28.5"],"方法":["28.5","28.13"],"改方法接收一个参数":["28.5"],"就是这个options的":["28.5"],"校验规则":["28.5"],"如果不符合这个规则就会报错":["28.5"],"校验规则是一个":["28.5"],"格式的文件":["28.5"],"如下":["28.5"],"规定了是什么类型":["28.5"],"properties":["28.5"],"表明其中有哪些属性":["28.5"],"使用未定义的属性也会报错":["28.5"],"下面的含义为接收一个对象":["28.5"],"对象中有一个字符串类型的属性":["28.5"],"author":["28.5","28.16"],"additionalproperties":["28.5"],"开启":["28.6"],"pitching":["28.6"],"pitch":["28.6"],"utils":["28.7"],"contextify":["28.7"],"返回一个相对路径":["28.7"],"context":["28.7"],"loaders":["28.8"],"callback":["28.9"],"async":["28.9"],"使用babel对js代码进行编译":["28.9"],"transform":["28.9"],"err":["28.9"],"解决的是二进制的内容":["28.10"],"图片是":["28.10"],"buffer":["28.10"],"数据":["28.10"],"raw":["28.10"],"也就是外面我们style":["28.11"],"loader和css":["28.11"],"它们被禁用了":["28.11"],"只是用我们指定的inline":["28.11"],"也就是css":["28.11"],"import":["28.11","29.7"],"引入css":["28.11"],"loader处理后的css文件":["28.11"],"为什么需要css":["28.11"],"loader处理css文件":["28.11"],"不是我们直接读取css文件使用呢":["28.11"],"因为可能存在":["28.11"],"import导入css语法":["28.11"],"这些语法就要通过css":["28.11"],"loader解析才能变成一个css文件":["28.11"],"否则我们引入的css资源会缺少":["28.11"],"prototype":["28.13"],"上定义一个":["28.13"],"apply":["28.13"],"指定一个绑定到":["28.13"],"syncwaterfallhook":["28.14"],"syncloophook":["28.14"],"asyncparallelhook":["28.14"],"asyncparallelbailhook":["28.14"],"模块会被加载":["28.15"],"load":["28.15"],"封存":["28.15"],"seal":["28.15"],"优化":["28.15"],"optimize":["28.15"],"分块":["28.15"],"chunk":["28.15"],"哈希":["28.15"],"hash":["28.15"],"和重新创建":["28.15"],"restore":["28.15"],"可以访问所有模块":["28.15"],"配置指令":["28.16"],"source":["28.16"],"scripts":["28.16"],"debug":["28.16"],"node":["28.16","29.11","29.12"],"inspect":["28.16"],"brk":["28.16"],"webpack":["28.16","29.7"],"cli":["28.16"],"bin":["28.16"],"keywords":["28.16"],"xiongjian":["28.16"],"license":["28.16"],"isc":["28.16"],"devdependencies":["28.16"],"babel":["28.16","29.26"],"core":["28.16"],"preset":["28.16"],"env":["28.16","29.12"],"loader":["28.16","29.24"],"includes":["28.17"],"length":["28.17"],"foreach":["28.17","28.18","28.19","28.20"],"assetpath":["28.17"],"asset":["28.17","29.34"],"readdirsync":["28.18"],"遍历文件":["28.18"],"删除":["28.18"],"获取文件完整路径":["28.18"],"filepath":["28.18"],"分析文件":["28.18"],"filestat":["28.18"],"分析打包资源大小":["28.19"],"n":["28.19"],"名称":["28.19"],"大小":["28.19"],"filename":["28.19"],"inlinechunkhtmlplugin":["28.20"],"assetname":["28.20"],"some":["28.20"],"match":["28.20"],"delete":["28.20"],"后面果然如此":["29.0"],"最后就诞生了这篇文章":["29.0"],"为了更好的搭建自己的webpack知识体系":["29.0"],"还会将其依赖也一起打包进来":["29.3"],"xxx":["29.3"],"指定模式":["29.3"],"环境":["29.3"],"box1":["29.4","29.33"],"box3":["29.4","29.33"],"安装处理":["29.4"],"资源的插件":["29.4"],"npm":["29.4"],"安装":["29.4"],"devserve":["29.4"],"查看效果":["29.5"],"发现页面上我们写的样式并没有生效":["29.5"],"这是因为":["29.5"],"只能把css文件编译成webpack能够处理的文件":["29.5"],"但是不能把样式引入到页面上":["29.5"],"jpe":["29.6"],"g":["29.6"],"gif":["29.6"],"运行看效果":["29.6","29.20"],"优化图片资源":["29.6"],"将小于某个大小的图片转化成":["29.6"],"uri":["29.6"],"形式":["29.6"],"base64":["29.6"],"config":["29.7","29.18","29.37"],"ttf":["29.9"],"woff2":["29.9"],"mp4":["29.9"],"avi":["29.9"],"resource":["29.9"],"加载器":["29.11"],"exclude":["29.11"],"排除node":["29.11"],"modules代码不编译":["29.11","29.24"],"babel的配置有两种方法":["29.11"],"一种是在webpack的loader中配置":["29.11"],"还有一种是单独的配置文件配置":["29.11"],"在webpack中配置":["29.11"],"继承":["29.12"],"规则":["29.12"],"extends":["29.12"],"启用node中全局变量":["29.12"],"browser":["29.12"],"提取css成单独文件":["29.14"],"想要知道更多的":["29.15"],"查看browserslist":["29.15"],"文档":["29.15"],"以上为了测试兼容性所以设置兼容浏览器":["29.15"],"ie8":["29.15"],"以上":["29.15"],"实际开发中我们一般不考虑旧版本浏览器了":["29.15"],"css压缩":["29.16"],"处理sass":["29.17"],"ac":["29.17"],"ss":["29.17"],"minicssextractplugin":["29.17"],"production":["29.18"],"在配置文件":["29.18"],"中获取环境变量":["29.18"],"isproduction":["29.18"],"process":["29.18"],"提升打包构建速度":["29.19"],"因为我们打包后的文件都输出在main":["29.20"],"js中":["29.20"],"配置devtool":["29.20"],"中就可以了":["29.23"],"js":["29.23"],"path":["29.24","29.29"],"resolve":["29.24","29.25","29.29"],"dirname":["29.24","29.25","29.29"],"也可以用包含":["29.24","29.25"],"cachedirectory":["29.25","29.26"],"开启多进程":["29.26","29.29"],"workers":["29.26"],"数量":["29.26"],"开启babel编译缓存":["29.26"],"它依赖":["29.28"],"es":["29.28"],"只处理src下的文件":["29.29"],"其他文件不处理":["29.29"],"thread":["29.29"],"optimization":["29.30","29.32"],"我们前面使用了css压缩":["29.30"],"js压缩":["29.30"],"图片压缩这些":["29.30"],"我们需要把他提取到":["29.30"],"中去":["29.30"],"这样我们的配置文件才能更加的清晰":["29.30"],"这个配置比较简单":["29.30"],"主要是把插件中关于压缩文件的都放进去就行了":["29.30"],"记得把插件中的调用删除奥":["29.30"],"压缩配置":["29.30"],"minimize":["29.30"],"开启最小化":["29.30"],"css压缩也可以写到optimization":["29.30"],"clean":["29.32"],"代码分割配置":["29.32"],"splitchunks":["29.32"],"chunks":["29.32"],"all":["29.32"],"对所有模块都进行分割":["29.32"],"以下是默认值":["29.32"],"minsize":["29.32"],"分割代码最小的大小":["29.32"],"minremainingsize":["29.32"],"类似于minsize":["29.32"],"最后确保提取的文件大小不能为0":["29.32"],"minchunks":["29.32"],"至少被引用的次数":["29.32"],"class":["29.33"],"webp":["29.34"],"parser":["29.34"],"dataurlcondition":["29.34"],"maxsize":["29.34"],"小于10kb的图片会被base64处理":["29.34"],"generator":["29.34"],"将图片文件输出到":["29.34"],"imgs":["29.34"],"目录中":["29.34"],"将图片文件命名":["29.34"],"query":["29.34"],"hash值取8位":["29.34"],"使用之前的文件扩展名":["29.34"],"值单独保管在一个":["29.35"],"runtime":["29.35"],"文件中":["29.35"],"我们最终输出三个文件":["29.35"],"当":["29.35"],"文件发送变化":["29.35"],"变化的是":["29.35"],"配置":["29.36"],"preloadwebpackplugin":["29.36"],"require":["29.36"],"预设":["29.37"],"presets":["29.37"],"generatesw":["29.38"]},{"0":["3.4","3.6","7.11","8.14"],"1":["0.9","6.0","23.23","29.15"],"2":["0.9","3.2","18.3","29.20"],"3":["0.9","9.0","11.4"],"4":["10.27","18.4","28.16","29.2"],"5":["10.22"],"6":["11.2","25.3","29.12"],"8":["18.4"],"9":["3.6","28.16"],"10":["18.5","29.32"],"12":["18.4"],"18":["17.5"],"20":["23.25","29.32"],"30":["10.14","29.32"],"45":["10.14"],"50":["10.11"],"72":["28.16"],"90":["10.14"],"100":["12.5","12.6"],"128":["10.22"],"150":["10.10"],"200":["10.6","10.8","10.10","10.13"],"220":["10.16"],"253":["10.13"],"255":["10.22"],"300":["6.5","10.9","10.13"],"400":["20.6"],"50000":["29.32"],"86176":["28.16"],"824605453":["10.13"],"878308716":["10.13"],"filelist对象":["0.0"],"读取文件的文件流数据":["0.0"],"每几百毫秒触发一次":["0.2"],"当一个被拖动的元素或者被选择的文本离开一个有效的拖放目标时":["0.2"],"将会触发":["0.2"],"default":["0.3","3.4","26.5","26.9"],"文件读取失败":["0.3"],"onprogress":["0.3","0.12"],"该事件在开始读取文件时每5毫秒触发一次":["0.3"],"可以使用该方法获取文件读取的进度":["0.3"],"返回值":["0.3"],"loaded":["0.3"],"为当前已读取的大小":["0.3"],"total":["0.3","6.5"],"为文件总大小":["0.3"],"属性":["0.4"],"是存储文件数据的一个对象":["0.4"],"box":["0.6","26.28"],"red":["0.7","10.5"],"拖拽事件绑定":["0.7"],"addeventlistener":["0.7"],"dragenter":["0.7"],"dragover":["0.7"],"单击事件":["0.8"],"通过js触发input事件":["0.8"],"function":["0.8","18.5","23.26"],"upload":["0.8"],"other":["0.9"],"组合单个文件并放入dom中":["0.9"],"appendchild":["0.9","2.4","2.5","2.8","4.1","28.11"],"droptarget":["0.9"],"文件读取失败的提示":["0.9"],"onerror":["0.9","0.12"],"error":["0.9","23.19"],"code":["0.9","8.1","8.5","28.9"],"alert":["0.9"],"未找到文件":["0.9"],"安全错误":["0.9"],"读取被中断":["0.9"],"重新生成文件上传盒子":["0.10"],"map":["0.10","28.5","28.20"],"item":["0.10"],"filestoblod":["0.10"],"最终的效果如下":["0.10"],"pointer":["0.11","25.3"],"文件名":["0.11"],"p":["0.11","16.1","26.22","26.28"],"ellipsis":["0.11"],"white":["0.11"],"space":["0.11"],"nowrap":["0.11"],"提示文字":["0.11"],"result":["0.12","28.9"],"事件监听文件读取的时候发生的错误":["0.12"],"事件监听文件读取的进度":["0.12"],"本质上都是一样的":["2.1"],"只是实现方式不一致而已":["2.1"],"只不过是为了方便整理才起的这个标题名":["2.3"],"download":["2.4","2.5"],"body":["2.4","2.5","2.7","2.8","4.1"],"click":["2.4","2.5","25.7"],"png":["2.6","26.4","28.10"],"jpg":["2.6"],"gif等":["2.6"],"不能添加header":["2.6"],"发送请求":["2.7"],"submit":["2.7"],"清除form表单":["2.7"],"异步删除iframe标签":["2.8"],"settimeout":["2.8","11.1","18.5"],"谢谢":["2.9","8.16","11.6","16.7","18.9","23.28"],"的好用都知道":["3.0"],"这个时候我们就可以用短路运算去简化我们的代码啦":["3.1"],"add":["3.2"],"n":["3.2","20.6","28.17"],"break":["3.3"],"console":["3.4","8.12","12.7","18.5","23.22","28.6","29.18"],"log":["3.4","8.12","12.7","23.22","28.6","29.1","29.18"],"new":["3.5","16.1","16.2","17.5","23.14","28.8","29.4","29.24","29.25","29.26","29.36"],"f":["3.6"],"如有不足":["3.7","7.14","17.9","19.6"],"望大家指出":["3.7","7.14","19.6"],"我将分享我所学到的内容":["4.0"],"希望对大家有所帮助":["4.0"],"接下来我们就一起来学习一下关于":["4.0"],"style":["4.1","26.20"],"display":["4.1"],"none":["4.1"],"等待":["4.1"],"加载完成后":["4.1"],"通过访问":["4.1"],"contentwindow":["4.1"],"属性来获取子页面中保存的数据":["4.1"],"onload":["4.1"],"正则表达式的一些知识":["5.1"],"gif":["6.0","28.10"],"加速":["6.1"],"匀速":["6.1"],"减速":["6.1"],"selectitem":["6.3"],"name":["6.3"],"button":["6.3","25.7","29.33"],"中间的":["6.5"],"是匀速转动":["6.5"],"后面的":["6.5"],"是减速转动":["6.5"],"最后的":["6.5"],"个速度降低到":["6.5"],"转动":["6.5"],"经过计算":["6.5"],"在圈数的分为内":["6.5"],"最后的减速转动":["6.5"],"不能把速度减少到":["6.5"],"之上":["6.5"],"所以不会出现最后":["6.5"],"个加速转动的情况":["6.5"],"先加速在匀速最后减速":["6.5"],"剩余最后9个中奖时的时候速度降低到300":["6.5"],"错误的方法":["7.1"],"匹配任何空白字符":["7.2"],"匹配任何非空白字符":["7.2"],"t":["7.2"],"匹配一个制表符":["7.2"],"v":["7.2","23.24","26.29"],"reg1":["7.7"],"如果字符串没有匹配":["7.9"],"则返回null":["7.9"],"不能获得敏感词的位置":["7.10"],"敏感词的内容":["7.11"],"敏感词的位置":["7.11"],"返回一个列表":["7.12"],"arr":["7.13"],"match":["7.13"],"结果":["7.13"],"argn":["8.2","8.6"],"附加参数":["8.2"],"一旦定时器到期":["8.2"],"它们会作为参数传递给":["8.2"],"备注":["8.2"],"一个window或者worker":["8.3"],"或者":["8.3"],"因此您可以稍后通过调用":["8.4"],"clearinterval":["8.4","8.14"],"则默认使用值为10":["8.6"],"arg1":["8.6"],"可选":["8.6"],"对应的":["8.7"],"id":["8.7","29.33"],"以":["8.7","29.4"],"或者是由于已经执行的setinterval的回调函数阻塞导致的":["8.9"],"的主线程执行完其他任务之后":["8.10"],"回调函数和代码段才能被执行":["8.10"],"天":["8.11"],"时就会溢出":["8.11"],"setinterval执行的差值时间":["8.12"],"time2":["8.12"],"if":["8.14","28.18"],"无法清除定时器的原因":["8.15"],"在以上函数中":["8.15"],"每次调用函数都会创建一个新的定时器":["8.15"],"只关闭了其中一个setinterval":["8.15"],"将base64格式的图片处理为blob对象":["9.0"],"将blob对象添加到formdata对象中":["9.0"],"http请求头设置为context":["9.0"],"post":["9.1"],"url":["9.1","28.2"],"xxxxx":["9.1"],"你的文件服务器地址":["9.1"],"data":["9.1","28.6"],"timeout":["9.1"],"headers":["9.1","20.3"],"content":["9.1"],"multipart":["9.1"],"然后在需要的地方使用就行":["10.0"],"很简单吧":["10.0"],"不过这个不是重点":["10.0"],"的动画":["10.1"],"甚至可以进行实时视频处理和渲染":["10.1"],"标签的宽高属性":["10.2"],"不过我们不推荐使用":["10.2"],"设置宽高属性":["10.2"],"是不可省略的":["10.3"],"如果省略的话":["10.3"],"文档的其它内容就会被当成":["10.3"],"绘制矩形的三种api":["10.4"],"width":["10.4"],"height":["10.4"],"绘制一个填充的矩形":["10.4"],"strokerect":["10.4","10.11"],"封闭路径":["10.5"],"closepath会自动封闭路径":["10.5"],"描边颜色":["10.5"],"strokestyle":["10.5","10.8"],"描边":["10.5"],"stroke不会自动closepath":["10.5"],"填充颜色":["10.5"],"fillstyle":["10.5","10.22"],"moveto":["10.6"],"参数1":["10.6"],"控制点1坐标":["10.6"],"参数3":["10.6"],"控制点2坐标":["10.6"],"参数4":["10.6"],"起始偏移量为5":["10.11"],"center":["10.12"],"默认值是":["10.12"],"textbaseline":["10.12"],"基线对齐选项":["10.12"],"top":["10.12"],"hanging":["10.12"],"middle":["10.12"],"alphabetic":["10.12"],"ideographic":["10.12"],"bottom":["10.12"],"src":["10.13","26.6","28.20"],"https":["10.13"],"img0":["10.13"],"baidu":["10.13"],"com":["10.13"],"it":["10.13","23.19"],"u":["10.13"],"fm":["10.13"],"fff":["10.14"],"再次改变颜色配置":["10.14"],"使用新的配置绘制一个矩形":["10.14"],"重新加载之前的颜色状态":["10.14"],"restore":["10.16","10.17","10.18","10.25"],"恢复到最初状态":["10.16"],"恢复到之前的状态":["10.17"],"blue":["10.18"],"回退到初始状态":["10.18"],"竖直方向的缩放":["10.20"],"dx":["10.20"],"水平方向的移动":["10.20"],"该方法是取消了当前变形":["10.21"],"然后设置为指定的变形":["10.21"],"rgba":["10.22"],"两个重叠图形的颜色是通过颜色值相加来确定的":["10.24"],"darken":["10.24"],"保留重叠部分最黑的像素":["10.24"],"每个颜色位进行比较":["10.24"],"得到最小的":["10.24"],"0000ff":["10.24"],"ff0000":["10.24"],"lighten":["10.24"],"保证重叠部分最亮的像素":["10.24"],"得到最大的":["10.24"],"closepath":["10.25"],"e8e8e8":["10.25"],"fill":["10.25"],"首先":["10.25"],"我画了一个黑色方形作为背景":["10.25"],"然后移动原点至中心点":["10.25"],"然后用":["10.25"],"方法创建一个弧形的裁切路径":["10.25"],"裁切路径也属于":["10.25"],"恢复":["10.27"],"如果已经保存了":["10.27"],"今天的文章就到这里啦":["10.28"],"如果需要后续更加深入的":["10.28"],"知识":["10.28"],"这篇文章主要记录":["11.0"],"全部代码":["11.1"],"setinterval":["11.1"],"ui渲染":["11.1"],"微任务":["11.1"],"promise":["11.1"],"中执行":["11.2"],"当前":["11.2"],"宏任务":["11.2"],"存在微任务队列":["11.4"],"执行微任务":["11.4"],"顺序执行微任务输出":["11.4"],"把宏任务队列的第一个宏任务":["11.4"],"即第一个定时器":["11.4"],"放入调用栈执行":["11.4"],"输出":["11.4","18.2"],"因为当前宏任务没有产生微任务":["11.4"],"所以把下一个宏任务":["11.4"],"第二个定时器":["11.4"],"在底层转换成了":["11.5"],"和":["11.5","23.18","29.35"],"回调函数":["11.5"],"是":["11.5"],"的语法糖":["11.5"],"在使用":["11.5"],"object":["12.0","17.4"],"instanceof":["12.1"],"pepol":["12.1"],"like":["12.2","12.3","12.4"],"playing":["12.2","12.3","12.4"],"america":["12.2","12.3"],"basketball":["12.2","12.3"],"i":["12.4"],"m":["12.4"],"come":["12.4"],"from":["12.4"],"fnbind":["12.4"],"滚动":["12.5","12.6"],"const":["12.5","12.6"],"debouncetask":["12.5"],"throttletask":["12.6"],"b":["12.7"],"c":["12.7","28.16"],"h":["12.7"],"false":["12.7","12.8","16.4","17.9","23.5","23.11","29.25"],"let":["12.8","16.1","23.12"],"called":["12.8","16.4"],"call":["12.8","16.4"],"y":["12.8","16.4"],"true":["12.8","16.4","17.0","17.4"],"r":["12.8","16.3","16.4","20.6"],"老师":["12.9","14.10"],"tom":["12.9","14.10","17.5","23.25"],"jim":["12.9","14.10"],"原型与原型链":["13.1"],"作用域跟作用域链":["13.1"],"一种解决问题的方案":["14.1"],"当我们在合适的场景或者特定的问题":["14.1"],"面向接口编程":["14.2"],"依赖于抽象而不依赖于具体":["14.2"],"使用方只关注接口而不关注具体类的实现":["14.2"],"这里提一下我为什么要先学习观察者模式跟发布订阅者这两个模式":["14.2"],"我的理解中这两个设计模式的思想其实是一致的":["14.2"],"可以理解为":["14.2"],"同样的思想":["14.2"],"when":["14.5"],"dom":["14.5"],"templates":["14.5"],"should":["14.5"],"probably":["14.5"],"hyphenate":["14.5"],"toarray":["14.5"],"只取回调函数":["14.5"],"不取":["14.5"],"args":["14.5"],"try":["14.5"],"今天下午放学留下来背书":["14.6"],"老师给tom发送消息":["14.6"],"发布者跟订阅者都不需要知道彼此的存在":["14.8"],"test":["14.9","16.5","28.10","29.7","29.32"],"触发":["14.9"],"得到的应该跟第一次创建的类一模一样的实例":["15.0"],"export导出的也是一个单例":["15.1"],"其它地方更改了模块中的某些值":["15.1"],"张三":["15.2"],"李四":["15.2"],"分离对象的实现与对象的创建":["15.3"],"hash等模式的创建":["15.4"],"也是基于工厂模式的思想":["15.4"],"工厂模式的优点":["15.5"],"解耦了类的实现与创建":["15.5"],"将一个复杂对象的构造层与表示层分离":["15.6"],"装配的人员不需要知道各个部件是怎么产生的":["15.7"],"他只需要按照要求组合不同的部件即可":["15.7"],"建造者模式的优点":["15.8"],"使用建造者模式可以":["15.8"],"使产品的构建流程和产品的表现分离":["15.8"],"访问者不必知道产品部件实现的细节":["15.8"],"扩展方便":["15.8"],"更好的复用性":["15.8"],"建造者模式将产品的创建算法和产品组成的实现分离":["15.8"],"从而控制对象的访问":["15.9"],"router路由跳转的拦截器":["15.10"],"前端框架的数据响应式":["15.10"],"else":["15.11","26.29","28.18"],"房租较低":["15.11"],"没有合适的房源":["15.11"],"这样来精简内存资源":["15.12"],"提升性能和效率":["15.12"],"引入了共享对象":["15.13"],"使对象结构变得复杂":["15.13"],"共享对象的创建":["15.13"],"状态一旦改变":["16.0"],"失败的回调":["16.1"],"我相信这点简单的代码大家都可以写出来":["16.1"],"那我们就来运行测试以下效果":["16.1"],"成功啦":["16.1"],"失败啦":["16.1"],"mypromise":["16.2"],"测试一下":["16.3"],"index":["16.5","28.8","29.4","29.14"],"scripts":["16.5"],"keywords":["16.5"],"author":["16.5","28.17"],"license":["16.5"],"isc":["16.5"],"devdependencies":["16.5"],"但是跑测试案例的时候会出现部分案例测试不通过":["16.6"],"最后借鉴别人的代码":["16.6"],"constructor存在于function的显式原型":["17.2"],"保存了指向function的一个引用":["17.2"],"ƒ":["17.2"],"那它也是function的实例":["17.3"],"也指向function的prototype":["17.3"],"object的隐式原型":["17.4"],"person1":["17.5"],"只要某个对象存在原型上":["17.7"],"proto":["17.8"],"博客主要记录一些学习的文章":["17.9","19.6"],"es6的let":["18.0"],"const出现才实现了块级作用域":["18.0"],"所有未定义直接赋值的变量拥有全局作用域":["18.1"],"拥有全局作用域":["18.2"],"所以在函数fn里面可以访问到a":["18.2"],"所以执行函数时":["18.2"],"b变量的定义在函数fn的作用域下":["18.2"],"在作用域外时不能访问到b的":["18.2"],"cannot":["18.3","23.19"],"access":["18.3"],"before":["18.3"],"initialization":["18.3"],"var":["18.3","29.12"],"如果重复声明同名变量会报错":["18.3"],"sum":["18.4"],"j":["18.5"],"以存储它们的值":["18.6"],"然后在函数中使用这些变量":["18.6"],"直至函数结束":["18.6"],"闭包中由于内部函数的原因":["18.6"],"销毁那些带标记的值并回收它们所占用的内存空间":["18.7"],"到目前为止":["18.7"],"ie9":["18.7"],"firefox":["18.7"],"opera":["18.7"],"则说明没有办法再访问这个值了":["18.8"],"因而就可以将其占用的内存空间回收回来":["18.8"],"时间轴等等功能":["19.0"],"以下就是我自己部署博客的一些心得":["19.0"],"md文档":["19.2"],"hello":["19.2"],"运行":["19.2","19.4","28.8","29.14"],"run":["19.2","28.16"],"package":["19.3"],"json":["19.3"],"主要注意这两个文件":["19.3"],"首页":["19.3"],"vuepress":["19.4"],"为每个页面预渲染生成静态的":["19.4"],"html":["19.4"],"同时在页面被加载的时候":["19.4"],"将作为":["19.4"],"spa":["19.4"],"footer":["19.4"],"juejin":["19.5"],"cn":["19.5"],"user":["19.5"],"3281394147006381":["19.5"],"auto标识自动生成":["19.5"],"每个文档都会根据标题生成目录":["19.5"],"也可以自己配置":["19.5"],"sidebar":["19.5"],"auto":["19.5"],"两种":["20.0"],"强缓存不能缓存地址栏访问的文件":["20.0"],"cache":["20.1","29.26"],"control":["20.1"],"nginx":["20.2"],"中可以使用expires指令来设置过期时间":["20.2"],"config":["20.2"],"location":["20.2"],"1h":["20.2"],"就能看到我们的页面了":["20.3"],"首次请求":["20.3"],"我们主要看图片的请求头跟响应头就行":["20.3"],"因为html的缓存会失效":["20.3"],"刷新页面":["20.3","20.5"],"非强制刷新":["20.3","20.5"],"第二次的请求可以看到请求的":["20.3"],"size":["20.3","28.19"],"变成了":["20.3"],"memory":["20.3"],"并且":["20.3"],"time":["20.3"],"也变为了":["20.3"],"再进一步看请求头和响应头":["20.3"],"请求头中的":["20.3"],"属性没有了":["20.3"],"并且浏览器会给出一个警告":["20.3"],"provisional":["20.3"],"are":["20.3"],"shown":["20.3"],"disable":["20.3"],"to":["20.3","23.19"],"see":["20.3"],"full":["20.3"],"大致意思就是当前使用的是缓存的临时文件":["20.3"],"禁用缓存后才可以查看完整的请求头":["20.3"],"响应":["20.4"],"告诉浏览器可以使用缓存的资源":["20.4"],"如果资源已经发生了变化":["20.4"],"服务器会返回新的资源":["20.4"],"并更新":["20.4"],"告诉浏览器这个文件需要缓存":["20.5"],"第二次请求":["20.5"],"响应状态码变为":["20.5"],"并在请求头中携带":["20.5"],"表示浏览器使用缓存文件":["20.5"],"改变html文件":["20.5"],"把":["20.5"],"pipe":["20.6"],"on":["20.6"],"clienterror":["20.6"],"err":["20.6"],"socket":["20.6"],"bad":["20.6"],"request":["20.6","28.7"],"如果有什么不对的地方":["23.0"],"欢迎大家指出来":["23.0"],"还可以提供最新的和不断发展的javascript特性":["23.1"],"包括那些来自2015年的ecmascript和未来的提案中的特性":["23.1"],"比如异步功能和decorators":["23.1"],"js":["23.2"],"代码也是完全没有问题的":["23.2"],"后面学习一个就可以用一个":["23.2"],"不适用于小型项目":["23.2"],"有可能会增加开发成本":["23.2"],"因为在开发时会有很多的类型声明":["23.2"],"官方还提供了一个在线的学习网站":["23.3"],"unit":["23.4"],"声明变量而不赋值":["23.4"],"0b1010":["23.6"],"octalliteral":["23.6"],"is":["23.7"],"strarr":["23.8"],"string":["23.8"],"a":["23.8"],"字符串枚举":["23.10"],"应该尽量避免使用":["23.11"],"null":["23.12"],"unusable":["23.12"],"然而":["23.13"],"当你指定了":["23.13"],"strictnullchecks":["23.13"],"标记":["23.13"],"throw":["23.14"],"两种形式是等价的":["23.15"],"boolean":["23.16"],"我们定义了两个类型":["23.18"],"然后使用":["23.18"],"assign":["23.19"],"because":["23.19"],"void":["23.20"],"你也不需要显式声明":["23.20"],"一样可以进行类型推断":["23.20"],"msg":["23.20"],"private":["23.21"],"protected":["23.21"],"email":["23.21"],"public":["23.21","28.8","29.4"],"conardli":["23.22"],"admin123":["23.22"],"表示一个":["23.24"],"typescript":["23.24"],"类型":["23.24"],"k":["23.24"],"key":["23.24"],"表示对象中的键类型":["23.24"],"如果不是":["23.27"],"就知道它是":["23.27"],"的相关知识点":["25.0"],"插件github地址":["25.0"],"vite":["25.1","26.3"],"dts":["25.1","26.6"],"sass":["25.2"],"没有其它的依赖项":["25.2"],"table":["25.3"],"组件":["25.3"],"事件使用":["25.3"],"指针事件进行开发":["25.3"],"完美适配移动端":["25.3"],"引入组件样式":["25.6"],"use":["25.6","26.7","29.11"],"改变":["25.7"],"是否可拖拽":["25.10"],"resize":["25.10"],"是否可缩放":["25.10"],"remove":["25.10","25.13"],"方块的唯一标识":["25.11"],"自定义删除图标":["25.12"],"删除方块时触发":["25.13"],"还有一些功能暂时没想到":["25.14"],"希望大家提出意见跟批评":["25.14"],"学习":["26.0"],"学个屁":["26.0"],"才能正常运行":["26.3"],"因为我们需要集成ts所以这里选择":["26.4"],"ts":["26.4"],"安装依赖":["26.4"],"export":["26.5"],"defineconfig":["26.5"],"plugins":["26.5","28.8","29.17","29.24","29.25","29.36"],"自动导入图标组件":["26.6"],"prefix":["26.6"],"icon":["26.6","29.33"],"自动引入组件":["26.6"],"dirs":["26.6"],"自动注册图标组件":["26.6"],"enabledcollections":["26.6"],"mount":["26.7"],"到这里路由的基础配置已经完成了":["26.7"],"更多配置信息可以查看":["26.7"],"官方文档":["26.7"],"router4":["26.7"],"d":["26.8"],"actions":["26.9"],"store的基本使用":["26.9"],"views":["26.9"],"home":["26.9"],"tsx":["26.9"],"definecomponent":["26.9"],"setup":["26.9"],"imports":["26.10"],"components":["26.10"],"exclude":["26.10"],"modules":["26.10","29.32"],"references":["26.10"],"新特性composition":["26.11"],"可以使用":["26.12"],"torefs":["26.12"],"函数来完成此操作":["26.12"],"如果结构中存在没有的":["26.12"],"将不会为":["26.12"],"title":["26.12"],"创建一个":["26.12","26.15"],"ref":["26.12"],"import":["26.12"],"onerrorcaptured":["26.13"],"rendertracked":["26.13"],"onrendertracked":["26.13"],"rendertriggered":["26.13"],"onrendertriggered":["26.13"],"activated":["26.13"],"triggerref":["26.14"],"手动执行与":["26.14"],"关联的任何作用":["26.14"],"effect":["26.14"],"可以理解为强制更新dom":["26.14"],"customref":["26.14"],"创建一个自定义的":["26.14"],"proxy":["26.15"],"shallowreactive":["26.15"],"使其自身的":["26.15"],"转换":["26.15"],"响应性":["26.15"],"但不执行嵌套对象的深度":["26.15"],"val":["26.16"],"prevcount":["26.17"],"直接侦听一个":["26.17"],"element":["26.20"],"sapn":["26.20"],"我是v":["26.22"],"我是三目1":["26.22"],"我是box2":["26.26"],"box3":["26.26"],"trim":["26.27"],"class":["26.28"],"child":["26.29"],"甚至允许你直接在":["28.2"],"模块中":["28.2"],"可以为":["28.3"],"带来更多特性":["28.3"],"能够产生额外的任意文件":["28.3"],"的预处理函数":["28.3"],"为":["28.3"],"跳过":["28.4"],"改造上述loader":["28.5"],"xiaoming":["28.5"],"optios":["28.5"],"remainingrequest":["28.6"],"precedingrequest":["28.6"],"do":["28.6"],"somethings":["28.6"],"webpack":["28.6","29.14","29.28"],"会先从左到右执行":["28.6"],"链中的每个":["28.6"],"上的":["28.6"],"方法":["28.6"],"如果有":["28.6"],"然后再从右到左执行":["28.6"],"上的普通":["28.6"],"absolutify":["28.7"],"返回一个绝对路径":["28.7"],"template":["28.8"],"mode":["28.8","29.33"],"development":["28.8"],"配置":["28.10"],"jpe":["28.10"],"g":["28.10"],"styleel":["28.11"],"document":["28.11"],"createelement":["28.11"],"动态创建style标签":["28.11"],"innerhtml":["28.11"],"将style标签内容设置为处理后的css代码":["28.11"],"head":["28.11"],"添加到head中生效":["28.11"],"script":["28.11","28.20"],"自身的事件钩子":["28.13"],"处理":["28.13"],"内部实例的特定数据":["28.13"],"asyncserieshook":["28.14"],"asyncseriesbailhook":["28.14"],"asyncseriesloophook":["28.14"],"asyncserieswaterfallhook":["28.14"],"hookmap":["28.14"],"打包的每一个文件都是一个模块":["28.15"],"chunks":["28.15"],"即是多个":["28.15"],"组成而来的一个代码块":["28.15"],"入口文件引入的资源组成一个":["28.15"],"通过代码分割的模块又是另外的":["28.15"],"assets":["28.15"],"可以访问本次打包生成所有文件的结果":["28.15"],"utils":["28.16"],"运行指令":["28.16"],"npm":["28.16"],"此时控制台输出以下内容":["28.16"],"ps":["28.16"],"users":["28.16"],"desktop":["28.16"],"source":["28.17"],"覆盖资源":["28.17"],"资源内容":["28.17"],"statsync":["28.18"],"判断是否是文件夹":["28.18"],"isdirectory":["28.18"],"是文件夹需要递归遍历删除下面所有文件":["28.18"],"不是文件夹就是文件":["28.18"],"直接删除":["28.18"],"添加资源":["28.19"],"tags":["28.20"],"return":["28.20"],"tag":["28.20"],"tagname":["28.20"],"scriptname":["28.20"],"attributes":["28.20"],"我画了一个大概的图":["29.0"],"如下":["29.0"],"image":["29.0"],"下面配置文件":["29.1"],"babel":["29.1","29.24"],"直接运行":["29.3"],"dev":["29.4"],"server":["29.4"],"修改配置文件":["29.4"],"htmlwebpackplugin":["29.4"],"为模板创建文件":["29.4"],"新的html文件有两个特点":["29.4"],"把样式引入到页面中":["29.5"],"配置文件修改":["29.5"],"格式":["29.6"],"优点":["29.6"],"减少请求数量":["29.6"],"缺点":["29.6"],"体积变得更大":["29.6"],"exports":["29.7","29.23","29.36"],"加载器":["29.7","29.23"],"rules":["29.7","29.12"],"字体":["29.7","29.34"],"ttf":["29.7","29.34"],"woff2":["29.7","29.34"],"output":["29.8"],"命名规则":["29.9"],"hash值的前8位":["29.9"],"不然文件名太长了":["29.9"],"使用之前的文件扩展名":["29.9"],"options":["29.11","29.17"],"预设":["29.11"],"presets":["29.11","29.29"],"启用浏览器中全局变量":["29.12"],"parseroptions":["29.12"],"ecmaversion":["29.12"],"sourcetype":["29.12"],"no":["29.12"],"不能使用":["29.12"],"定义变量":["29.12"],"定义输出文件名和目录":["29.14"],"filename":["29.14"],"static":["29.14"],"npx":["29.14"],"打包":["29.14"],"所以我们可以这样设置":["29.15"],"last":["29.15"],"version":["29.15"],"not":["29.15"],"dead":["29.15"],"查看效果":["29.15"],"在":["29.15"],"查看优化":["29.16"],"因为有图片转为":["29.16"],"base64":["29.16"],"格式了":["29.16"],"css":["29.17"],"postcss":["29.17"],"postcssoptions":["29.17"],"打印环境变量":["29.18"],"减少代码体积等":["29.19"],"它清晰的提示了在":["29.20"],"中的第二行中出现了错误":["29.20"],"主要用于生产模式":["29.20"],"包含行":["29.20"],"列映射":["29.20"],"随便改变一下sum":["29.22"],"js中的值":["29.22"],"在控制台可以看到页面没有全部刷新":["29.22"],"只更新了":["29.22"],"module":["29.23","29.28","29.35","29.36"],"插件":["29.24","29.25","29.36"],"eslintwebpackplugin":["29.24","29.25"],"指定检查文件的根目录":["29.24"],"context":["29.24","29.26"],"开启babel编译缓存":["29.25"],"cachecompression":["29.25"],"缓存文件不要压缩":["29.25"],"开启缓存":["29.25","29.26"],"eslintplugin":["29.26"],"检测哪些文件":["29.26"],"默认值":["29.26"],"cachelocation":["29.26"],"已经默认开启了这个功能":["29.28"],"works":["29.29"],"threads":["29.29","29.30"],"进程数量":["29.29"],"preset":["29.29","29.37"],"env":["29.29","29.37"],"cachedirectory":["29.29"],"minimizer里面":["29.30"],"效果一样的":["29.30"],"cssminimizerplugin":["29.30"],"当生产模式会默认开启terserplugin":["29.30"],"但是我们需要进行其他配置":["29.30"],"就要重新写了":["29.30"],"terserplugin":["29.30"],"parallel":["29.30"],"开启多进程":["29.30"],"满足条件才会代码分割":["29.32"],"maxasyncrequests":["29.32"],"按需加载时并行加载的文件的最大数量":["29.32"],"maxinitialrequests":["29.32"],"入口js文件最大并行请求数量":["29.32"],"enforcesizethreshold":["29.32"],"超过50kb一定会单独打包":["29.32"],"此时会忽略minremainingsize":["29.32"],"cachegroups":["29.32"],"组":["29.32"],"哪些模块要打包到一个组":["29.32"],"defaultvendors":["29.32"],"组名":["29.32"],"node":["29.32"],"需要打包到一起的模块":["29.32"],"priority":["29.32"],"权重":["29.32"],"越大越高":["29.32"],"reuseexistingchunk":["29.32"],"如果当前":["29.32"],"chunk":["29.32"],"包含已从主":["29.32"],"bundle":["29.32"],"中拆分出的模块":["29.32"],"则它将被重用":["29.32"],"而不是生成新的模块":["29.32"],"其他没有写的配置会使用上面的默认值":["29.32"],"这里的minchunks权重更大":["29.32"],"iconfont":["29.33"],"bluetoothoff":["29.33"],"dnd":["29.33"],"camera":["29.33"],"添加之前的query参数":["29.34"],"图标":["29.34"],"视频":["29.34"],"mp4":["29.34"],"avi":["29.34"],"resource":["29.34"],"不变":["29.35"],"文件只保存文件的":["29.35"],"值和它们与文件关系":["29.35"],"整个文件体积就比较小":["29.35"],"所以变化重新请求的代价也小":["29.35"],"rel":["29.36"],"按需加载core":["29.37"],"js的polyfill":["29.37"],"usebuiltins":["29.37"],"usage":["29.37"],"这些选项帮助快速启用":["29.38"],"serviceworkers":["29.38"],"不允许遗留任何":["29.38"],"旧的":["29.38"]},{"0":["26.16"],"1":["10.9"],"2":["10.8","16.5","23.9"],"3":["0.11","23.23"],"4":["4.1","11.4","29.18"],"5":["0.9","2.8","18.3","23.4"],"6":["18.4","29.33"],"9":["18.4"],"10":["12.7","29.2","29.6"],"19":["18.4"],"20":["23.27"],"40":["25.1"],"50":["6.5","10.17","10.18","10.22"],"55":["3.2"],"60":["2.8","10.14"],"100":["10.6","10.11","23.27"],"127":["28.16"],"138":["10.13"],"200":["10.18"],"250":["10.10"],"300":["10.6"],"500":["10.13"],"800":["10.13"],"1000":["2.8","8.12","18.5"],"1024":["29.6"],"1111":["16.3"],"2018":["19.4"],"2222":["16.3"],"2268":["0.9"],"3000":["29.4"],"3333":["16.3"],"4011":["28.16"],"8080":["20.6"],"9229":["28.16"],"72000":["3.6"],"更多的":["0.3"],"的事件可以查看":["0.3"],"mdn文档":["0.3"],"效果如下":["0.6","0.7","0.9"],"image":["0.6","10.5","10.6","10.8","10.9","10.10","10.11","10.18","10.22","10.25","14.2","16.1","16.3","16.5","26.6","28.6","28.8","28.15","28.16","29.3","29.9","29.14","29.15","29.16","29.18","29.22"],"png":["0.6","2.7","10.5","10.6","10.8","10.9","10.10","10.11","10.18","10.22","10.25","14.2","16.1","16.3","16.5","17.0","17.2","17.3","17.4","26.6","28.6","28.8","28.15","28.16","29.0","29.3","29.11","29.14","29.15","29.16","29.18","29.22"],"gif":["0.7","0.9","0.10","29.33"],"click":["0.8","6.3"],"至此":["0.8","26.10"],"文件拖拽跟input选取文件的事件都做好了":["0.8"],"下一步就是实现选中的文件预览以及读取文件":["0.8"],"文件不可读":["0.9"],"编码错误":["0.9"],"文件读取失败":["0.9"],"文件读取的进度":["0.9"],"因为是本地读取所以进度很快":["0.9"],"基本看不出来":["0.9"],"所以选择打印查看":["0.9"],"onprogress":["0.9"],"event":["0.9"],"console":["0.9","16.3","20.6"],"log":["0.9","16.3","18.5","20.6"],"loaded":["0.9"],"total":["0.9"],"gif动图做的比较粗糙":["0.9"],"大家可以自己实现看一下":["0.9"],"7b439738":["0.9"],"41fa":["0.9"],"935f":["0.9"],"24481fefbcb4":["0.9"],"32e82b10":["0.10"],"135e":["0.10"],"444f":["0.10"],"bc5b":["0.10"],"53b139225262":["0.10"],"50px":["0.11"],"200px":["0.11"],"opacity":["0.11"],"点击上传字体":["0.11"],"span":["0.11"],"博客主要记录一些学习的文章":["0.12","4.1","12.9","20.6","26.29"],"如有不足":["0.12","4.1","12.9","20.6","26.29"],"望大家指出":["0.12","4.1","12.9","17.9","20.6","26.29"],"谢谢":["0.12","3.7","4.1","7.14","12.9","17.9","19.6","20.6","26.29"],"指定文件名1":["2.2"],"removechild":["2.4","2.5","2.7"],"释放之前创建的url":["2.4"],"对象":["2.4","11.5"],"revokeobjecturl":["2.4"],"注意":["2.5","2.7","4.1","20.2","20.5"],"在":["2.5"],"api":["2.5","26.11"],"返回":["2.5"],"的时候需要在请求头中设置":["2.5"],"responsetype":["2.5"],"为":["2.5"],"也就不能进行鉴权":["2.6"],"无法知道下载的进度等问题":["2.6"],"浏览器可直接浏览的文件类型如txt":["2.7"],"jpg":["2.7"],"gif等不能通过此方法下载":["2.7"],"remove":["2.8"],"这里只是在某些特定场景为大家额外提供一种思路":["3.0"],"增加我们代码的可读性":["3.0"],"这样看起来是不是就简洁了很多":["3.1"],"result":["3.2"],"default":["3.3"],"接下来用几个例子让大家更加熟悉一点":["3.4"],"get":["3.5","26.14"],"department":["3.6"],"通信的相关知识吧":["4.0"],"childdata":["4.1"],"onsole":["4.1"],"输出":["4.1"],"进行跨域":["4.1"],"通信存在安全性问题":["4.1"],"因为所有具有相同名称的窗口都可以访问和修改":["4.1"],"服务器端转发":["4.1"],"可以将消息从一个iframe发送到服务器":["4.1"],"然后再由服务器将其转发到另一个iframe":["4.1"],"关于定时器的一些知识":["5.1"],"代码实现用了":["6.1"],"vue3":["6.1","26.10"],"startraffle":["6.3"],"开始抽奖":["6.3"],"value":["6.4","23.24","26.12"],"前3":["6.5"],"1加速转动":["6.5"],"最后的3":["6.5"],"1减速每次":["6.5"],"剩余的中间匀速":["6.5"],"replace":["7.1"],"匹配一个垂直制表符":["7.2"],"w":["7.2","10.13"],"匹配包括下划线的任何单词字符":["7.2"],"匹配任何非单词字符":["7.2"],"返回结果为false":["7.7"],"index":["7.11","29.15"],"while":["7.11","23.14"],"null":["7.11","14.9","17.4"],"需要注意的是":["8.2","10.5"],"ie9":["8.2"],"及更早的":["8.2"],"ie":["8.2"],"浏览器不支持向回调函数传递额外参数":["8.2"],"第一种语法":["8.2"],"在后续的调用不会重用同一个定时器编号":["8.3"],"但是不同的对象使用独立的编号池":["8.3"],"来删除它":["8.4"],"当定时器过期的时候":["8.6"],"将被传递给func指定函数的附加参数":["8.6"],"避免代码杂乱无章":["8.7"],"增强代码的可维护性":["8.7"],"导致定时器将会被立即执行":["8.11"],"time1":["8.12"],"没执行一次执行次数自增":["8.12"],"调用倒计时函数":["8.14"],"id":["8.15"],"剩下的setinterval":["8.15"],"id还会启动setinterval":["8.15"],"type":["9.0","28.9","28.10","29.7"],"multipart":["9.0"],"form":["9.0","9.1"],"data上送到文件服务器":["9.0"],"请求头要设置为":["9.1"],"cache":["9.1"],"control":["9.1"],"no":["9.1"],"不得不说":["9.1"],"活到老学到老":["9.1"],"每次接触新知识都是满满的动力":["9.1"],"这次我们的重点是":["10.0"],"因为当":["10.2"],"设置的宽高属性与初始比例不一致时会出现扭曲":["10.2"],"备选文案":["10.3"],"而不会显示出来":["10.3"],"️":["10.3"],"绘制一个矩形的边框":["10.4"],"clearrect":["10.4"],"widh":["10.4"],"清除指定的矩形区域":["10.4"],"然后这块区域会变得完全透明":["10.4"],"blue":["10.5"],"fill会自动closepath":["10.5"],"在绘制路径的时候选择不关闭路径":["10.5"],"这个时候会实现自封闭现象":["10.5"],"只针对fill":["10.5"],"stroke不生效":["10.5"],"圆弧半径":["10.6"],"居然还能画贝塞尔曲线":["10.6"],"不对不能画":["10.6"],"其实是我不想学":["10.6"],"想了解的去官网看文档啊":["10.6"],"red":["10.8","10.9"],"strokestyle":["10.9"],"stroke":["10.10"],"direction":["10.12"],"文本方向":["10.12"],"可能的值包括":["10.12"],"ltr":["10.12"],"rtl":["10.12"],"inherit":["10.12"],"fmt":["10.13"],"auto":["10.13","28.10"],"app":["10.13"],"f":["10.13"],"jpeg":["10.13"],"h":["10.13"],"设置图片源地址":["10.13"],"使用上一次的配置绘制一个矩形":["10.14"],"加载默认颜色配置":["10.14"],"使用加载的配置绘制一个矩形":["10.14"],"fillrect":["10.16"],"font":["10.18"],"48px":["10.18"],"serif":["10.18"],"filltext":["10.18"],"dy":["10.20"],"竖直方向的移动":["10.20"],"一步完成":["10.21"],"xor":["10.24"],"重叠部分会变成透明":["10.24"],"copy":["10.24"],"只有新图像会被保留":["10.24"],"其余的全部被清除":["10.24"],"变透明":["10.24"],"状态的一部分":["10.25"],"可以被保存起来":["10.25"],"如果我们在创建新裁切路径时想保留原来的裁切路径":["10.25"],"我们需要做的就是保存一下":["10.25"],"的状态":["10.25","10.27"],"裁切路径创建之后所有出现在它里面的东西才会画出来":["10.25"],"然后会绘制出":["10.25"],"颗随机位置分布":["10.25"],"经过缩放":["10.25"],"的三角形":["10.25"],"当然也只有在裁切路径里面的三角形才会绘制出来":["10.25"],"可以先恢复它":["10.27"],"然后重绘下一帧":["10.27"],"大家可以评论":["10.28"],"我在去总结":["10.28"],"的学习":["11.0","26.10"],"process":["11.1"],"nexttick":["11.1"],"object":["11.1","28.9"],"observe":["11.1"],"废弃":["11.1"],"mutationobserver":["11.1"],"重复3":["11.2"],"6步骤":["11.2"],"直至":["11.2"],"中的任务全部执行完毕":["11.2"],"第二个宏任务执行":["11.4"],"把promise的回调放入微任务队列":["11.4"],"的时候":["11.5"],"解释器都会先创建一个":["11.5"],"然后把剩下的":["11.5"],"函数中的操作放到":["11.5"],"回调函数中":["11.5"],"jim":["12.1"],"返回对象实例":["12.1"],"america":["12.4"],"basketball":["12.4"],"window":["12.5","12.6","29.22"],"addeventlistener":["12.5","12.6"],"scroll":["12.5","12.6"],"proto":["12.7"],"true":["12.7","19.5","23.14","26.6","28.9","28.20","29.4","29.29","29.37","29.38"],"静态resolve方法":["12.8","16.4"],"static":["12.8","16.4"],"常规resolve处理":["12.8","16.4"],"静态reject方法":["12.8","16.4"],"今天下午放学留下来背书":["12.9","14.10"],"老师给tom发送消息":["12.9","14.10"],"老师给jim发送消息":["12.9","14.6","14.10"],"vuepress部署博客":["13.1"],"会自然的想到使用这种方式解决是最优雅的":["14.1"],"但是实现或者使用的场景不同":["14.2"],"这两个设计模式最大的区别就在于需不需要第三方来辅助完成当前工作":["14.2"],"大家可以通过以下图片来看一下它们之间的区别":["14.2"],"catch":["14.5","28.18"],"e":["14.5","18.4","23.24","28.18"],"handleerror":["14.5"],"convert":["14.5"],"an":["14.5"],"like":["14.5"],"real":["14.5"],"list":["14.5"],"start":["14.5"],"ret":["14.5"],"new":["14.5","29.22","29.34"],"o":["14.9"],"init":["14.9"],"hello":["14.9","20.5"],"world":["14.9","20.5"],"变更后触发":["14.9"],"那么你再次获取就是更改后的值":["15.1"],"王五":["15.2"],"单列模式的优点":["15.2"],"一个类只存在一个实例":["15.2"],"减少内存的占用":["15.2"],"节约资源":["15.2"],"减少垃圾回收机制的压力":["15.2"],"缺点":["15.2","15.5","15.8","15.11"],"扩展性不好":["15.2"],"不需要直到类是怎么实现的":["15.5"],"只需要关心类的创建":["15.5"],"扩展性较好":["15.5"],"隔离了创建与实现的流程":["15.5"],"代码结构清晰":["15.5"],"增加了代码量":["15.5"],"系统的复杂性":["15.5"],"需要酌情使用":["15.5"],"所以产品创建的算法可以复用":["15.8"],"产品部件的实现也可以复用":["15.8"],"带来很大的灵活性":["15.8"],"产品之间的差异较大时复用性会大大降低":["15.8"],"产品之间的粒度较小时":["15.8"],"会额外增加一些不必要的结构":["15.8"],"这个价格你可以看一下其它的":["15.11"],"代理模式的优点":["15.11"],"保护目标对象":["15.11"],"扩展目标对象的功能":["15.11"],"使用不当增加了系统的复杂度":["15.11"],"需要考虑场景来使用":["15.11"],"销毁等需要维护":["15.13"],"带来额外的复杂度":["15.13"],"就不会再变":["16.0"],"p1":["16.1"],"失败啦111":["16.1"],"成功啦111":["16.1"],"结果":["16.1","16.3"],"报错了":["16.2"],"输出结果":["16.2"],"失败的回调":["16.2"],"我是promise":["16.3"],"最后执行npm":["16.5"],"run":["16.5","29.18","29.33"],"才最终实现":["16.6"],"关系图":["17.0","17.2","17.3","17.4"],"截图":["17.0","17.2","17.3","17.4"],"所以在外层访问b变量就会报错":["18.2"],"c变量没有定义直接赋值":["18.2"],"所以c变量变成了全局作用域下的变量":["18.2"],"所以在外部可以直接使用":["18.2"],"syntaxerror":["18.3"],"identifier":["18.3"],"has":["18.3","23.9"],"already":["18.3"],"been":["18.3"],"declared":["18.3"],"d":["18.4"],"外部函数的变量被内部函数引用":["18.6"],"如果不手动清除则无法释放":["18.6"],"从而会造成内存泄漏":["18.6"],"chrome":["18.7","28.16"],"safari的js实现使用的都是标记清除的垃圾回收策略或类似的策略":["18.7"],"只不过垃圾收集的时间间隔互不相同":["18.7"],"命令":["19.2"],"就可以通过本地访问我们的第一篇文档":["19.2"],"readme":["19.2"],"md":["19.2"],"配置文件":["19.3"],"mit":["19.4"],"licensed":["19.4"],"copyright":["19.4"],"present":["19.4"],"evan":["19.4"],"you":["19.4"],"timer":["19.5"],"评论插件的配置":["19.5"],"valineconfig":["19.5"],"appid":["19.5"],"your":["19.5"],"appkey":["19.5"],"网站logo":["19.5"],"是否开启搜索":["19.5"],"search":["19.5"],"协商缓存可以缓存地址栏访问的文件":["20.0"],"由于expires是基于客户端时间计算的":["20.2"],"如果客户端的时间与服务器的时间不一致":["20.2"],"则可能会影响缓存效果":["20.2"],"验证缓存":["20.3"],"上述的方法可能并不一定让你相信我们使用的是缓存文件":["20.3"],"而不是重新请求的资源文件":["20.3"],"一开始我们准备了两张图片":["20.3"],"现在使用的是":["20.3"],"还有一个":["20.3"],"我们把":["20.3"],"删除了":["20.3"],"然后把":["20.3"],"改名成":["20.3"],"然后刷新页面":["20.3"],"就会发现虽然我们图片更改了":["20.3"],"但是图片并不是我们后面改名的那个图片":["20.3"],"还是之前的图片":["20.3"],"强制刷新后就能看到":["20.3"],"我们替换的图片生效了":["20.3"],"请求头中也带上了":["20.3"],"属性":["20.3"],"中":["20.5","29.14"],"的":["20.5","23.21"],"改为":["20.5"],"web":["20.5"],"并刷新页面":["20.5"],"发现响应状态码变为":["20.5"],"并且更新了页面和响应头的":["20.5"],"如果资源的修改时间只精确到秒":["20.5"],"而不是毫秒":["20.5"],"可能会导致缓存失效":["20.5"],"此外":["20.5"],"如果服务器上的资源被修改了":["20.5"],"但修改时间没有更新":["20.5"],"也会导致缓存失效":["20.5"],"listen":["20.6"],"opened":["20.6"],"localhost":["20.6","29.4"],"address":["20.6"],"port":["20.6","29.4"],"这里的测试证明就不写":["20.6"],"不然这文章的字数就太水了":["20.6"],"如果你们有兴趣可以自己尝试一下":["20.6"],"以帮助建立健壮的组件":["23.1"],"需要编译":["23.2"],"项目越大消耗时间越长":["23.2"],"但是":["23.2"],"编译花费的那点时间跟后期排错的时间比起来不值一提":["23.2"],"playground":["23.3"],"来学习新的语法或新特性":["23.3"],"0o744":["23.6"],"b":["23.8"],"c":["23.8"],"source":["23.9","28.20"],"element":["23.9","23.24"],"s":["23.9"],"but":["23.9"],"target":["23.9"],"requires":["23.9"],"因为它会让我们的类型变得不确定":["23.11"],"不利于后期的维护":["23.11"],"只能赋值给":["23.13"],"void":["23.13"],"和它们各自":["23.13"],"infiniteloop":["23.14"],"至于使用哪个大多数情况下是凭个人喜好":["23.15"],"然而":["23.15"],"当你在typescript里使用jsx时":["23.15"],"只有":["23.15"],"语法断言是被允许的":["23.15"],"yes":["23.16"],"error":["23.16"],"创建了交叉类型":["23.18"],"这个类型同时拥有前两个类型的所有特性":["23.18"],"is":["23.19"],"a":["23.19"],"read":["23.19"],"only":["23.19"],"property":["23.19"],"string":["23.20"],"打印一些内容":["23.20"],"如果我们省略访问修饰符":["23.21"],"默认情况下属性都是":["23.21"],"和":["23.21","26.14","28.3","28.6"],"类也是可以":["23.21"],"extends":["23.21"],"表示对象中的值类型":["23.24"],"表示元素类型":["23.24"],"p45":["23.25"],"return":["23.26","28.18","28.19"],"let":["23.27"],"bigtrain":["23.27"],"预览地址":["25.0"],"插件npm地址":["25.0"],"tsc":["25.1"],"也就意味着后面兼容其它框架会变得简单":["25.2"],"总之":["25.3"],"这些选择和决策都是经过慎重考虑的":["25.3"],"旨在提高代码质量和效率":["25.3"],"如果读者有更好的建议或想法":["25.3"],"欢迎提供反馈":["25.3"],"共同探讨":["25.3"],"mount":["25.6"],"这里需要注意的一点是":["25.7"],"在组件的外层或者组件本身需要指定宽度":["25.7"],"不然宽度会计算为0":["25.7"],"是否可删除":["25.10"],"isdrawgridlines":["25.10"],"是否绘制网格线":["25.10"],"删除的方块的id":["25.13"],"运行项目":["26.4"],"dev":["26.4","29.33"],"就可以看到这个界面啦":["26.4"],"配置完就可以在项目中使用":["26.5"],"ep":["26.6"],"include":["26.6"],"tsx":["26.6"],"autoinstall":["26.6"],"配置完":["26.6"],"大家应该可以看到根目录下新增了两个文件":["26.6"],"为了解决":["26.6"],"中的错误":["26.6"],"我们需要在":["26.6"],"tsconfig":["26.6"],"json":["26.6"],"中配置":["26.6"],"x":["26.7"],"支持":["26.7"],"typescript":["26.7"],"配置路由的类型是":["26.7"],"这里":["26.7"],"meta":["26.7"],"可以让我们有更多的发挥空间":["26.7"],"比如控制路由权限":["26.7"],"添加路由标题等等":["26.7"],"div":["26.9"],"p":["26.9"],"过多深入的使用":["26.9"],"推荐大家自己去pinia":["26.9"],"中文文档中查看":["26.9"],"我们的项目就建好了":["26.10"],"我们可以":["26.10"],"开心":["26.10"],"了":["26.10"],"from":["26.12"],"vue":["26.12","29.22"],"const":["26.12"],"onactivated":["26.13"],"deactivated":["26.13"],"ondeactivated":["26.13"],"js":["26.13"],"并对其依赖项跟踪和更新触发进行显式控制":["26.14"],"提供":["26.14"],"set":["26.14"],"可以自己定义":["26.14"],"的响应式操作":["26.14"],"shallowreadonly":["26.15"],"为只读":["26.15"],"但不执行嵌套对象的深度只读转换":["26.15"],"侦听多个源":["26.17"],"侦听器还可以使用数组以同时侦听多个源":["26.17"],"fooref":["26.17"],"barref":["26.17"],"foo":["26.17"],"bar":["26.17"],"prevfoo":["26.17"],"prevbar":["26.17"],"fontsize":["26.20"],"16px":["26.20"],"我是三目2":["26.22"],"stop":["26.26"],"我是box3":["26.26"],"我是title插槽":["26.28"],"我是default插槽":["26.28"],"onclick":["26.29"],"css":["28.2"],"文件":["28.2"],"生态系统提供更多能力":["28.3"],"用户现在可以更加灵活地引入细粒度逻辑":["28.3"],"例如":["28.3"],"压缩":["28.3"],"打包":["28.3","29.3","29.9"],"语言转译":["28.3"],"或编译":["28.3"],"更多其他特性":["28.3"],"getoptions":["28.5"],"npx":["28.5","28.8","29.4","29.9","29.11"],"查看效果":["28.5"],"在这个过程中如果任何":["28.6"],"有返回值":["28.6"],"则":["28.6"],"链被阻断":["28.6"],"会跳过后面所有的的":["28.6"],"直接进入上一个":["28.6"],"更多文档":["28.7"],"请查阅":["28.7"],"webpack":["28.7","29.9","29.11"],"官方":["28.7"],"文档":["28.7"],"可以在打包输出的文件中看到":["28.8"],"我们main":["28.8"],"js中的console":["28.8"],"已经清楚了":["28.8"],"properties":["28.9"],"presets":["28.9"],"array":["28.9"],"additionalproperties":["28.9"],"javascript":["28.10"],"解决图片重复打包问题":["28.10"],"loader是第一个loader":["28.11"],"由于return导致熔断":["28.11"],"所以其他loader不执行了":["28.11"],"不管是normal还是pitch":["28.11"],"module":["28.11","28.17","28.18","28.19","28.20"],"exports":["28.11","28.17","28.18","28.19","28.20","29.35"],"功能完成后调用":["28.13"],"提供的回调":["28.13"],"multihook":["28.14"],"还统一暴露了三个方法给插件":["28.14"],"用于注入不同类型的自定义构建行为":["28.14"],"tap":["28.14"],"可以注册同步钩子和异步钩子":["28.14"],"tapasync":["28.14"],"回调方式注册异步钩子":["28.14"],"tappromise":["28.14"],"promise":["28.14"],"方式注册异步钩子":["28.14"],"用于在":["28.15"],"编译模块阶段进行逻辑添加以及修改":["28.15"],"生命周期简图":["28.15"],"debugger":["28.16"],"listening":["28.16"],"on":["28.16"],"ws":["28.16"],"629ea097":["28.16"],"7b52":["28.16"],"93a7":["28.16"],"02f83c75c797":["28.16"],"for":["28.16"],"help":["28.16"],"see":["28.16"],"https":["28.16"],"nodejs":["28.16"],"org":["28.16"],"en":["28.16"],"docs":["28.16"],"inspecto":["28.16"],"打开":["28.16"],"浏览器":["28.16"],"f12":["28.16"],"打开浏览器调试控制台":["28.16"],"此时控制台会显示一个绿色的图标":["28.16"],"点击绿色的图标进入调试模式":["28.16"],"在需要调试代码处用":["28.16"],"打断点":["28.16"],"代码就会停止运行":["28.16"],"从而调试查看数据情况":["28.16"],"资源大小":["28.17"],"size":["28.17"],"unlinksync":["28.18"],"最后删除当前目录":["28.18"],"rmdirsync":["28.18"],"将产生的错误返回出去":["28.18"],"length":["28.19"],"innerhtml":["28.20"],"closetag":["28.20"],"eslint":["29.1"],"webpack等":["29.1"],"都是建立在项目根目录下":["29.1"],"没有报错就表示打包成功":["29.3"],"打包后的文件默认输出到dist目录下面":["29.3"],"内容和源文件一致":["29.4"],"自动引入打包生成的js等资源":["29.4"],"template":["29.4"],"开发服务器":["29.4"],"devserver":["29.4"],"host":["29.4"],"启动服务器域名":["29.4"],"启动服务器端口号":["29.4"],"open":["29.4"],"是否自动打开浏览器":["29.4"],"至此运行命令变为":["29.4"],"serve":["29.4"],"数组里面":["29.5"],"执行顺序是从右到左":["29.5"],"再次运行就能看到效果了":["29.5"],"parser":["29.6"],"dataurlcondition":["29.6"],"maxsize":["29.6"],"小于10kb的图片会被base64处理":["29.6"],"重启devserve":["29.6"],"就可以看到":["29.6"],"小于10kb的图片已经转为":["29.6"],"格式了":["29.6"],"mp4":["29.7"],"avi":["29.7"],"asset":["29.7"],"resource":["29.7"],"刷新页面就可以看到图标了":["29.7"],"添加之前的query参数":["29.9"],"运行":["29.9","29.32","29.33"],"查看输出的文件夹dist":["29.9"],"可以看到":["29.9"],"文件预期的按照我们设置的方式输出":["29.9"],"单独提取出来配置":["29.11"],"config":["29.11"],"再次运行":["29.11"],"经过babel转化后":["29.11"],"输出的文件":["29.11"],"把es6的语法都转化成了es6之前的语法了":["29.11"],"如果你是使用vs":["29.12"],"code的话":["29.12"],"可以配合vs":["29.12"],"code的eslint插件":["29.12"],"在没有编译之前就看到错误":["29.12"],"因为默认是检查所有的文件":["29.12"],"所以我们打包后的dist目录下的文件就会报错":["29.12"],"这时我们就需要配置":["29.12"],"eslintignore":["29.12"],"文件来忽略检查dist目录":["29.12"],"忽略dist目录下所有文件":["29.12"],"dist":["29.12"],"查看dist":["29.14"],"不难看出":["29.14"],"我们的css文件已经被打包成单独的文件了":["29.14"],"并且在打包输出的":["29.14"],"html":["29.14","29.15"],"css文件也被使用link标签加载了":["29.14"],"中写一些存在兼容性的样式":["29.15"],"比如":["29.15","29.22"],"display":["29.15"],"flex":["29.15"],"打包看输出文件":["29.15"],"所以css文件看起来很多":["29.16"],"preset":["29.17"],"env":["29.17"],"能解决大多数样式兼容性问题":["29.17"],"测试一下":["29.18"],"打包编译速度更慢":["29.20"],"isproduction":["29.20"],"这一个文件":["29.22"],"这样的方式只能自己一个一个的添加":["29.22"],"十分的麻烦":["29.22"],"所以在实际项目中":["29.22"],"我们一般都是使用其它loader来实现的":["29.22"],"loaderopen":["29.22"],"in":["29.22"],"react":["29.22"],"rules":["29.23"],"默认值":["29.24"],"缓存目录":["29.25"],"cachelocation":["29.25"],"eslintcache":["29.25","29.26"],"开启多进程和设置进程数量":["29.26"],"parallel":["29.26"],"无需其他配置":["29.28"],"开启babel缓存":["29.29"],"cachecompression":["29.29"],"false":["29.29"],"关闭缓存文件压缩":["29.29"],"plugins":["29.29","29.34"],"减少代码体积":["29.29"],"我们定义的文件体积太小了":["29.32"],"所以要改打包的最小文件体积":["29.32"],"此时我们会发现生成":["29.32"],"个":["29.32"],"其中有一个就是提取的公共模块":["29.32"],"单入口代码分割":["29.32"],"回到我们之前的项目中进行配置":["29.32"],"其实一般使用的都是默认值":["29.32"],"压缩配置":["29.32","29.35"],"其他内容用默认配置即可":["29.32"],"减法计算":["29.33"],"就可以在开发服务器上测试了":["29.33"],"第一次点击按钮才回去加载":["29.33"],"插件":["29.34"],"提取css成单独文件":["29.34"],"minicssextractplugin":["29.34"],"定义输出文件名和目录":["29.34"],"optimization":["29.35"],"提取runtime文件":["29.35"],"runtimechunk":["29.35"],"name":["29.35"],"entrypoint":["29.35"],"runtime文件命名规则":["29.35"],"preload兼容性更好":["29.36"],"as":["29.36"],"script":["29.36"],"prefetch兼容性更差":["29.36"],"corejs":["29.37"],"version":["29.37"],"proposals":["29.37"],"clientsclaim":["29.38"],"skipwaiting":["29.38"]}]'},t={"0.0":{t:"实现思路",p:`1、利用H5的拖拽事件，获取到拖进我们特定区域的文件数据（或者通过input元素获取文件）。
2、通过FileReader对 ...`,l:"blogs/html/h5-drop.html",a:"实现思路"},"0.1":{t:"基础知识",p:"",l:"blogs/html/h5-drop.html#基础知识",a:"基础知识"},"0.2":{t:"1、拖拽事件",p:`主要用到的事件有：drop、dragenter、dragover、dragleave四个事件。

drop：当一个元素或是选 ...`,l:"blogs/html/h5-drop.html#_1、拖拽事件",a:"_1、拖拽事件"},"0.3":{t:"2、FileReader对象",p:"FileReader 对象允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用 File 或  ...",l:"blogs/html/h5-drop.html#_2、filereader对象",a:"_2、filereader对象"},"0.4":{t:"3、FileList对象",p:"FileList对象通常来自于&lt;input&gt;元素的files属性或者拖拽操作的元素的dataTransfer对象 ...",l:"blogs/html/h5-drop.html#_3、filelist对象",a:"_3、filelist对象"},"0.5":{t:"具体实现",p:"",l:"blogs/html/h5-drop.html#具体实现",a:"具体实现"},"0.6":{t:"1、定义拖拽文件的特定区域",p:`
样式文件放在最后

&lt;div class=&quot;main&quot;&gt;
  &lt;p class=&q ...`,l:"blogs/html/h5-drop.html#_1、定义拖拽文件的特定区域",a:"_1、定义拖拽文件的特定区域"},"0.7":{t:"2、拖拽文件事件-文件获取",p:`
这里有一个要点，就是拖拽事件需要阻止它的默认行为，不然不会触发后续的事件。

// 获取dom元素
let droptar ...`,l:"blogs/html/h5-drop.html#_2、拖拽文件事件-文件获取",a:"_2、拖拽文件事件-文件获取"},"0.8":{t:"3、还有点击上传（`input`）上传事件",p:`// 获取input元素
let fileInput = document.getElementById('fileInpu ...`,l:"blogs/html/h5-drop.html#_3、还有点击上传-input-上传事件",a:"_3、还有点击上传-input-上传事件"},"0.9":{t:"4、读取文件并实现上传文件预览",p:`
通过FileReader读取文件数据，把文件跟文件流分别保存在不同的数组中（方便预览文件删除），并且根据文件数组的下标给每 ...`,l:"blogs/html/h5-drop.html#_4、读取文件并实现上传文件预览",a:"_4、读取文件并实现上传文件预览"},"0.10":{t:"5、删除文件",p:`
利用事件委托的方法，给整个盒子添加click事件，通过对id的检验识别出当前需要删除的文件，目前因为是根据删除按钮的id判 ...`,l:"blogs/html/h5-drop.html#_5、删除文件",a:"_5、删除文件"},"0.11":{t:"css文件",p:`* {
  margin: 0px;
  padding: 0px;
}
/* 整体盒子 */
.main {
  widt ...`,l:"blogs/html/h5-drop.html#css文件",a:"css文件"},"0.12":{t:"总结",p:`

拖拽事件: dragenter、dragover、dragleave 和drop,在做文件拖拽上传的时候需要将drago ...`,l:"blogs/html/h5-drop.html#总结",a:"总结"},"1.0":{t:"# HTML",p:"",l:"blogs/html/index.html",a:"html"},"1.1":{t:"目录",p:`
HTML5-拖拽上传文件

`,l:"blogs/html/index.html#目录",a:"目录"},"2.0":{t:"前言〽️",p:"前端文件下载应该是一个老生常谈的问题了😆，这次主要是结合自己最近在项目中的实践和百度来的一些下载方式，如果有遗漏或者错误的 ...",l:"blogs/informal-essay/download.html",a:"前言〽️"},"2.1":{t:"1、a标签🥇",p:`a标签下载应该是目前大家用的最多的下载文件的方式了吧，毕竟它简单明了。
a标签分两种：直接a标签点击下载（download属 ...`,l:"blogs/informal-essay/download.html#_1、a标签🥇",a:"_1、a标签🥇"},"2.2":{t:"1.1、a标签的download✨✨✨",p:"download 属性是HTML5新增的属性，主要解决不能直接下载浏览器可以打开预览的文件的问题，例如：txt、png、jp ...",l:"blogs/informal-essay/download.html#_1-1、a标签的download✨✨✨",a:"_1-1、a标签的download✨✨✨"},"2.3":{t:"2、模拟a标签下载✨✨✨✨✨",p:`这里也没什么特别的，就是我们熟知的文件流转 blob/base64下载，只不过是为了方便整理才起的这个标题名🙇。
`,l:"blogs/informal-essay/download.html#_2、模拟a标签下载✨✨✨✨✨",a:"_2、模拟a标签下载✨✨✨✨✨"},"2.4":{t:"2.1、利用blob（URL.createObjectURL）👍",p:`利用 URL对象 的 createObjectURL 方法去读取文件流，然后通过 js 去模拟 a 标签点击来下载文件。
兼 ...`,l:"blogs/informal-essay/download.html#_2-1、利用blob-url-createobjecturl-👍",a:"_2-1、利用blob-url-createobjecturl-👍"},"2.5":{t:"2.2、使用base64（FileReader.readAsDataURL）👍",p:"readAsDataURL() 方法会异步读取指定的 Blob 或 File 对象，并在读取完成时，通过 onload 回调 ...",l:"blogs/informal-essay/download.html#_2-2、使用base64-filereader-readasdataurl-👍",a:"_2-2、使用base64-filereader-readasdataurl-👍"},"2.6":{t:"3、open/location.href✨",p:`应该是最简单直接的下载了吧，不过大部分时间都不能满足我们的需求，所以现在用的比较少了。
用法
window.open('do ...`,l:"blogs/informal-essay/download.html#_3、open-location-href✨",a:"_3、open-location-href✨"},"2.7":{t:"4、form表单✨✨",p:`应该是最传统的文件下载方式了吧，很多新特性都是在H5才出的，兼容性应该也是最好的。
实现方式也很简单，通过js动态创建for ...`,l:"blogs/informal-essay/download.html#_4、form表单✨✨",a:"_4、form表单✨✨"},"2.8":{t:"4、通过iframe下载✨✨✨",p:`iframe 下载文件跟 a 标签下载文件基本一致，同样不能下载浏览器可以浏览的文件。
说实话，iframe接触的比较少，如 ...`,l:"blogs/informal-essay/download.html#_4、通过iframe下载✨✨✨",a:"_4、通过iframe下载✨✨✨"},"2.9":{t:"结尾🔚",p:`本文主要是总结自己知道/用过的下载文件的方法，如果有什么不足或者错误之处，请大家及时指正🙏。

博客主要记录一些学习的文章 ...`,l:"blogs/informal-essay/download.html#结尾🔚",a:"结尾🔚"},"3.0":{t:"前言💁‍♂️",p:"相信大家或多或少都接触过拥有庞大 if else 的项目代码吧，多重嵌套的 if else 在维护的时候真的让人很恼火😡， ...",l:"blogs/informal-essay/if-else.html",a:"前言💁‍♂️"},"3.1":{t:"短路运算💻",p:`Javascript 的逻辑或 || 的短路运算有时候可以用来代替一些比较简单的 if else

逻辑或 || 的短路运算 ...`,l:"blogs/informal-essay/if-else.html#短路运算💻",a:"短路运算💻"},"3.2":{t:"三元运算符🎶",p:"三元运算符我觉得大家应该都很熟悉吧，很多时候简单的一些判断我们都可以使用三元运算符去替代 if else，这里只推荐 一层  ...",l:"blogs/informal-essay/if-else.html#三元运算符🎶",a:"三元运算符🎶"},"3.3":{t:"switch case🖥️",p:`上述的两种方式：短路运算跟三元运算虽然很好用，代码也很简洁，不过都只能用于简单的判断，遇到多重条件判断就不能使用了😭。
对 ...`,l:"blogs/informal-essay/if-else.html#switch-case🖥️",a:"switch-case🖥️"},"3.4":{t:"对象配置/策略模式📑",p:`对象配置看起来跟 策略模式 差不多，都是根据不同得参数使用不同得数据/算法/函数。😺
策略模式就是将一系列算法封装起来，并 ...`,l:"blogs/informal-essay/if-else.html#对象配置-策略模式📑",a:"对象配置-策略模式📑"},"3.5":{t:"案例1 商场促销价🙋",p:`根据不同的用户使用不同的折扣，如：普通用户不打折，普通会员用户9折，年费会员8.5折，超级会员8折。
使用if else实现 ...`,l:"blogs/informal-essay/if-else.html#案例1-商场促销价🙋",a:"案例1-商场促销价🙋"},"3.6":{t:"案例2 年终奖🏆",p:"公司的年终奖根据员工的工资基数和绩效等级来发放的。例如，绩效为A的人年终奖有4倍工资，绩效为B的有3倍，绩效为C的只有2倍。 ...",l:"blogs/informal-essay/if-else.html#案例2-年终奖🏆",a:"案例2-年终奖🏆"},"3.7":{t:"结尾🔚",p:`本文主要是向大家传递一种思想，我们有很多的方法去优化我们的代码，提高我们代码的可读性。
对if else并没有歧视的意思，只 ...`,l:"blogs/informal-essay/if-else.html#结尾🔚",a:"结尾🔚"},"4.0":{t:"前言",p:"iframe 想必大家都挺熟悉的了，就不多说了👍👍。写这篇文章的初衷主要是丰富自己的知识和解决遇到的问题。因为我基本上没 ...",l:"blogs/informal-essay/iframe.html",a:"前言"},"4.1":{t:"iframe通信的几种方式😶‍🌫️😶‍🌫️",p:`
URL 传参：父窗口可以通过在 iframe 的 src 属性后添加参数来向子窗口传递数据，子窗口可以通过 locatio ...`,l:"blogs/informal-essay/iframe.html#iframe通信的几种方式😶‍🌫️😶‍🌫️",a:"iframe通信的几种方式😶‍🌫️😶‍🌫️"},"5.0":{t:"# javascript",p:"",l:"blogs/informal-essay/index.html",a:"javascript"},"5.1":{t:"目录",p:`
关于前端下载的一些问题
减少if-else，提高代码可读性
iframe之间的通信
九宫格抽奖的简单实现
正则表达式的一些 ...`,l:"blogs/informal-essay/index.html#目录",a:"目录"},"6.0":{t:"前言",p:`对象说晚饭吃什么太难选择，问我能不能做一个九宫格抽奖来决定我们晚上吃什么，emmm😿。
既然对象都开口了，不做也不行啊，最 ...`,l:"blogs/informal-essay/luckyDraw9.html",a:"前言"},"6.1":{t:"前期构思",p:"首先是布局，这个比较简单，用弹性布局（flex）就足够了，抽奖盒子固定宽高，奖品项为盒子的1/3，超过换行就行，转动方向是这 ...",l:"blogs/informal-essay/luckyDraw9.html#前期构思",a:"前期构思"},"6.2":{t:"具体实现",p:"",l:"blogs/informal-essay/luckyDraw9.html#具体实现",a:"具体实现"},"6.3":{t:"1、布局📈",p:"布局采用弹性布局，利用 vue 的 v-for 动态生成九个 item ，select 样式是用来控制转动的时候当前选中的  ...",l:"blogs/informal-essay/luckyDraw9.html#_1、布局📈",a:"_1、布局📈"},"6.4":{t:"2、指定奖品🏆",p:`为每一个 item 添加单机事件 appoint(index)，传入参数为当前的索引值。

做成点击事件指定奖品主要是为了不 ...`,l:"blogs/informal-essay/luckyDraw9.html#_2、指定奖品🏆",a:"_2、指定奖品🏆"},"6.5":{t:"3、抽奖😳",p:`抽奖的具体实现：

利用定时器 setTimeout 控制转动速度speed
转动速度（speed）的规则为，通过圈数跟中奖 ...`,l:"blogs/informal-essay/luckyDraw9.html#_3、抽奖😳",a:"_3、抽奖😳"},"6.6":{t:"最终效果",p:`代码片段

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/informal-essay/luckyDraw9.html#最终效果",a:"最终效果"},"7.0":{t:" 1、什么是正则表达式",p:`正则表达式就是专门规定一个字符串中字符出现的规律的一套规则。
`,l:"blogs/informal-essay/regularExpression.html",a:"_1、什么是正则表达式"},"7.1":{t:"2、创建正则表达式的2种方法",p:`1.标准写法：使用new关键字创建 --- var 变量 = new RegExp('正则表达式', 'ig');
2.简写 ...`,l:"blogs/informal-essay/regularExpression.html#_2、创建正则表达式的2种方法",a:"_2、创建正则表达式的2种方法"},"7.2":{t:"3、正则表达式的基本语法",p:`


字符
描述




' \\ '
转义特殊字符


' ^ '
匹配字符串的开头


' $ '
匹配字符串的结尾


 ...`,l:"blogs/informal-essay/regularExpression.html#_3、正则表达式的基本语法",a:"_3、正则表达式的基本语法"},"7.3":{t:"4、何时使用正则表达式",p:"",l:"blogs/informal-essay/regularExpression.html#_4、何时使用正则表达式",a:"_4、何时使用正则表达式"},"7.4":{t:"1.验证字符串格式 --- 手机号验证、邮箱验证等。",p:"",l:"blogs/informal-essay/regularExpression.html#_1-验证字符串格式-手机号验证、邮箱验证等。",a:"_1-验证字符串格式-手机号验证、邮箱验证等。"},"7.5":{t:"2.查找敏感词 --- 弹幕敏感词等。",p:"",l:"blogs/informal-essay/regularExpression.html#_2-查找敏感词-弹幕敏感词等。",a:"_2-查找敏感词-弹幕敏感词等。"},"7.6":{t:"2.1 验证字符串",p:`
以下用reg表示正则表达式

`,l:"blogs/informal-essay/regularExpression.html#_2-1-验证字符串",a:"_2-1-验证字符串"},"7.7":{t:"2.1.1 res.test('字符串'); ",p:`（1）只要字符串格式满足正则表达式的规则就会返回true，否则返回false。
（2）缺点：只要字符串中含有符合规则的内容， ...`,l:"blogs/informal-essay/regularExpression.html#_2-1-1-res-test-字符串",a:"_2-1-1-res-test-字符串"},"7.8":{t:"2.2 查找敏感词",p:`
以下reg表示正则表达式

`,l:"blogs/informal-essay/regularExpression.html#_2-2-查找敏感词",a:"_2-2-查找敏感词"},"7.9":{t:"2.2.1 reg.search('敏感词');",p:`查找模式匹配,只要找到第一个匹配然后返回，如果字符串没有匹配，则返回null。
`,l:"blogs/informal-essay/regularExpression.html#_2-2-1-reg-search-敏感词",a:"_2-2-1-reg-search-敏感词"},"7.10":{t:"2.2.2 reg.match('敏感词')",p:`缺点：只能获得敏感词的内容，不能获得敏感词的位置。
`,l:"blogs/informal-essay/regularExpression.html#_2-2-2-reg-match-敏感词",a:"_2-2-2-reg-match-敏感词"},"7.11":{t:"2.2.3 reg.exec('字符串');",p:`缺点：如果只调用一次exec()函数，即使正则表达式后加了' g '，也只会获得第一个敏感词的内容和位置。
解决：如果想要获 ...`,l:"blogs/informal-essay/regularExpression.html#_2-2-3-reg-exec-字符串",a:"_2-2-3-reg-exec-字符串"},"7.12":{t:"2.2.4 reg.findall('敏感词');",p:`遍历匹配，可以获取字符串中所有匹配的字符串，返回一个列表。
`,l:"blogs/informal-essay/regularExpression.html#_2-2-4-reg-findall-敏感词",a:"_2-2-4-reg-findall-敏感词"},"7.13":{t:"2.3 零宽断言",p:`给指定位置添加一个限定条件，用来规定此位置之前或之后的字符必须满足限定条件才可以使正则表达式匹配成功。
// 示例1：数字三 ...`,l:"blogs/informal-essay/regularExpression.html#_2-3-零宽断言",a:"_2-3-零宽断言"},"7.14":{t:"总结",p:`
创建正则表达式有两种方法：new关键字创建跟字面量方法
验证字符串的方法是test()
查找字符串的方法有多个：searc ...`,l:"blogs/informal-essay/regularExpression.html#总结",a:"总结"},"8.0":{t:"1.window.setTimeout",p:`**setTimeout()**方法设置一个定时器，该定时器在定时器到期后执行一个函数或指定的一段代码。
`,l:"blogs/informal-essay/timer.html",a:"_1-window-settimeout"},"8.1":{t:"语法",p:"var timeoutID = setTimeout(function[, delay, arg1, arg2, ...]) ...",l:"blogs/informal-essay/timer.html#语法",a:"语法"},"8.2":{t:"参数",p:`

function
function是你想要在到期时间(delay毫秒)之后执行的函数。


code
这是一个可选语法， ...`,l:"blogs/informal-essay/timer.html#参数",a:"参数"},"8.3":{t:"返回值",p:`返回值timeoutID是一个正整数，表示定时器的编号。这个值可以传递给clearTimeout()来取消该定时器。
需要注 ...`,l:"blogs/informal-essay/timer.html#返回值",a:"返回值"},"8.4":{t:"2.window.setInterval",p:`setInterval() 方法重复调用一个函数或执行一个代码段，在每次调用之间具有固定的时间延迟。
**setInterv ...`,l:"blogs/informal-essay/timer.html#_2-window-setinterval",a:"_2-window-setinterval"},"8.5":{t:"语法",p:`var intervalID = setInterval(func, delay, [arg1, arg2, ...]);
 ...`,l:"blogs/informal-essay/timer.html#语法",a:"语法"},"8.6":{t:"参数",p:`

func
要重复调用的函数。 每经过指定 延迟 毫秒后执行的函数 。


code
这个语法是可选的，你可以传递一个字符 ...`,l:"blogs/informal-essay/timer.html#参数",a:"参数"},"8.7":{t:"返回值",p:"此返回值intervalID是一个非零数值，用来标识通过setInterval()创建的计时器，这个值可以用来作为clear ...",l:"blogs/informal-essay/timer.html#返回值",a:"返回值"},"8.8":{t:"3.实际延时比设定值更久的原因：",p:"",l:"blogs/informal-essay/timer.html#_3-实际延时比设定值更久的原因",a:"_3-实际延时比设定值更久的原因"},"8.9":{t:"最小延迟时间",p:"在浏览器中，setTimeout()/``setInterval()的每调用一次定时器的最小间隔是4ms，这通常是由于函数嵌 ...",l:"blogs/informal-essay/timer.html#最小延迟时间",a:"最小延迟时间"},"8.10":{t:"超时延迟",p:"除了&quot;最小延时&quot;之外，定时器仍然有可能因为当前页面（或者操作系统/浏览器本身）被其他任务占用导致延时。  ...",l:"blogs/informal-essay/timer.html#超时延迟",a:"超时延迟"},"8.11":{t:"最大延时值",p:"包括 IE, Chrome, Safari, Firefox 在内的浏览器其内部以32位带符号整数存储延时。这就会导致如果一 ...",l:"blogs/informal-essay/timer.html#最大延时值",a:"最大延时值"},"8.12":{t:"4.定时器的可靠性",p:"虽说定时器在大部分的情况下都是趋于稳定的，但是定时器在使用的时候也存在着一些误差，可以使用下列代码多测试几次，就会发现，每次 ...",l:"blogs/informal-essay/timer.html#_4-定时器的可靠性",a:"_4-定时器的可靠性"},"8.13":{t:"5.遇到的关于无法清除定时器的问题",p:"",l:"blogs/informal-essay/timer.html#_5-遇到的关于无法清除定时器的问题",a:"_5-遇到的关于无法清除定时器的问题"},"8.14":{t:"错误示范：",p:`// 定义时间
let time = 11
// 定义一个函数，实现倒计时功能
function countDown(){
 ...`,l:"blogs/informal-essay/timer.html#错误示范",a:"错误示范"},"8.15":{t:"改变过后的正确示范：",p:`// 定义时间
let time = 11
// 定义一个函数，实现倒计时功能
function countDown(){
 ...`,l:"blogs/informal-essay/timer.html#改变过后的正确示范",a:"改变过后的正确示范"},"8.16":{t:"参考链接",p:`js的执行机制
事件循环
MDN定时器

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/informal-essay/timer.html#参考链接",a:"参考链接"},"9.0":{t:"前言",p:`前几天在项目中遇到一个以前都没有接触过的问题，觉得很有意思记录一下
场景是这样的
我们项目中有一个语音上传（用的elment ...`,l:"blogs/javascript/base64ToFormData.html",a:"前言"},"9.1":{t:"实现",p:`
/*base64文件流*/
const base64String

// 处理base64文件流
function(bas ...`,l:"blogs/javascript/base64ToFormData.html#实现",a:"实现"},"10.0":{t:"前言",p:"怎么突然提到 canvas 呢❓其实是因为工作中有一个小需求，就是给特定的区域做水印😤，思来想去😎就选择使用 canva ...",l:"blogs/javascript/canvas.html",a:"前言"},"10.1":{t:"1、canvas 简介",p:"canvas 即画布的意思，是 HTML5 新增的元素🆕，主要用来绘制图形。它可以用来制作照片集或者制作简单(也不是那么简 ...",l:"blogs/javascript/canvas.html#_1、canvas-简介",a:"_1、canvas-简介"},"10.2":{t:"2、canvas的基本使用",p:"&lt;canvas id=&quot;canvas&quot; width=&quot;300&quot; height= ...",l:"blogs/javascript/canvas.html#_2、canvas的基本使用",a:"_2、canvas的基本使用"},"10.3":{t:"兼容性",p:"可以看得出来，现在流行的浏览器基本都支持 canvas 标签，只有 IE9 （IE应该没有人在用了吧🤢）之下的浏览器不支持 ...",l:"blogs/javascript/canvas.html#兼容性",a:"兼容性"},"10.4":{t:"使用canvas画一个简单的矩形",p:"&lt;canvas&gt; 会创建一个固定大小的画布，同时会公开一个或多个画笔(渲染上下文)，使用画笔来绘制和处理要展示的 ...",l:"blogs/javascript/canvas.html#使用canvas画一个简单的矩形",a:"使用canvas画一个简单的矩形"},"10.5":{t:"3、绘制路径（path）",p:`&lt;canvas&gt; 只支持一种原生的图形绘制：矩形。所有其他图形都至少需要生成一种路径 (path)🙀。

图形 ...`,l:"blogs/javascript/canvas.html#_3、绘制路径-path",a:"_3、绘制路径-path"},"10.6":{t:"4、绘制圆弧",p:`有两个方法可以绘制圆弧：
1、arc(x, y, r, startAngle, endAngle, anticlockwis ...`,l:"blogs/javascript/canvas.html#_4、绘制圆弧",a:"_4、绘制圆弧"},"10.7":{t:"5、线条",p:`线条有4个属性😲：
`,l:"blogs/javascript/canvas.html#_5、线条",a:"_5、线条"},"10.8":{t:"1、lineWidth（线宽）🤷‍♂️",p:`只能是正值，默认是 1.0。起始点和终点的连线为中心，上下各占线宽的一半。
let canvas = document.ge ...`,l:"blogs/javascript/canvas.html#_1、linewidth-线宽-🤷‍♂️",a:"_1、linewidth-线宽-🤷‍♂️"},"10.9":{t:"2、lineCap（线条末端样式）🤖",p:`
butt：线段末端以方形结束
round：线段末端以圆形结束
square：线段末端以方形结束，但是增加了一个宽度和线段相 ...`,l:"blogs/javascript/canvas.html#_2、linecap-线条末端样式-🤖",a:"_2、linecap-线条末端样式-🤖"},"10.10":{t:"3、lineJoin（线条与线条间接合处的样式）📚",p:`
round 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。
bevel 在相连部 ...`,l:"blogs/javascript/canvas.html#_3、linejoin-线条与线条间接合处的样式-📚",a:"_3、linejoin-线条与线条间接合处的样式-📚"},"10.11":{t:"4、虚线🫥",p:`用 setLineDash 方法和 lineDashOffset 属性来制定虚线样式。

setLineDash 方法接受一 ...`,l:"blogs/javascript/canvas.html#_4、虚线🫥",a:"_4、虚线🫥"},"10.12":{t:"6、文本绘制",p:`我为了做个水印学了这么多东西！！！🙀🙀
绘制文本的两种方法

fillText(text, x, y [, maxWid ...`,l:"blogs/javascript/canvas.html#_6、文本绘制",a:"_6、文本绘制"},"10.13":{t:"7、图片绘制📌",p:`其实这个我是不喜欢学的，但是想了下以后自己可以画一些😳...
绘制图片使用的是 drawImage() 方法，这个方法有九 ...`,l:"blogs/javascript/canvas.html#_7、图片绘制📌",a:"_7、图片绘制📌"},"10.14":{t:"8、状态",p:`Canvas 的状态就是当前画面应用的所有样式和变形的一个快照📷。
save 和 restore 方法是用来保存和恢复 c ...`,l:"blogs/javascript/canvas.html#_8、状态",a:"_8、状态"},"10.15":{t:"9、变形",p:"",l:"blogs/javascript/canvas.html#_9、变形",a:"_9、变形"},"10.16":{t:"9.1、translate",p:`用来移动 canvas 的原点到指定的位置。
translate(x, y)：接受两个参数。x 是左右偏移量，y 是上下偏移 ...`,l:"blogs/javascript/canvas.html#_9-1、translate",a:"_9-1、translate"},"10.17":{t:"9.2、rotate",p:`旋转坐标轴。
rotate(angle)：只接受一个参数：旋转的角度(angle)，它是顺时针方向的，以弧度为单位的值。

 ...`,l:"blogs/javascript/canvas.html#_9-2、rotate",a:"_9-2、rotate"},"10.18":{t:"9.3、scale",p:`增减图形在 canvas 中的像素数目，对形状，位图进行缩小或者放大。
scale(x, y)：x,y 分别是横轴和纵轴的缩 ...`,l:"blogs/javascript/canvas.html#_9-3、scale",a:"_9-3、scale"},"10.19":{t:"9.4、transform (变形矩阵)",p:"",l:"blogs/javascript/canvas.html#_9-4、transform-变形矩阵",a:"_9-4、transform-变形矩阵"},"10.20":{t:"`transform(a, b, c, d, e, f)`😳",p:`这个方法是将当前的变形矩阵乘上一个基于自身参数的矩阵，如下面的矩阵所示：
!image.png
如果任意一个参数是 Infi ...`,l:"blogs/javascript/canvas.html#transform-a-b-c-d-e-f-😳",a:"transform-a-b-c-d-e-f-😳"},"10.21":{t:"`setTransform(a, b, c, d, e, f)`😮",p:"这个方法会将当前的变形矩阵重置为单位矩阵，然后用相同的参数调用 transform方法。如果任意一个参数是无限大，那么变形矩 ...",l:"blogs/javascript/canvas.html#settransform-a-b-c-d-e-f-😮",a:"settransform-a-b-c-d-e-f-😮"},"10.22":{t:"`resetTransform()`🔃",p:`重置当前变形为单位矩阵，它和调用以下语句是一样的：ctx.setTransform(1, 0, 0, 1, 0, 0);
一 ...`,l:"blogs/javascript/canvas.html#resettransform-🔃",a:"resettransform-🔃"},"10.23":{t:"10、组合与裁剪",p:"",l:"blogs/javascript/canvas.html#_10、组合与裁剪",a:"_10、组合与裁剪"},"10.24":{t:"10.1、组合",p:"globalCompositeOperation = type 这个属性设定了在画新图形时采用的遮盖策略，其值是一个标识 1 ...",l:"blogs/javascript/canvas.html#_10-1、组合",a:"_10-1、组合"},"10.25":{t:"10.2、裁切路径",p:`裁切路径和普通的 canvas 图形差不多，不同的是它的作用是遮罩，用来隐藏不需要的部分。
clip() 将当前正在构建的路 ...`,l:"blogs/javascript/canvas.html#_10-2、裁切路径",a:"_10-2、裁切路径"},"10.26":{t:"10、动画",p:"",l:"blogs/javascript/canvas.html#_10、动画",a:"_10、动画"},"10.27":{t:"10.1、动画的基本步骤：",p:`你可以通过以下的步骤来画出一帧：

清空 canvas 除非接下来要画的内容会完全充满 canvas（例如背景图），否则你需 ...`,l:"blogs/javascript/canvas.html#_10-1、动画的基本步骤",a:"_10-1、动画的基本步骤"},"10.28":{t:"10.2、控制动画🦍",p:"在 canvas 上绘制内容是用 canvas 提供的或者自定义的方法，而通常，我们仅仅在脚本执行结束后才能看见结果，比如说 ...",l:"blogs/javascript/canvas.html#_10-2、控制动画🦍",a:"_10-2、控制动画🦍"},"10.29":{t:"参考",p:`MDN：canvas教程

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/javascript/canvas.html#参考",a:"参考"},"11.0":{t:"1、什么是EventLoop？",p:`
EvnetLoop是js的运行机制，也就是事件循环，我个人的理解就是为了使单线程的js在执行的时候不发生阻塞。
Event ...`,l:"blogs/javascript/event-loop.html",a:"_1、什么是eventloop"},"11.1":{t:"2、学习EventLoop前需要知道的一些知识",p:`

同步任务：在主线程上排队执行的任务。只有前一个任务执行完毕，才能执行后一个任务。


异步任务：不进入主线程、而进入任务 ...`,l:"blogs/javascript/event-loop.html#_2、学习eventloop前需要知道的一些知识",a:"_2、学习eventloop前需要知道的一些知识"},"11.2":{t:"3、EventLoop（事件循环）执行过程",p:`!image.png

具体过程可以理解为：



1、主线程执行全局同步代码，该过程可能产生一系列异步任务，这些异步任务分 ...`,l:"blogs/javascript/event-loop.html#_3、eventloop-事件循环-执行过程",a:"_3、eventloop-事件循环-执行过程"},"11.3":{t:"4、概念性的东西都说完了，做几个题目校验一下学习成果",p:"",l:"blogs/javascript/event-loop.html#_4、概念性的东西都说完了-做几个题目校验一下学习成果",a:"_4、概念性的东西都说完了-做几个题目校验一下学习成果"},"11.4":{t:"第一题",p:`console.log('javaScript start')

setTimeout(() =&gt; {
    con ...`,l:"blogs/javascript/event-loop.html#第一题",a:"第一题"},"11.5":{t:"第二题",p:`console.log('javaScript start')

async function fn1() {
    co ...`,l:"blogs/javascript/event-loop.html#第二题",a:"第二题"},"11.6":{t:"参考链接",p:`带你彻底弄懂EventLoop
看完一定懂的 Event Loop

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢 ...`,l:"blogs/javascript/event-loop.html#参考链接",a:"参考链接"},"12.0":{t:"1、手写instanceof",p:`
instanceof主要判断一个实例是否属于某种类型；
实现原理就是只要右边类型的prototype在左边实例的原型链上即 ...`,l:"blogs/javascript/handwrittenCode.html",a:"_1、手写instanceof"},"12.1":{t:"2、手写new关键词",p:`使用new关键词执行构造函数，主要过程为：

1、创建一个新对象；
2、将第一步的空对象链接到另一个对象（new操作符后面跟 ...`,l:"blogs/javascript/handwrittenCode.html#_2、手写new关键词",a:"_2、手写new关键词"},"12.2":{t:"3、手写call",p:`
改变函数的this指向
第一个参数为this要指向的对象，如果没有或者参数为undefined/null则默认指向wind ...`,l:"blogs/javascript/handwrittenCode.html#_3、手写call",a:"_3、手写call"},"12.3":{t:"4、手写apply",p:`
跟call基本是一样的，只是call的剩余参数是参数列表（call的参数需要一个一个在后面列举出来），而apply的第二个 ...`,l:"blogs/javascript/handwrittenCode.html#_4、手写apply",a:"_4、手写apply"},"12.4":{t:"5、手写bind",p:`
bind函数也改变this的指向
传入的函数不会立即执行，而是返回一个永久改变this指向的函数
参数传递跟call一样使 ...`,l:"blogs/javascript/handwrittenCode.html#_5、手写bind",a:"_5、手写bind"},"12.5":{t:"6、防抖",p:`
在事件触发的一段时间后执行该事件，如果这期间再次触发事件，则重新计时

function debounce(fn, del ...`,l:"blogs/javascript/handwrittenCode.html#_6、防抖",a:"_6、防抖"},"12.6":{t:"7、节流",p:`
事件在一定时间内只能触发一次

function throttle(fn, delay) {

    // 保存time ...`,l:"blogs/javascript/handwrittenCode.html#_7、节流",a:"_7、节流"},"12.7":{t:"8、深克隆",p:`

创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改到原对象；


使用JSON.stringify和JS ...`,l:"blogs/javascript/handwrittenCode.html#_8、深克隆",a:"_8、深克隆"},"12.8":{t:"9、手写promise",p:`

promise的出现是为了解决回调地狱、是一种异步编程的解决方案。


promise有三种状态:pending(等待态 ...`,l:"blogs/javascript/handwrittenCode.html#_9、手写promise",a:"_9、手写promise"},"12.9":{t:"10、发布订阅",p:`一种对象间一对多的依赖关系，当一个对象的状态发送改变时，所有依赖于它的对象都将得到状态改变的通知。
// 调度中心
clas ...`,l:"blogs/javascript/handwrittenCode.html#_10、发布订阅",a:"_10、发布订阅"},"13.0":{t:"# javascript",p:"",l:"blogs/javascript/index.html",a:"javascript"},"13.1":{t:"目录",p:`
上传文件base64流转formData
canvas基础
Event-Loop 一些手写的源码解析
观察者模式跟发布订阅 ...`,l:"blogs/javascript/index.html#目录",a:"目录"},"14.0":{t:"设计模式的概念",p:"",l:"blogs/javascript/observer-mode.html",a:"设计模式的概念"},"14.1":{t:"1、什么是设计模式",p:`
设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是 ...`,l:"blogs/javascript/observer-mode.html#_1、什么是设计模式",a:"_1、什么是设计模式"},"14.2":{t:"2、设计模式的原则",p:`

S – Single Responsibility Principle 单一职责原则

一个程序只做好一件事
如果功能过 ...`,l:"blogs/javascript/observer-mode.html#_2、设计模式的原则",a:"_2、设计模式的原则"},"14.3":{t:"观察者者模式",p:"",l:"blogs/javascript/observer-mode.html#观察者者模式",a:"观察者者模式"},"14.4":{t:"1、概念",p:`
发布-订阅模式其实是一种对象间一对多的依赖关系，当一个对象的状态发送改变时，所有依赖于它的对象都将得到状态改变的通知。

`,l:"blogs/javascript/observer-mode.html#_1、概念",a:"_1、概念"},"14.5":{t:"2、列子",p:`想必大家应该都经常会接触到这个模式，比如：

我们使用原生DOM事件绑定的时候

window.addEventListen ...`,l:"blogs/javascript/observer-mode.html#_2、列子",a:"_2、列子"},"14.6":{t:"3、自己实现一个简化版的evenetBus",p:`// 被观察者
class EventBus {
  constructor(topic) {
    this.topic ...`,l:"blogs/javascript/observer-mode.html#_3、自己实现一个简化版的evenetbus",a:"_3、自己实现一个简化版的evenetbus"},"14.7":{t:"发布-订阅模式",p:"",l:"blogs/javascript/observer-mode.html#发布-订阅模式",a:"发布-订阅模式"},"14.8":{t:"1、概念",p:`
相对于观察者模式，发布-订阅模式相对于观察者模式是面向调度中心编程的，他以调度中心为连接来管理发布者跟订阅者，发布者跟订阅 ...`,l:"blogs/javascript/observer-mode.html#_1、概念",a:"_1、概念"},"14.9":{t:"2、列子",p:`
Vue 响应式原理

class Dep {
  constructor() {
    // 观察者列表
    thi ...`,l:"blogs/javascript/observer-mode.html#_2、列子",a:"_2、列子"},"14.10":{t:"3、改写EventBus简化版，添加调度中心后",p:`// 调度中心
class PubSub {
  constructor() {
    this.subscribers  ...`,l:"blogs/javascript/observer-mode.html#_3、改写eventbus简化版-添加调度中心后",a:"_3、改写eventbus简化版-添加调度中心后"},"14.11":{t:"总结",p:`
观察者模式跟发布订阅者模式，都是为了实现一对多的依赖关系，都是为了实现一个状态的改变触发回调函数进行通知。
发布订阅者模式 ...`,l:"blogs/javascript/observer-mode.html#总结",a:"总结"},"14.12":{t:"参考资料",p:`
JavaScript设计模式与开发实践
设计模式


博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/javascript/observer-mode.html#参考资料",a:"参考资料"},"15.0":{t:"1、单例模式（Singleton Pattern）",p:`

又称为单体模式，顾名思义一个类只能存在一个实例。


当第二次用相同的类创建实例的时候，得到的应该跟第一次创建的类一模一 ...`,l:"blogs/javascript/observer-mode1.html",a:"_1、单例模式-singleton-pattern"},"15.1":{t:"1.1、列子",p:`

在项目中的全局loading其实就是单例模式，永远只会存在一个loading效果，而不会重复出现；


浏览器的wind ...`,l:"blogs/javascript/observer-mode1.html#_1-1、列子",a:"_1-1、列子"},"15.2":{t:"1.2、实现",p:`
普通单例模式实现

const SingleCase = (function() {

    // 存储单例
    l ...`,l:"blogs/javascript/observer-mode1.html#_1-2、实现",a:"_1-2、实现"},"15.3":{t:"2、工厂模式（Factory Pattern）",p:`
根据不同的输入值，返回不同的类；
分离对象的实现与对象的创建；

`,l:"blogs/javascript/observer-mode1.html#_2、工厂模式-factory-pattern",a:"_2、工厂模式-factory-pattern"},"15.4":{t:"2.1、列子",p:`
使用document.createElement创建DOM元素，就是使用工厂模式的思想实现的
vue-router的几种模 ...`,l:"blogs/javascript/observer-mode1.html#_2-1、列子",a:"_2-1、列子"},"15.5":{t:"2.2、实现",p:`class FactoryMode {

    constructor(type) {
        // 返回实例
  ...`,l:"blogs/javascript/observer-mode1.html#_2-2、实现",a:"_2-2、实现"},"15.6":{t:"3、建造者模式（Builder Pattern）",p:`

又称生成器模式，分步创建一个对象，允许按步骤构造一个复杂对象


构建过程可以采用不同的表示，将一个复杂对象的构造层与表 ...`,l:"blogs/javascript/observer-mode1.html#_3、建造者模式-builder-pattern",a:"_3、建造者模式-builder-pattern"},"15.7":{t:"3.1、例子",p:`
电脑工厂、汽车工厂类似与这种由多个部件组成的，各个部件由代理商或者外包给其它人员进行生产，最后自己来装配形成完整的产品，在 ...`,l:"blogs/javascript/observer-mode1.html#_3-1、例子",a:"_3-1、例子"},"15.8":{t:"3.2、实现",p:`
创建一个学生的对象，包含姓名、年龄、地址等信息，允许按步骤构造这个对象

// 建造者
class CarBuilder  ...`,l:"blogs/javascript/observer-mode1.html#_3-2、实现",a:"_3-2、实现"},"15.9":{t:"4、代理模式（Proxy Pattern）",p:`
又称委托模式，为目标对象创建一个访问对象，从而控制对象的访问

`,l:"blogs/javascript/observer-mode1.html#_4、代理模式-proxy-pattern",a:"_4、代理模式-proxy-pattern"},"15.10":{t:"4.1、列子",p:`

HTTP 相关的拦截器、vue-router、react-router路由跳转的拦截器


前端框架的数据响应式


`,l:"blogs/javascript/observer-mode1.html#_4-1、列子",a:"_4-1、列子"},"15.11":{t:"4.2、实现",p:`
一个房东有多套房子，他一个人想要租出去花费的时间跟精力会很大，于是他找了中介帮他把房子租出去，这个中介就相当于房东的代理
 ...`,l:"blogs/javascript/observer-mode1.html#_4-2、实现",a:"_4-2、实现"},"15.12":{t:"5、享元模式（Flyweight Pattern）",p:`

运用共享技术来有效地支持大量细粒度对象的复用，以减少创建的对象的数量；


如果系统中存在多个相同的对象，那么只需共享一 ...`,l:"blogs/javascript/observer-mode1.html#_5、享元模式-flyweight-pattern",a:"_5、享元模式-flyweight-pattern"},"15.13":{t:"5.1、列子",p:`

线程池、连接池


高考考场、驾校驾考车等，资源可以共享、共同使用的



优点：

减少了系统中的对象数量，提高了程序 ...`,l:"blogs/javascript/observer-mode1.html#_5-1、列子",a:"_5-1、列子"},"15.14":{t:"参考资料",p:`
JavaScript设计模式与开发实践
设计模式


博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/javascript/observer-mode1.html#参考资料",a:"参考资料"},"16.0":{t:"前言",p:`

学习promise原理以及自己实现一个promise的目的主要是为了更好的使用promise（ps：我是不会承认主要目的 ...`,l:"blogs/javascript/promise.html",a:"前言"},"16.1":{t:"1、实现promise对象(resolve， reject)",p:"promise是一个对象，对象里面有一系列变量跟方法，列如：状态（PromiseState）、执行后的值（PromiseRe ...",l:"blogs/javascript/promise.html#_1、实现promise对象-resolve-reject",a:"_1、实现promise对象-resolve-reject"},"16.2":{t:"2、如果使用过程中有throw怎么办",p:"如果在Promise中出现了throw的话，那就相当于执行了rejecte，这样我们就需要用到try-catch在执行回调的 ...",l:"blogs/javascript/promise.html#_2、如果使用过程中有throw怎么办",a:"_2、如果使用过程中有throw怎么办"},"16.3":{t:"3、实现then方法",p:`

then方法接受两个可选的参数，这两个参数必须是函数，两个参数分别代表两个回调函数：成功的回调跟失败的回调


当Pro ...`,l:"blogs/javascript/promise.html#_3、实现then方法",a:"_3、实现then方法"},"16.4":{t:"4、完整的代码",p:`class MyPromise {
  constructor(executor) {
    // 捕获执行器的代码错误
 ...`,l:"blogs/javascript/promise.html#_4、完整的代码",a:"_4、完整的代码"},"16.5":{t:"5、通过Promises/A+规范测试我们手写的promise",p:`
Promise是有多种规范的，除了 Promise A、promise A+ 还有 Promise/B，Promise/D ...`,l:"blogs/javascript/promise.html#_5、通过promises-a-规范测试我们手写的promise",a:"_5、通过promises-a-规范测试我们手写的promise"},"16.6":{t:"总结",p:`
promise的中文翻译是承诺，它就像它的名字一样，承诺它过一段时间会给你一个结果。
目前我们使用promise都是基于P ...`,l:"blogs/javascript/promise.html#总结",a:"总结"},"16.7":{t:"参考资料",p:`
Promises/A+规范
面试官：能说下promise实现异步的原理吗？


博客主要记录一些学习的文章，如有不足，望大 ...`,l:"blogs/javascript/promise.html#参考资料",a:"参考资料"},"17.0":{t:"1、什么是原型？",p:`
原型分为显式原型（prototype）和隐式原型（__proto__）；
显式原型（prototype）也称作构造函数的原 ...`,l:"blogs/javascript/prototype.html",a:"_1、什么是原型"},"17.1":{t:"2、函数与对象",p:"",l:"blogs/javascript/prototype.html#_2、函数与对象",a:"_2、函数与对象"},"17.2":{t:"1、函数",p:`
创建函数的两种方法：字面量跟new Function()，字面量方法的本质其实还是new Function()， 也就是说 ...`,l:"blogs/javascript/prototype.html#_1、函数",a:"_1、函数"},"17.3":{t:"2、对象",p:`
对象的创建方法：字面量、new Object、Object.create()、构造函数创建，跟函数一样，字面量方法的本质是 ...`,l:"blogs/javascript/prototype.html#_2、对象",a:"_2、对象"},"17.4":{t:"3、什么是原型链？",p:`
通俗的说原型链就是多个__proto__相连形成的一个有层级的 ' 依赖关系 ' ；
构造函数的原型对象（prototyp ...`,l:"blogs/javascript/prototype.html#_3、什么是原型链",a:"_3、什么是原型链"},"17.5":{t:"4、原型继承",p:`
实例可以使用来自构造函数的属性与方法，也就是继承了构造函数的属性与方法；
实例本身没有这个属性或者方法，那js会沿着原型链 ...`,l:"blogs/javascript/prototype.html#_4、原型继承",a:"_4、原型继承"},"17.6":{t:"5、原型相关的方法",p:"",l:"blogs/javascript/prototype.html#_5、原型相关的方法",a:"_5、原型相关的方法"},"17.7":{t:"1. Object.prtotype.isPrototype()方法",p:`判断一个对象是否是另外一个对象的原型，但是需要注意只要某个对象存在原型链上，就会返回true
function Person ...`,l:"blogs/javascript/prototype.html#_1-object-prtotype-isprototype-方法",a:"_1-object-prtotype-isprototype-方法"},"17.8":{t:"2. Object.setPrototypeOf()方法",p:`该方法接收两个参数，第一个是现有对象，第二个是新设置的原型对象，为现有对象设置原型，返回一个新对象。
var a = {x: ...`,l:"blogs/javascript/prototype.html#_2-object-setprototypeof-方法",a:"_2-object-setprototypeof-方法"},"17.9":{t:"3. instanceof方法",p:`判断一个对象是否在另一个对象的原型链上
function Person() {}
const person1 = new P ...`,l:"blogs/javascript/prototype.html#_3-instanceof方法",a:"_3-instanceof方法"},"18.0":{t:"1、什么是作用域？",p:`

作用域就是代码执行的环境，在程序运行时代码中的某些特定部分中变量、函数和对象的可访问性。


作用域分为全局作用域跟函数 ...`,l:"blogs/javascript/scope.html",a:"_1、什么是作用域"},"18.1":{t:"1.1 全局作用域",p:`

在任何地方都能访问到的对象称之为全局作用域；


window对象下的所有属性和方法都有全局作用域；


最外层定义的变 ...`,l:"blogs/javascript/scope.html#_1-1-全局作用域",a:"_1-1-全局作用域"},"18.2":{t:"1.2 函数作用域",p:`

定义函数时的花括号{}为函数作用域；


在函数作用域定义的变量、方法，在函数作用域外部无法访问；


var a =  ...`,l:"blogs/javascript/scope.html#_1-2-函数作用域",a:"_1-2-函数作用域"},"18.3":{t:"1.3 块级作用域",p:`

在 {}中的内容就被认为块级作用域；


只有使用let声明的变量、方法才具备块级作用域；


if块、while块、f ...`,l:"blogs/javascript/scope.html#_1-3-块级作用域",a:"_1-3-块级作用域"},"18.4":{t:"2、作用域链",p:`

各个作用域访问变量和方法的顺序；


当我们使用一个变量时，js会顺着作用域链一层一层的像上查找，直到最顶层的全局作用域 ...`,l:"blogs/javascript/scope.html#_2、作用域链",a:"_2、作用域链"},"18.5":{t:"3、闭包",p:"一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围）， 这样的 ...",l:"blogs/javascript/scope.html#_3、闭包",a:"_3、闭包"},"18.6":{t:"4、垃圾回收机制",p:`

浏览器的 Javascript 具有自动垃圾回收机制(GC:Garbage Collecation)，也就是说，执行环境 ...`,l:"blogs/javascript/scope.html#_4、垃圾回收机制",a:"_4、垃圾回收机制"},"18.7":{t:"1、标记清除",p:`

js中最常用的垃圾回收方式就是标记清除。当变量进入环境时，例如，在函数中声明一个变量，就将这个变量标记为“进入环境”。从 ...`,l:"blogs/javascript/scope.html#_1、标记清除",a:"_1、标记清除"},"18.8":{t:"2、引用计数",p:`
引用计数的含义是跟踪记录每个值被引用的次数。当声明了一个变量并将一个引用类型值赋给该变量时，则这个值的引用次数就是1。如果 ...`,l:"blogs/javascript/scope.html#_2、引用计数",a:"_2、引用计数"},"18.9":{t:"参考资料",p:`JavaScript高级程序设计（第4版） (豆瓣) (douban.com)

博客主要记录一些学习的文章，如有不足，望大 ...`,l:"blogs/javascript/scope.html#参考资料",a:"参考资料"},"19.0":{t:"前言",p:`作为一个前端怎么能没有属于自己的博客呢，但是平常忙于工作中，难以抽出很多时间去搭建自己的博客。
不知道大家有没有听说过vue ...`,l:"blogs/javascript/vuepressDeploy.html",a:"前言"},"19.1":{t:"预览",p:`个人博客的搭建主要是vuepress + reco主题

个人博客预览地址
vuepress官方文档
reco主题文档

`,l:"blogs/javascript/vuepressDeploy.html#预览",a:"预览"},"19.2":{t:"初始化",p:`
创建项目文件夹blog，并进行初始化

npm init -y


安装Vuepress

npm install -D  ...`,l:"blogs/javascript/vuepressDeploy.html#初始化",a:"初始化"},"19.3":{t:"目录结构",p:`官方推荐的目录结构，大家可以按照这个结构去构建
.
├── docs
│   ├── .vuepress (可选的)
│   ...`,l:"blogs/javascript/vuepressDeploy.html#目录结构",a:"目录结构"},"19.4":{t:"首页",p:`复制下面内容至docs/README.md文件下，home标识是否开启首页，也可以给标题、副标题设置null来禁用。
--- ...`,l:"blogs/javascript/vuepressDeploy.html#首页",a:"首页"},"19.5":{t:"配置文件",p:`docs/.vuepress/config.js，配置主题的导航栏、侧边栏、搜索、logo... 
可以参考下列文件的配置
 ...`,l:"blogs/javascript/vuepressDeploy.html#配置文件",a:"配置文件"},"19.6":{t:"部署",p:`
新建一个git仓库blog（仓库需要是public，不然pages需要收费）
在仓库的setting中找到pages，开启 ...`,l:"blogs/javascript/vuepressDeploy.html#部署",a:"部署"},"20.0":{t:"引言📇",p:"HTTP缓存是一种用于提高网站性能和减少带宽使用的技术。当用户访问一个网页时，浏览器会下载页面上的所有资源（如HTML、CS ...",l:"blogs/node/cache.html",a:"引言📇"},"20.1":{t:"1、强缓存🛅",p:`由服务器设置过期时间，在该时间到期之前，浏览器会直接从本地缓存中获取资源。
强缓存的实现方式有两种：Expires和Cach ...`,l:"blogs/node/cache.html#_1、强缓存🛅",a:"_1、强缓存🛅"},"20.2":{t:"1.1、Expires❤️❤️🤍🤍🤍",p:"Expires 是 HTTP 缓存机制中实现强缓存的一种方式，它通过在响应头部中加入一个过期时间来控制缓存。Expires  ...",l:"blogs/node/cache.html#_1-1、expires❤️❤️🤍🤍🤍",a:"_1-1、expires❤️❤️🤍🤍🤍"},"20.3":{t:"1.2、Cache-Control❤️❤️❤️🤍🤍",p:"Cache-Control 是通过在响应头部中加入 Cache-Control 字段，并设置max-age值来表示该资源在多 ...",l:"blogs/node/cache.html#_1-2、cache-control❤️❤️❤️🤍🤍",a:"_1-2、cache-control❤️❤️❤️🤍🤍"},"20.4":{t:"2、协商缓存",p:`利用浏览器和服务器之间的通信来确定是否需要重新获取资源。
协商缓存有两种实现方式：If-Modified-Since 和 E ...`,l:"blogs/node/cache.html#_2、协商缓存",a:"_2、协商缓存"},"20.5":{t:"2.1、If-Modified-Since ❤️❤️❤️❤️🤍",p:"利用响应头的 Last-Modified 来设置缓存，并在下次请求的请求头中携带 If-Modified-Since 来判断 ...",l:"blogs/node/cache.html#_2-1、if-modified-since-❤️❤️❤️❤️🤍",a:"_2-1、if-modified-since-❤️❤️❤️❤️🤍"},"20.6":{t:"2、ETag ❤️❤️❤️❤️❤️",p:"ETag 基本上与 If-Modified-Since 一致， 利用响应头的 Etag 来设置缓存，并在下次请求的请求头中携 ...",l:"blogs/node/cache.html#_2、etag-❤️❤️❤️❤️❤️",a:"_2、etag-❤️❤️❤️❤️❤️"},"21.0":{t:"# typescript",p:"",l:"blogs/node/index.html",a:"typescript"},"21.1":{t:"目录",p:`
http缓存

`,l:"blogs/node/index.html#目录",a:"目录"},"22.0":{t:"# typescript",p:"",l:"blogs/typeScript/index.html",a:"typescript"},"22.1":{t:"目录",p:`
typeScript基础学习

`,l:"blogs/typeScript/index.html#目录",a:"目录"},"23.0":{t:"前言",p:"都2022年了😎，我才开始学习 TypeScript，也不知道还能不能跟上时代的脚步，看来是舒适的工作环境让我逐渐失去了前 ...",l:"blogs/typeScript/ts.html",a:"前言"},"23.1":{t:"一、Typescript 简介",p:"从官网的描述来看，TypeScript 是 JavaScript 的超集，也就是说TypeScript拥有 JavaScri ...",l:"blogs/typeScript/ts.html#一、typescript-简介",a:"一、typescript-简介"},"23.2":{t:"1、Typescript 值得学吗？",p:`我想很多人都跟我一样存在这样的疑问吧，下面我列举几个我们需要学习 TypeScript 的理由📚

更好的开发体验，可以清 ...`,l:"blogs/typeScript/ts.html#_1、typescript-值得学吗",a:"_1、typescript-值得学吗"},"23.3":{t:"2、获取 TypeScript",p:`命令行的 TypeScript 编译器可以使用 Node.js 包来安装。
1.安装 TypeScript
npm inst ...`,l:"blogs/typeScript/ts.html#_2、获取-typescript",a:"_2、获取-typescript"},"23.4":{t:"二、TypeScript 中的基础类型",p:"在 TypeScript 中，我们可以在声明一个变量之后设置我们想要添加的类型 :type 🤖(我们一般称之为“类型注释” ...",l:"blogs/typeScript/ts.html#二、typescript-中的基础类型",a:"二、typescript-中的基础类型"},"23.5":{t:"1、布尔值（boolean）",p:`let isBoolean: boolean = false

`,l:"blogs/typeScript/ts.html#_1、布尔值-boolean",a:"_1、布尔值-boolean"},"23.6":{t:"2、数字（number）",p:`除了支持十进制和十六进制字面量，TypeScript还支持ECMAScript 2015中引入的二进制和八进制字面量。
le ...`,l:"blogs/typeScript/ts.html#_2、数字-number",a:"_2、数字-number"},"23.7":{t:"3、字符串(string)",p:`跟JavaScript一样，可以使用双引号（ &quot;）或单引号（'）表示字符串，也可以使用 模板字符串 。
let n ...`,l:"blogs/typeScript/ts.html#_3、字符串-string",a:"_3、字符串-string"},"23.8":{t:"4、数组(Array)",p:`TypeScript定义数组类型有两种方式

在元素类型后面接上 []，表示由此类型元素组成的一个数组

let numAr ...`,l:"blogs/typeScript/ts.html#_4、数组-array",a:"_4、数组-array"},"23.9":{t:"5、元组 Tuple",p:"元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。也就是初始化的时候类型和大小以及确定的，如果后续赋值类型 ...",l:"blogs/typeScript/ts.html#_5、元组-tuple",a:"_5、元组-tuple"},"23.10":{t:"6、枚举类型(enum)",p:"它是一种可以将多个常量分组为一个并附加一系列值的类型，使用枚举定义的常量称为枚举器列表，默认情况下，枚举器从零开始按顺序编号 ...",l:"blogs/typeScript/ts.html#_6、枚举类型-enum",a:"_6、枚举类型-enum"},"23.11":{t:"7、Any类型",p:"any类型可以是任意的一种类型。在不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查就可以使用any类型进行标 ...",l:"blogs/typeScript/ts.html#_7、any类型",a:"_7、any类型"},"23.12":{t:"8、Void类型",p:`void类型表示没有任何类型。 通常当一个函数没有返回值时，它的返回值类型是 void：
function warnUser ...`,l:"blogs/typeScript/ts.html#_8、void类型",a:"_8、void类型"},"23.13":{t:"9、Null 和 Undefined",p:`TypeScript里，undefined和null两者各自有自己的类型分别叫做undefined和null。
let u: ...`,l:"blogs/typeScript/ts.html#_9、null-和-undefined",a:"_9、null-和-undefined"},"23.14":{t:"10、Never",p:"never类型表示的是那些永不存在的值的类型。 例如， never类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或 ...",l:"blogs/typeScript/ts.html#_10、never",a:"_10、never"},"23.15":{t:"三、类型断言",p:"有时候你会遇到这样的情况，你会比TypeScript更了解某个值的详细信息。 通常这会发生在你清楚地知道一个实体具有比它现有 ...",l:"blogs/typeScript/ts.html#三、类型断言",a:"三、类型断言"},"23.16":{t:"四、类型推断",p:`如果变量有默认值的话，一般我们也不需要显式声明类型，TypeScript  会自动推断变量的类型（类型推断）：
let id ...`,l:"blogs/typeScript/ts.html#四、类型推断",a:"四、类型推断"},"23.17":{t:"五、 联合类型",p:`我们还可以将变量设置为联合类型（联合类型是可以分配多个类型的变量）：
let age: string | number;
a ...`,l:"blogs/typeScript/ts.html#五、-联合类型",a:"五、-联合类型"},"23.18":{t:"六、交叉类型",p:`交叉类型是将多个类型合并为一个类型。 这让我们可以把现有的多种类型叠加到一起成为一种类型，它包含了所需的所有类型的特性。
i ...`,l:"blogs/typeScript/ts.html#六、交叉类型",a:"六、交叉类型"},"23.19":{t:"七、TypeScript 中的接口",p:`接口定义了对象的外观：
interface Person {
  name: string;
  age: number;
 ...`,l:"blogs/typeScript/ts.html#七、typescript-中的接口",a:"七、typescript-中的接口"},"23.20":{t:"八、TypeScript 中的函数",p:`我们可以定义函数参数和返回值的类型：
// 定义一个名为 add 的函数，它接受两个类型为 number 的变量，并返回一个 ...`,l:"blogs/typeScript/ts.html#八、typescript-中的函数",a:"八、typescript-中的函数"},"23.21":{t:"九、TypeScript 中的类",p:`跟 JavaScript 一样，我们可以使用 class 关键字创建对象，并且可以定义类中每条数据的类型。
class Pe ...`,l:"blogs/typeScript/ts.html#九、typescript-中的类",a:"九、typescript-中的类"},"23.22":{t:"1、类的 interface",p:`可以通过接口来规定一个类它必须包含某些属性和方法：
interface HasFormatter {
  format(): ...`,l:"blogs/typeScript/ts.html#_1、类的-interface",a:"_1、类的-interface"},"23.23":{t:"2、把类当做接口使用",p:`类定义会创建两个东西：类的实例类型和一个构造函数。
class Point { 
    x: number;
    y: ...`,l:"blogs/typeScript/ts.html#_2、把类当做接口使用",a:"_2、把类当做接口使用"},"23.24":{t:"十、泛型",p:`泛型指的是在定义函数/接口/类型时，不预先指定具体的类型，而是在使用的时候在指定类型限制的一种特性。
function id ...`,l:"blogs/typeScript/ts.html#十、泛型",a:"十、泛型"},"23.25":{t:"1、泛型接口",p:`当我们不知道对象中的某个值是什么类型时，可以使用泛型来传递该类型：
interface Person&lt;T&gt; {
 ...`,l:"blogs/typeScript/ts.html#_1、泛型接口",a:"_1、泛型接口"},"23.26":{t:"2、泛型类",p:`泛型类看上去与泛型接口差不多。 泛型类使用（ &lt;&gt;）括起泛型类型，跟在类名后面。
class GenericNu ...`,l:"blogs/typeScript/ts.html#_2、泛型类",a:"_2、泛型类"},"23.27":{t:"十一、TypeScript 中的类型收窄",p:`在 TypeScript 中，变量可以从不太精确的类型转移到更精确的类型，这个过程称为类型收窄。
下面是一个简单的例子，展示 ...`,l:"blogs/typeScript/ts.html#十一、typescript-中的类型收窄",a:"十一、typescript-中的类型收窄"},"23.28":{t:"参考",p:`
https://www.typescriptlang.org/docs/


博客主要记录一些学习的文章，如有不足，望大家 ...`,l:"blogs/typeScript/ts.html#参考",a:"参考"},"24.0":{t:"# Vue",p:"",l:"blogs/vue/index.html",a:"vue"},"24.1":{t:"目录",p:`
vue3（tsx）-从搭建到实践
vue3+Ts+grid布局实现的拖拽布局插件

`,l:"blogs/vue/index.html#目录",a:"目录"},"25.0":{t:"💯前言",p:"许多应用程序都需要实现可拖拽的布局以方便用户自定义布局。虽然这似乎是一个简单而基本的功能，但原生拖拽还存在许多问题，如兼容性 ...",l:"blogs/vue/vue-grid-layout.html",a:"💯前言"},"25.1":{t:"🔱项目的环境依赖",p:`  &quot;dependencies&quot;: {
    &quot;sass&quot;: &quot;^1.5 ...`,l:"blogs/vue/vue-grid-layout.html#🔱项目的环境依赖",a:"🔱项目的环境依赖"},"25.2":{t:"🤺插件的特性",p:`
可拖拽、可调整大小
网格吸附
碰撞检测
兼容移动端（采用 pointer 事件编写，兼容移动端）
干净的依赖关系，除了 v ...`,l:"blogs/vue/vue-grid-layout.html#🤺插件的特性",a:"🤺插件的特性"},"25.3":{t:"🤖编写组件",p:`以下组件设计的一些选择和决策：

使用 provide/inject 进行组件通信，而不是使用 vuex 或者 pinia， ...`,l:"blogs/vue/vue-grid-layout.html#🤖编写组件",a:"🤖编写组件"},"25.4":{t:"📦 安装",p:`# 使用 npm
npm install vue3-grid-layout --save

# 使用 yarn
yarn a ...`,l:"blogs/vue/vue-grid-layout.html#📦-安装",a:"📦-安装"},"25.5":{t:"💡 用法",p:"",l:"blogs/vue/vue-grid-layout.html#💡-用法",a:"💡-用法"},"25.6":{t:"引入",p:`// main.ts
import { createApp } from 'vue'
import './style.css ...`,l:"blogs/vue/vue-grid-layout.html#引入",a:"引入"},"25.7":{t:"组件中使用",p:`&lt;template&gt;
  &lt;div class=&quot;layout-box&quot;&gt;
   ...`,l:"blogs/vue/vue-grid-layout.html#组件中使用",a:"组件中使用"},"25.8":{t:"🎁 Apis",p:"",l:"blogs/vue/vue-grid-layout.html#🎁-apis",a:"🎁-apis"},"25.9":{t:"🔩 Props",p:"",l:"blogs/vue/vue-grid-layout.html#🔩-props",a:"🔩-props"},"25.10":{t:"GridLayout",p:`interface LayoutItem {
    id: string,
    x: number,
    y: n ...`,l:"blogs/vue/vue-grid-layout.html#gridlayout",a:"gridlayout"},"25.11":{t:"GridItem",p:`


名称
类型
默认值
说明




id
string
\`\`
方块的唯一标识



`,l:"blogs/vue/vue-grid-layout.html#griditem",a:"griditem"},"25.12":{t:"🎍 插槽",p:`


名称
说明




default
自定义每个方块的内容


resize
自定义缩放的图标


remove
自定义 ...`,l:"blogs/vue/vue-grid-layout.html#🎍-插槽",a:"🎍-插槽"},"25.13":{t:"🪢 事件",p:`


名称
说明
回调参数




draggableStart
拖拽开始时触发
拖拽的方块的id


draggableH ...`,l:"blogs/vue/vue-grid-layout.html#🪢-事件",a:"🪢-事件"},"25.14":{t:"🎡待办事项",p:`
拖拽算法优化（发生碰撞后的位置计算，用户感知不佳）
初始化布局数据计算算法优化（添加紧凑布局？、限定宽高时元素超出范围的处 ...`,l:"blogs/vue/vue-grid-layout.html#🎡待办事项",a:"🎡待办事项"},"25.15":{t:"结语",p:`欢迎大家试用，并提出问题。

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/vue/vue-grid-layout.html#结语",a:"结语"},"26.0":{t:"!1.webp",p:"记得第一次写Vue3是在2021年了，一直没有很好静下心来好好梳理一下Vue3的知识。现在的项目也没用上，只能自己摸索学习啦 ...",l:"blogs/vue/vue3Tsx.html",a:"_1-webp"},"26.1":{t:"演示地址",p:`项目demo
git仓库
`,l:"blogs/vue/vue3Tsx.html#演示地址",a:"演示地址"},"26.2":{t:"学习前的准备",p:`一点点的Ts基础，一点点vue基础
`,l:"blogs/vue/vue3Tsx.html#学习前的准备",a:"学习前的准备"},"26.3":{t:"1、搭建项目",p:`
注意：在 Node.js版本 &gt;= 12 的环境下 vite 才能正常运行

`,l:"blogs/vue/vue3Tsx.html#_1、搭建项目",a:"_1、搭建项目"},"26.4":{t:"1.1、创建项目",p:`# npm 6.x
npm init vite@latest my-vue-app --template

# npm 7+ ...`,l:"blogs/vue/vue3Tsx.html#_1-1、创建项目",a:"_1-1、创建项目"},"26.5":{t:"1.2、安装vueJsx",p:`vite官方现在提供了官方的插件来支持在vue3中使用jsx/tsx啦，直接安装就行。
yarn add @vitejs/p ...`,l:"blogs/vue/vue3Tsx.html#_1-2、安装vuejsx",a:"_1-2、安装vuejsx"},"26.6":{t:"1.3、安装`Element Plus`",p:`# NPM
npm install element-plus --save

# Yarn
yarn add element ...`,l:"blogs/vue/vue3Tsx.html#_1-3、安装-element-plus",a:"_1-3、安装-element-plus"},"26.7":{t:"1.4、配置路由",p:`# 安装路由 yarn add vue-router@4

在 src 文件下新增 router 文件夹 =&gt; ind ...`,l:"blogs/vue/vue3Tsx.html#_1-4、配置路由",a:"_1-4、配置路由"},"26.8":{t:"1.5、安装sass",p:`这里我比较习惯用scss，所以安装一下sass
yarn add sass -D

`,l:"blogs/vue/vue3Tsx.html#_1-5、安装sass",a:"_1-5、安装sass"},"26.9":{t:"1.6、安装pinia",p:"如果你之前使用过 vuex 进行状态管理的话，那么 pinia 就是一个类似的插件。它是最新一代的轻量级状态管理插件。按照尤 ...",l:"blogs/vue/vue3Tsx.html#_1-6、安装pinia",a:"_1-6、安装pinia"},"26.10":{t:"1.7、vite的一些基础配置",p:`配置文件别名
// vite.config.ts

import path from 'path'
export defau ...`,l:"blogs/vue/vue3Tsx.html#_1-7、vite的一些基础配置",a:"_1-7、vite的一些基础配置"},"26.11":{t:"2、Vue3新特性",p:`对于Vue3的学习，我大部分都是看官方文档学习的，不得不说vue 的官方文档真的太 nice 啦。
主要是学习一下vue3新 ...`,l:"blogs/vue/vue3Tsx.html#_2、vue3新特性",a:"_2、vue3新特性"},"26.12":{t:"2.1、setup",p:`
setup() 函数是 vue3 的 Composition API 新特性的入口
setup 函数会在 beforeCr ...`,l:"blogs/vue/vue3Tsx.html#_2-1、setup",a:"_2-1、setup"},"26.13":{t:"2.2、生命周期",p:`你可以通过在生命周期钩子前面加上 “on” 来访问组件的生命周期钩子。
下表包含如何在 setup () 内部调用生命周期钩 ...`,l:"blogs/vue/vue3Tsx.html#_2-2、生命周期",a:"_2-2、生命周期"},"26.14":{t:"2.3、ref",p:`
接受一个内部值并返回一个响应式且可变的 ref 对象。ref 对象仅有一个 .value property，指向该内部值。 ...`,l:"blogs/vue/vue3Tsx.html#_2-3、ref",a:"_2-3、ref"},"26.15":{t:"2.4、reactive",p:`
返回对象的响应式副本
影响所有嵌套 property，将每个 property 都转换成proxy对象
直接解构的话会丢失 ...`,l:"blogs/vue/vue3Tsx.html#_2-4、reactive",a:"_2-4、reactive"},"26.16":{t:"2.5、computed",p:`
作用跟vue2无差异
接受一个 getter 函数，并根据 getter 的返回值返回一个不可变的响应式 ref 对象。
 ...`,l:"blogs/vue/vue3Tsx.html#_2-5、computed",a:"_2-5、computed"},"26.17":{t:"2.6、watchEffect，watch",p:`watchEffect

立即执行传入的一个函数，同时响应式追踪其依赖，并在其依赖变更时重新运行该函数。
自动收集依赖源，当 ...`,l:"blogs/vue/vue3Tsx.html#_2-6、watcheffect-watch",a:"_2-6、watcheffect-watch"},"26.18":{t:"3、jsx/tsx在 vue3 中的应用",p:"",l:"blogs/vue/vue3Tsx.html#_3、jsx-tsx在-vue3-中的应用",a:"_3、jsx-tsx在-vue3-中的应用"},"26.19":{t:"3.1、插值",p:"jsx/tsx 的插值与 vue 模板语法中的插值一样，支持有效的 Javascript表达式，比如：a + b, a || ...",l:"blogs/vue/vue3Tsx.html#_3-1、插值",a:"_3-1、插值"},"26.20":{t:"3.2、class与style 绑定",p:`class类名绑定有两种方式，使用模板字符串或者使用数组。

使用模板字符串两个类名之间使用空格隔开

// 模板字符串
& ...`,l:"blogs/vue/vue3Tsx.html#_3-2、class与style-绑定",a:"_3-2、class与style-绑定"},"26.21":{t:" ",p:"",l:"blogs/vue/vue3Tsx.html#",a:""},"26.22":{t:"3.3、条件渲染",p:`
jsx/tsx中只保留了 v-show指令，没有 v-if指令
使用 if/else和三目表达式都可以实现

   set ...`,l:"blogs/vue/vue3Tsx.html#_3-3、条件渲染",a:"_3-3、条件渲染"},"26.23":{t:" ",p:"",l:"blogs/vue/vue3Tsx.html#",a:""},"26.24":{t:"3.4、列表渲染",p:`同样，jsx/tsx 中也没有 v-for指令，需要渲染列表我们只需要使用Js 的数组方法 map 就可以了
setup() ...`,l:"blogs/vue/vue3Tsx.html#_3-4、列表渲染",a:"_3-4、列表渲染"},"26.25":{t:" ",p:"",l:"blogs/vue/vue3Tsx.html#",a:""},"26.26":{t:"3.5、事件处理",p:`

绑定事件使用的也是 单大括号 {}，不过事件绑定不是以 @为前缀了，而是改成了 on，例如：click 事件是 onCl ...`,l:"blogs/vue/vue3Tsx.html#_3-5、事件处理",a:"_3-5、事件处理"},"26.27":{t:"3.6、v-model",p:`jsx/tsx是支持v-model语法的
// 正常写法
&lt;input v-model=&quot;value&quo ...`,l:"blogs/vue/vue3Tsx.html#_3-6、v-model",a:"_3-6、v-model"},"26.28":{t:"3.7、slot插槽",p:`定义插槽
jsx/tsx中是没有 slot 标签的，定义插槽需要使用{}或者使用renderSlot函数
setup 函数默 ...`,l:"blogs/vue/vue3Tsx.html#_3-7、slot插槽",a:"_3-7、slot插槽"},"26.29":{t:"4、使用tsx实现递归组件-菜单",p:`主要功能就是根据路由信息自动取生成菜单
效果如下
!image.png
代码如下，如果需要控制权限啥的，自己在路由信息的me ...`,l:"blogs/vue/vue3Tsx.html#_4、使用tsx实现递归组件-菜单",a:"_4、使用tsx实现递归组件-菜单"},"27.0":{t:"# Webpack",p:"",l:"blogs/webpack/index.html",a:"webpack"},"27.1":{t:"目录",p:`
webpack5-基础配置优化篇
webpack5-原理篇

`,l:"blogs/webpack/index.html#目录",a:"目录"},"28.0":{t:"前言",p:`接上回，上一篇文章把webpack的基本配置跟一些优化都说过了，这篇文章就讲一下原理。
`,l:"blogs/webpack/webpack-principle.html",a:"前言"},"28.1":{t:"1、Loader",p:"",l:"blogs/webpack/webpack-principle.html#_1、loader",a:"_1、loader"},"28.2":{t:"1.1、 概念",p:"loader 用于对模块的源代码进行转换。loader 可以使你在 import 或 &quot;load(加载)&quot ...",l:"blogs/webpack/webpack-principle.html#_1-1、-概念",a:"_1-1、-概念"},"28.3":{t:"1.2、 loader的特性",p:`

loader 支持链式调用。链中的每个 loader 会将转换应用在已处理过的资源上。一组链式的 loader 将按照相 ...`,l:"blogs/webpack/webpack-principle.html#_1-2、-loader的特性",a:"_1-2、-loader的特性"},"28.4":{t:"1.3、 loader 执行顺序",p:`
根据配置文件中的enforce参数分类


pre： 前置 loader
normal： 普通 loader
inline ...`,l:"blogs/webpack/webpack-principle.html#_1-3、-loader-执行顺序",a:"_1-3、-loader-执行顺序"},"28.5":{t:"1.4、loader接收的参数",p:"loader 是导出为一个函数的 node 模块。该函数在 loader 转换资源的时候调用。给定的函数将调用 Loader ...",l:"blogs/webpack/webpack-principle.html#_1-4、loader接收的参数",a:"_1-4、loader接收的参数"},"28.6":{t:"1.5、loader分类",p:`
同步 loader

module.exports = function (content, map, meta) {
  ...`,l:"blogs/webpack/webpack-principle.html#_1-5、loader分类",a:"_1-5、loader分类"},"28.7":{t:"1.6、一些常用的loader API",p:`


方法名
含义
用法




this.async
异步回调 loader。返回 this.callback
const ...`,l:"blogs/webpack/webpack-principle.html#_1-6、一些常用的loader-api",a:"_1-6、一些常用的loader-api"},"28.8":{t:"1.7、clean-log-loader",p:`清楚js文件中的console.log(xxx)
clean-log-loader.js
module.exports =  ...`,l:"blogs/webpack/webpack-principle.html#_1-7、clean-log-loader",a:"_1-7、clean-log-loader"},"28.9":{t:"1.8、babel-loader",p:`作用：编译 js 代码，将 ES6+语法编译成 ES5-语法。

下载依赖

npm i @babel/core @babe ...`,l:"blogs/webpack/webpack-principle.html#_1-8、babel-loader",a:"_1-8、babel-loader"},"28.10":{t:"1.9、 手写 file-loader",p:`作用：将文件原封不动输出出去

下载包

npm i loader-utils -D


loaders/file-load ...`,l:"blogs/webpack/webpack-principle.html#_1-9、-手写-file-loader",a:"_1-9、-手写-file-loader"},"28.11":{t:"1.10、手写 style-loader",p:`作用：动态创建 style 标签，插入 js 中的样式代码，使样式生效。

loaders/style-loader.js
 ...`,l:"blogs/webpack/webpack-principle.html#_1-10、手写-style-loader",a:"_1-10、手写-style-loader"},"28.12":{t:"2、plugin",p:"",l:"blogs/webpack/webpack-principle.html#_2、plugin",a:"_2、plugin"},"28.13":{t:"2.1、概念",p:`插件是 webpack 的支柱功能。webpack 自身也是构建于，你在 webpack 配置中用到的相同的插件系统之上！
 ...`,l:"blogs/webpack/webpack-principle.html#_2-1、概念",a:"_2-1、概念"},"28.14":{t:"2.2、Plugin 工作原理",p:`
webpack 就像一条生产线，要经过一系列处理流程后才能将源文件转换成输出结果。 这条生产线上的每个处理流程的职责都是单 ...`,l:"blogs/webpack/webpack-principle.html#_2-2、plugin-工作原理",a:"_2-2、plugin-工作原理"},"28.15":{t:"2.4、Plugin 构建对象",p:`
Compiler

Compiler 模块是 webpack 的主要引擎，它通过 CLI 或者 Node API 传递的所 ...`,l:"blogs/webpack/webpack-principle.html#_2-4、plugin-构建对象",a:"_2-4、plugin-构建对象"},"28.16":{t:"2.5、开发一个插件",p:`最简单的插件

plugins/test-plugin.js

class TestPlugin {
  construct ...`,l:"blogs/webpack/webpack-principle.html#_2-5、开发一个插件",a:"_2-5、开发一个插件"},"28.17":{t:"2.6、BannerWebpackPlugin",p:`
作用：给打包输出文件添加注释。
开发思路:


需要打包输出前添加注释：需要使用 compiler.hooks.emit  ...`,l:"blogs/webpack/webpack-principle.html#_2-6、bannerwebpackplugin",a:"_2-6、bannerwebpackplugin"},"28.18":{t:"2.7、CleanWebpackPlugin",p:`
作用：在 webpack 打包输出前将上次打包内容清空。
开发思路：



如何在打包输出前执行？需要使用 compile ...`,l:"blogs/webpack/webpack-principle.html#_2-7、cleanwebpackplugin",a:"_2-7、cleanwebpackplugin"},"28.19":{t:"2.8、AnalyzeWebpackPlugin",p:`
作用：分析 webpack 打包资源大小，并输出分析文件。
开发思路:


在哪做? compiler.hooks.emi ...`,l:"blogs/webpack/webpack-principle.html#_2-8、analyzewebpackplugin",a:"_2-8、analyzewebpackplugin"},"28.20":{t:"2.8、InlineChunkWebpackPlugin",p:`
作用：webpack 打包生成的 runtime 文件太小了，额外发送请求性能不好，所以需要将其内联到 js 中，从而减少 ...`,l:"blogs/webpack/webpack-principle.html#_2-8、inlinechunkwebpackplugin",a:"_2-8、inlinechunkwebpackplugin"},"28.21":{t:"系列文章",p:`从0开始构建自己的webpack5知识体系（长篇文章）

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/webpack/webpack-principle.html#系列文章",a:"系列文章"},"29.0":{t:"1、前言",p:`不知道大家面试的时候有没有遇到过这种情况：
面试官问你：了解过webpack嘛，之前有没有做过webpack的配置或者优化？ ...`,l:"blogs/webpack/webpack5-basics.html",a:"_1、前言"},"29.1":{t:"2、基本配置",p:`首先初始化一下项目，并建立一下文件
现在的文件目录结构
my-webpack
    ├── src
    │   └── ...`,l:"blogs/webpack/webpack5-basics.html#_2、基本配置",a:"_2、基本配置"},"29.2":{t:"2.1、安装依赖",p:`在本地安装webpack跟webpack-cli

 npm i webpack webpack-cli -D
 
 //  ...`,l:"blogs/webpack/webpack5-basics.html#_2-1、安装依赖",a:"_2-1、安装依赖"},"29.3":{t:"2.2、使用webpack",p:`
开发模式

npx webpack ./src/main.js --mode=development


生产模式

np ...`,l:"blogs/webpack/webpack5-basics.html#_2-2、使用webpack",a:"_2-2、使用webpack"},"29.4":{t:"2.3、配置文件",p:`**在使用webpack之前先认识一下webpack的一些基本概念（五大核心概念）1.  entry（入口）
指示 Webp ...`,l:"blogs/webpack/webpack5-basics.html#_2-3、配置文件",a:"_2-3、配置文件"},"29.5":{t:"2.4、处理样式资源",p:"在src中新建一个style文件夹，然后新增一个index.css文件，随便在里面写一点样式，并在main.js中引用这个文 ...",l:"blogs/webpack/webpack5-basics.html#_2-4、处理样式资源",a:"_2-4、处理样式资源"},"29.6":{t:"2.5、处理图片、字体等资源",p:`过去在 Webpack4 时，我们处理图片资源通过 file-loader 和 url-loader 进行处理
现在 Web ...`,l:"blogs/webpack/webpack5-basics.html#_2-5、处理图片、字体等资源",a:"_2-5、处理图片、字体等资源"},"29.7":{t:"2.6、处理字体、视频、音频等资源",p:`1.添加字体、图标

在打开阿里巴巴矢量图标库open in new window下载喜欢的图标到本地
把字体文件放入fon ...`,l:"blogs/webpack/webpack5-basics.html#_2-6、处理字体、视频、音频等资源",a:"_2-6、处理字体、视频、音频等资源"},"29.8":{t:"2.7、自动清空打包目录",p:`只需要在输出配置clean: true就可以实现
修改配置文件
module.exports = {
    // ...
 ...`,l:"blogs/webpack/webpack5-basics.html#_2-7、自动清空打包目录",a:"_2-7、自动清空打包目录"},"29.9":{t:"2.8、修改输出资源的名称跟路径",p:`

现在的打包文件都是全部放在dist根目录下面的，看起来比较杂乱


我们需要把文件根据文件属性放到不同的目录下面


修 ...`,l:"blogs/webpack/webpack5-basics.html#_2-8、修改输出资源的名称跟路径",a:"_2-8、修改输出资源的名称跟路径"},"29.10":{t:"2.9、处理js（兼容性跟静态检查）",p:"",l:"blogs/webpack/webpack5-basics.html#_2-9、处理js-兼容性跟静态检查",a:"_2-9、处理js-兼容性跟静态检查"},"29.11":{t:"2.9.1、js兼容性处理",p:"浏览器对JavaScript的一些ES6语法兼容性不太好，所以我们需要借助Babel（JavaScript 编译器）来将ES ...",l:"blogs/webpack/webpack5-basics.html#_2-9-1、js兼容性处理",a:"_2-9-1、js兼容性处理"},"29.12":{t:"2.9.2、js的静态检查",p:`静态检查是为了统一代码风格，减少bug，节约开发时间。
安装Eslint
npm i eslint-webpack-plug ...`,l:"blogs/webpack/webpack5-basics.html#_2-9-2、js的静态检查",a:"_2-9-2、js的静态检查"},"29.13":{t:"2.10、处理css资源",p:"",l:"blogs/webpack/webpack5-basics.html#_2-10、处理css资源",a:"_2-10、处理css资源"},"29.14":{t:"2.10.1、提取css文件",p:`之前我们都是使用style-loader来处理css，它把css
打包到js中，在js文件加载的时候，创建一个style标签 ...`,l:"blogs/webpack/webpack5-basics.html#_2-10-1、提取css文件",a:"_2-10-1、提取css文件"},"29.15":{t:"2.10.2、css兼容性处理",p:`CSS3的一些新特性在有的浏览器中不兼容，需要添加后缀或者前缀才能生效。
下载依赖
npm i postcss-loader ...`,l:"blogs/webpack/webpack5-basics.html#_2-10-2、css兼容性处理",a:"_2-10-2、css兼容性处理"},"29.16":{t:"2.10.3、压缩CSS",p:`安装依赖
npm i css-minimizer-webpack-plugin -D

配置文件
const CssMini ...`,l:"blogs/webpack/webpack5-basics.html#_2-10-3、压缩css",a:"_2-10-3、压缩css"},"29.17":{t:"2.10.4、引入less或者sass",p:`less跟sass跟css一样不能被webpack识别，需要借助loader来编译
less比起sass要简单许多，只需要配 ...`,l:"blogs/webpack/webpack5-basics.html#_2-10-4、引入less或者sass",a:"_2-10-4、引入less或者sass"},"29.18":{t:"2.11、区分环境",p:`本地开发和部署线上，各自所看重的点是不一样的
本地环境：

不需要有输出文件，打包文件都在内存中
需要打印 debug 信息 ...`,l:"blogs/webpack/webpack5-basics.html#_2-11、区分环境",a:"_2-11、区分环境"},"29.19":{t:"3、优化配置",p:`在前面，我们已经把基本配置都配置好了，现在要对这些配置做一些优化，列如：提升打包构建速度、减少代码体积等
`,l:"blogs/webpack/webpack5-basics.html#_3、优化配置",a:"_3、优化配置"},"29.20":{t:"3.1、SourceMap",p:`SourceMap（源代码映射）是一个用来生成源代码与构建后代码一一映射的文件的方案。
它会生成一个 xxx.map 文件， ...`,l:"blogs/webpack/webpack5-basics.html#_3-1、sourcemap",a:"_3-1、sourcemap"},"29.21":{t:"3.2、提升打包构建速度",p:"",l:"blogs/webpack/webpack5-basics.html#_3-2、提升打包构建速度",a:"_3-2、提升打包构建速度"},"29.22":{t:"3.2.1、HotModuleReplacement（HMR/热模块替换）",p:"HotModuleReplacement（HMR/热模块替换）：在程序运行中，替换、添加或删除模块，而无需重新加载整个页面。 ...",l:"blogs/webpack/webpack5-basics.html#_3-2-1、hotmodulereplacement-hmr-热模块替换",a:"_3-2-1、hotmodulereplacement-hmr-热模块替换"},"29.23":{t:"3.2.2、OneOf",p:`打包时每个文件都会经过所有 loader 处理，虽然因为 test 正则原因实际没有处理上，但是都要过一遍。比较慢。
顾名思 ...`,l:"blogs/webpack/webpack5-basics.html#_3-2-2、oneof",a:"_3-2-2、oneof"},"29.24":{t:"3.2.3、Include/Exclude",p:"开发时我们需要使用第三方的库或插件，所有文件都下载到 node_modules 中了。而这些文件是不需要编译可以直接使用的。 ...",l:"blogs/webpack/webpack5-basics.html#_3-2-3、include-exclude",a:"_3-2-3、include-exclude"},"29.25":{t:"3.2.4、缓存（Cache）",p:`Cache，利用缓存可以大幅度提高构建速度，
每次打包时 js 文件都要经过 Eslint 检查 和 Babel 编译，速度 ...`,l:"blogs/webpack/webpack5-basics.html#_3-2-4、缓存-cache",a:"_3-2-4、缓存-cache"},"29.26":{t:"3.2.5、多进程（Thread）",p:`
如果项目规模较小或者打包速度还可以的话，不建议配置多进程，因为每一个进程开启和通信都需要耗费一定的时间（每个进程启动就有大 ...`,l:"blogs/webpack/webpack5-basics.html#_3-2-5、多进程-thread",a:"_3-2-5、多进程-thread"},"29.27":{t:"3.3、减少代码体积",p:"",l:"blogs/webpack/webpack5-basics.html#_3-3、减少代码体积",a:"_3-3、减少代码体积"},"29.28":{t:"3.3.1、Tree Shaking",p:`Tree Shaking 是一个术语，通常用于描述移除 JavaScript 中的没有使用上的代码。

注意：它依赖 ES  ...`,l:"blogs/webpack/webpack5-basics.html#_3-3-1、tree-shaking",a:"_3-3-1、tree-shaking"},"29.29":{t:"3.3.2、Babel",p:`
@babel/plugin-transform-runtime: 禁用了 Babel 自动对每个文件的 runtime 注 ...`,l:"blogs/webpack/webpack5-basics.html#_3-3-2、babel",a:"_3-3-2、babel"},"29.30":{t:"3.3.3、图片压缩（Image Minimizer）",p:`开发如果项目中引用了较多图片，那么图片体积会比较大，将来请求速度比较慢。
我们可以对图片进行压缩，减少图片体积。

注意：如 ...`,l:"blogs/webpack/webpack5-basics.html#_3-3-3、图片压缩-image-minimizer",a:"_3-3-3、图片压缩-image-minimizer"},"29.31":{t:"3.4、优化代码运行性能/体验",p:"",l:"blogs/webpack/webpack5-basics.html#_3-4、优化代码运行性能-体验",a:"_3-4、优化代码运行性能-体验"},"29.32":{t:"3.4.1、代码分割（Code Split）",p:"打包代码时会将所有 js 文件打包到一个文件中，体积太大了。我们如果只要渲染首页，就应该只加载首页的 js 文件，其他文件不 ...",l:"blogs/webpack/webpack5-basics.html#_3-4-1、代码分割-code-split",a:"_3-4-1、代码分割-code-split"},"29.33":{t:"3.4.2 按需加载",p:`1.新增count.js文件
export default function count(x, y) {
    retur ...`,l:"blogs/webpack/webpack5-basics.html#_3-4-2-按需加载",a:"_3-4-2-按需加载"},"29.34":{t:"3.4.3、统一命名",p:"webpack 文件指纹策略是将文件名后面加上 hash 值。例如我们在基础配置中用到的：filename: &quot;[ ...",l:"blogs/webpack/webpack5-basics.html#_3-4-3、统一命名",a:"_3-4-3、统一命名"},"29.35":{t:"3.4.4、runtime配置",p:`
问题：

当我们修改 math.js 文件再重新打包的时候，因为 contenthash 原因，math.js 文件 ha ...`,l:"blogs/webpack/webpack5-basics.html#_3-4-4、runtime配置",a:"_3-4-4、runtime配置"},"29.36":{t:"3.4.5、Preload / Prefetch",p:`
Preload：告诉浏览器立即加载资源。
Prefetch：告诉浏览器在空闲时才开始加载资源。

它们共同点：

都只会加 ...`,l:"blogs/webpack/webpack5-basics.html#_3-4-5、preload-prefetch",a:"_3-4-5、preload-prefetch"},"29.37":{t:"3.4.6、Core-js",p:`core-js 是专门用来做 ES6 以及以上 API 的 polyfill。
polyfill翻译过来叫做垫片/补丁。就是 ...`,l:"blogs/webpack/webpack5-basics.html#_3-4-6、core-js",a:"_3-4-6、core-js"},"29.38":{t:"3.4.7、PWA",p:`提供项目的离线体验，即在离线状态下也可以访问项目
安装依赖
npm i workbox-webpack-plugin -D
 ...`,l:"blogs/webpack/webpack5-basics.html#_3-4-7、pwa",a:"_3-4-7、pwa"},"29.39":{t:"系列文章",p:`webpack原理篇

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/webpack/webpack5-basics.html#系列文章",a:"系列文章"}},a={previewLength:62,buttonLabel:"Search",placeholder:"Search docs",allow:[],ignore:[]},s={INDEX_DATA:e,PREVIEW_LOOKUP:t,Options:a};export{s as default};
