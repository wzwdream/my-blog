const e={map:'[{"实现思路":["0.0"],"基础知识":["0.1"],"具体实现":["0.5","5.2"],"css文件":["0.11"],"总结":["0.12","6.14","13.11","15.6"],"前言":["1.0","2.0","3.0","5.0","8.0","9.0","15.0","18.0","20.0","24.0"],"结尾":["1.9","2.7"],"短路运算":["2.1"],"三元运算符":["2.2"],"switch":["2.3"],"对象配置":["2.4"],"案例1":["2.5"],"案例2":["2.6"],"iframe通信的几种方式":["3.1"],"javascript":["4.0","12.0"],"目录":["4.1","12.1","19.1","21.1","23.1"],"前期构思":["5.1"],"最终效果":["5.6"],"语法":["7.1","7.5"],"参数":["7.2","7.6"],"返回值":["7.3","7.7"],"最小延迟时间":["7.9"],"超时延迟":["7.10"],"最大延时值":["7.11"],"错误示范":["7.14"],"改变过后的正确示范":["7.15"],"参考链接":["7.16","10.6"],"实现":["8.1"],"兼容性":["9.3"],"使用canvas画一个简单的矩形":["9.4"],"transform":["9.20"],"settransform":["9.21"],"resettransform":["9.22"],"参考":["9.29","20.28"],"第一题":["10.4"],"第二题":["10.5"],"设计模式的概念":["13.0"],"观察者者模式":["13.3"],"发布":["13.7"],"参考资料":["13.12","14.14","15.7","17.9"],"预览":["18.1"],"初始化":["18.2"],"目录结构":["18.3"],"首页":["18.4"],"配置文件":["18.5"],"部署":["18.6"],"typescript":["19.0"],"一":["20.1"],"二":["20.4"],"三":["20.15"],"四":["20.16"],"五":["20.17"],"六":["20.18"],"七":["20.19"],"八":["20.20"],"九":["20.21"],"十":["20.24"],"十一":["20.27"],"vue":["21.0"],"演示地址":["22.1"],"学习前的准备":["22.2"],"webpack":["23.0"],"系列文章":["24.21","25.39"]},{"0":["9.8","9.22","10.4"],"1":["0.0","0.2","0.6","1.1","1.2","1.4","3.1","5.3","6.0","6.1","6.4","6.7","7.0","9.1","9.6","9.8","9.14","9.16","9.22","9.24","9.27","10.0","10.2","11.0","11.1","13.1","13.4","13.5","13.8","14.0","14.1","14.2","14.13","15.1","16.0","16.2","16.7","17.0","17.1","17.2","17.3","17.7","20.2","20.5","20.22","20.25","22.0","22.3","22.4","22.5","22.6","22.7","22.8","22.9","22.10","22.12","22.19","24.1","24.2","24.3","24.4","24.5","24.6","24.7","24.8","24.9","24.10","24.11","24.13","24.16","24.17","24.18","24.19","24.20","25.0","25.2","25.4","25.7","25.11","25.14","25.20","25.22","25.32","25.33"],"2":["0.3","0.7","1.3","1.4","1.5","5.4","6.1","6.5","6.6","6.7","6.8","6.9","6.10","6.11","6.12","6.13","7.4","9.2","9.9","9.17","9.25","9.28","10.1","11.1","13.2","13.5","13.9","14.2","14.3","14.4","14.5","14.8","14.11","15.2","16.1","16.3","16.8","17.2","17.4","17.8","20.3","20.6","20.23","20.26","22.5","22.11","22.12","22.13","22.14","22.15","22.16","22.17","22.20","24.3","24.4","24.12","24.13","24.14","24.15","24.16","24.17","24.18","24.19","24.20","25.1","25.2","25.3","25.4","25.5","25.6","25.7","25.8","25.9","25.10","25.11","25.12","25.13","25.14","25.15","25.16","25.17","25.18","25.22","25.23","25.24","25.25","25.26","25.29","25.33"],"3":["0.4","0.8","1.6","5.5","6.2","6.11","6.13","7.8","9.5","9.10","9.18","10.2","11.1","11.2","13.6","13.10","14.6","14.7","14.8","15.3","16.4","16.9","17.3","17.5","20.7","22.6","22.14","22.18","22.19","22.20","22.22","22.24","22.26","22.27","22.28","24.4","24.16","25.4","25.16","25.19","25.20","25.21","25.22","25.23","25.24","25.25","25.26","25.27","25.28","25.29","25.30","25.31","25.32","25.33","25.34","25.35","25.36","25.37","25.38"],"4":["0.9","1.7","1.8","6.3","7.12","9.6","9.11","10.3","11.1","11.3","14.9","14.10","14.11","15.4","16.5","17.6","20.8","22.7","22.15","22.24","22.29","24.5","24.15","25.5","25.17","25.25","25.32","25.33","25.34","25.35","25.36","25.37","25.38"],"5":["0.10","7.13","9.7","11.4","14.12","14.13","15.5","16.6","20.9","22.16","22.26","24.6","24.16","25.6","25.26","25.36"],"6":["9.12","11.5","20.10","22.4","22.9","22.17","22.27","24.7","24.17","25.7","25.37"],"7":["9.13","11.6","20.11","22.10","22.28","24.8","24.18","25.38"],"8":["9.14","11.7","20.12","24.9","24.19","24.20","25.9","25.34"],"9":["9.15","9.16","9.17","9.18","9.19","11.8","20.13","24.10","25.11","25.12"],"10":["5.5","9.23","9.24","9.25","9.26","9.27","9.28","11.9","17.4","20.14","24.11","25.14","25.15","25.16","25.17"],"11":["25.18"],"12":["9.24"],"20":["5.5","17.4"],"30":["17.4"],"拖拽事件":["0.2","0.12"],"主要用到的事件有":["0.2"],"filereader对象":["0.3"],"filereader":["0.3","0.9","1.5"],"对象允许web应用程序异步读取存储在用户计算机上的文件":["0.3"],"或原始数据缓冲区":["0.3"],"的内容":["0.3"],"使用":["0.3","2.5","3.1","9.4"],"file":["0.3","0.9","1.5","24.10","25.6"],"或":["0.3","1.5","3.1"],"blob":["0.3","1.5"],"对象指定要读取的文件或数据":["0.3"],"其中file对象可以是来自用户在一个":["0.3"],"input":["0.3","0.8"],"元素上选择文件后返回的":["0.3"],"定义拖拽文件的特定区域":["0.6"],"样式文件放在最后":["0.6"],"拖拽文件事件":["0.7"],"文件获取":["0.7"],"这里有一个要点":["0.7"],"就是拖拽事件需要阻止它的默认行为":["0.7"],"不然不会触发后续的事件":["0.7"],"js":["0.7","0.9","1.7","2.5","2.6","3.1","5.5","9.2","9.24","9.25","10.4","10.5","11.3","11.6","11.7","11.8","11.9","13.5","13.6","13.9","13.10","14.2","14.5","14.11","15.3","15.4","17.3","17.4","18.5","20.20","20.21","22.6","22.7","22.10","22.29","24.6","24.8","24.9","24.10","24.11","24.16","24.20","25.4","25.5","25.9","25.12","25.15","25.25","25.30","25.32","25.33","25.35","25.37"],"获取dom元素":["0.7"],"let":["0.7","7.14","7.15","9.24","9.25","14.2","14.11"],"droptarget":["0.7"],"还有点击上传":["0.8"],"上传事件":["0.8"],"读取文件并实现上传文件预览":["0.9"],"通过":["0.9","20.15","24.14"],"读取文件数据":["0.9"],"把文件跟文件流分别保存在不同的数组中":["0.9"],"方便预览文件删除":["0.9"],"并且根据文件数组的下标给每个删除按钮都添加对应的id":["0.9"],"删除操作":["0.9"],"因为主要是学习拖拽上传文件":["0.9"],"所以对效率方面没有考虑":["0.9"],"如果有不足的地方请多多指教":["0.9"],"文件处理函数":["0.9"],"function":["0.9","7.2","8.1","10.5","11.6","11.7","13.5","14.2","15.3","16.2","17.4","24.6","25.33"],"filestoblod":["0.9"],"创建文件对象":["0.9"],"reader":["0.9"],"new":["0.9","10.4","11.4","11.9","13.10","16.2","16.3","24.16"],"文件转为文件流":["0.9"],"readasdataurl":["0.9","1.5"],"文件读取完成":["0.9"],"根据类型不同显示不同的图标":["0.9"],"onload":["0.9"],"e":["0.9"],"把文件流放入文件流数组中":["0.9"],"fileblodarr":["0.9"],"push":["0.9","13.9"],"target":["0.9"],"result":["0.9"],"删除文件":["0.10"],"利用事件委托的方法":["0.10"],"给整个盒子添加":["0.10"],"click":["0.10"],"事件":["0.10"],"css":["0.11","25.5"],"margin":["0.11"],"0px":["0.11"],"padding":["0.11"],"整体盒子":["0.11"],"main":["0.11","25.5","25.32"],"width":["0.11"],"456px":["0.11"],"height":["0.11"],"452px":["0.11"],"overflow":["0.11"],"hidden":["0.11"],"position":["0.11"],"relative":["0.11"],"100px":["0.11"],"auto":["0.11"],"background":["0.11"],"f7f6f6":["0.11"],"文件上传盒子":["0.11"],"drop":["0.11"],"box":["0.11"],"454px":["0.11"],"dragenter":["0.12"],"dragover":["0.12"],"dragleave":["0.12"],"和":["0.12","9.14","13.5","20.13","25.6"],"️":["1.0","2.0","2.3","3.1","9.8","9.13","9.25"],"a标签的download":["1.2"],"download":["1.2"],"属性是html5新增的属性":["1.2"],"主要解决不能直接下载":["1.2"],"利用blob":["1.4"],"url":["1.4","3.1","25.6"],"createobjecturl":["1.4"],"利用":["1.4","5.3"],"url对象":["1.4"],"的":["1.4","3.1","5.3","9.16","11.0","20.27","22.12"],"方法去读取文件流":["1.4"],"使用base64":["1.5"],"方法会异步读取指定的":["1.5"],"对象":["1.5","16.3","22.14","24.16"],"并在读取完成时":["1.5"],"open":["1.6"],"location":["1.6","3.1"],"form表单":["1.7"],"应该是最传统的文件下载方式了吧":["1.7"],"很多新特性都是在h5才出的":["1.7"],"兼容性应该也是最好的":["1.7"],"实现方式也很简单":["1.7"],"通过js动态创建form表单":["1.7"],"然后利用form表单的提交来获取文件":["1.7"],"通过iframe下载":["1.8"],"iframe":["1.8","3.0","3.1"],"下载文件跟":["1.8"],"a":["1.8","2.6","9.20","9.21","15.5","17.4"],"标签下载文件基本一致":["1.8"],"本文主要是总结自己知道":["1.9"],"相信大家或多或少都接触过拥有庞大":["2.0"],"javascript":["2.1","6.13","7.1","7.5","7.14","7.15","8.1","10.4","10.5","20.21","25.11"],"的逻辑或":["2.1"],"的短路运算有时候可以用来代替一些比较简单的":["2.1"],"if":["2.1","2.2","2.5","2.6","13.5","14.2","20.27"],"三元运算符我觉得大家应该都很熟悉吧":["2.2"],"很多时候简单的一些判断我们都可以使用三元运算符去替代":["2.2"],"else":["2.2","2.5"],"这里只推荐":["2.2"],"一层":["2.2"],"因为多层嵌套的三元运算符也不具备良好的可读性":["2.2"],"case":["2.3"],"上述的两种方式":["2.3"],"短路运算跟三元运算虽然很好用":["2.3"],"代码也很简洁":["2.3"],"不过都只能用于简单的判断":["2.3"],"遇到多重条件判断就不能使用了":["2.3"],"对于":["2.3"],"虽然它的可读性确实比":["2.3"],"策略模式":["2.4"],"对象配置看起来跟":["2.4"],"差不多":["2.4"],"商场促销价":["2.5"],"根据不同的用户使用不同的折扣":["2.5"],"如":["2.5","5.5"],"普通用户不打折":["2.5"],"普通会员用户9折":["2.5"],"年费会员8":["2.5"],"5折":["2.5"],"超级会员8折":["2.5"],"实现":["2.5","14.2","14.5","14.8","14.11"],"获取折扣":["2.5"],"使用if":["2.5"],"年终奖":["2.6"],"公司的年终奖根据员工的工资基数和绩效等级来发放的":["2.6"],"例如":["2.6","20.14"],"绩效为a的人年终奖有4倍工资":["2.6"],"绩效为b的有3倍":["2.6"],"绩效为c的只有2倍":["2.6"],"假如财务部要求我们提供一段代码来实现这个核算逻辑":["2.6"],"我们要怎么实现呢":["2.6"],"这不是很简单嘛":["2.6"],"一个函数就搞定了":["2.6"],"const":["2.6","5.5","8.1","14.2","24.11"],"calculatebonus":["2.6"],"performancelevel":["2.6"],"salary":["2.6"],"本文主要是向大家传递一种思想":["2.7"],"想必大家都挺熟悉的了":["3.0"],"传参":["3.1"],"父窗口可以通过在":["3.1"],"src":["3.1","25.32"],"属性后添加参数来向子窗口传递数据":["3.1"],"子窗口可以通过":["3.1"],"search":["3.1"],"hash":["3.1","25.34"],"来获取参数":["3.1"],"拼接参数":["3.1"],"子页面使用":["3.1"],"接收参数":["3.1"],"parent":["3.1"],"html":["3.1","24.20"],"id":["3.1"],"iframe1":["3.1"],"关于前端下载的一些问题":["4.1"],"对象说晚饭吃什么太难选择":["5.0"],"首先是布局":["5.1"],"这个比较简单":["5.1"],"用弹性布局":["5.1"],"布局":["5.3"],"布局采用弹性布局":["5.3"],"vue":["5.3","13.5","13.9","22.7"],"指定奖品":["5.4","5.5"],"抽奖":["5.5"],"抽奖的具体实现":["5.5"],"利用定时器":["5.5"],"settimeout":["5.5","10.4"],"控制转动速度":["5.5"],"speed":["5.5"],"转动速度":["5.5"],"的规则为":["5.5"],"通过圈数跟中奖项计算出总的转动次数":["5.5"],"然后先加速再匀速最后减速":["5.5"],"利用样式规则来控制选中的":["5.5"],"item":["5.5"],"selectitem":["5.5"],"转动的圈数量":["5.5"],"activeturns":["5.5"],"通过随机数取":["5.5"],"中奖的规则":["5.5"],"圈数跟需要转动的总圈数相同并且转到本轮中奖的位置则停止转动表示中奖":["5.5"],"每次抽奖前需要初始化各种状态值":["5.5"],"选中的item":["5.5"],"当前中奖":["5.5"],"activeraffle":["5.5"],"如果已经在抽奖":["5.5"],"开始抽奖按钮就会失效":["5.5"],"指定的奖品":["5.5"],"appointraffle":["5.5"],"ref":["5.5","22.14"],"null":["5.5","14.2","15.4","20.13"],"代码片段":["5.6"],"创建正则表达式的2种方法":["6.1"],"标准写法":["6.1"],"使用new关键字创建":["6.1"],"var":["6.1","7.1","13.5","17.4"],"正则表达式的基本语法":["6.2"],"字符":["6.2"],"描述":["6.2"],"转义特殊字符":["6.2"],"匹配字符串的开头":["6.2"],"res":["6.7"],"test":["6.7","24.16"],"reg":["6.11"],"exec":["6.11"],"零宽断言":["6.13"],"给指定位置添加一个限定条件":["6.13"],"用来规定此位置之前或之后的字符必须满足限定条件才可以使正则表达式匹配成功":["6.13"],"示例1":["6.13"],"数字三位一逗":["6.13"],"创建正则表达式有两种方法":["6.14"],"new关键字创建跟字面量方法":["6.14"],"是你想要在到期时间":["7.2"],"delay":["7.2"],"毫秒":["7.2"],"之后执行的函数":["7.2"],"code":["7.2","25.32"],"timeoutid":["7.3"],"是一个正整数":["7.3"],"func":["7.6"],"要重复调用的函数":["7.6"],"每经过指定":["7.6"],"此返回值":["7.7"],"intervalid":["7.7"],"是一个非零数值":["7.7"],"在浏览器中":["7.9"],"除了":["7.10","15.5"],"包括":["7.11"],"ie":["7.11"],"定时器的可靠性":["7.12"],"虽说定时器在大部分的情况下都是趋于稳定的":["7.12"],"但是定时器在使用的时候也存在着一些误差":["7.12"],"可以使用下列代码多测试几次":["7.12"],"定义时间":["7.14","7.15"],"time":["7.15"],"js的执行机制":["7.16"],"前几天在项目中遇到一个以前都没有接触过的问题":["8.0"],"觉得很有意思记录一下":["8.0"],"场景是这样的":["8.0"],"我们项目中有一个语音上传":["8.0"],"用的elment的upload组件":["8.0"],"base64文件流":["8.1"],"base64string":["8.1"],"处理base64文件流":["8.1"],"这里对base64串进行操作":["8.1"],"去掉url头":["8.1"],"并转换为byte":["8.1"],"bstr":["8.1"],"怎么突然提到":["9.0"],"canvas":["9.0","9.2","9.3","9.4","9.5","9.14","9.16","9.18","9.24","9.25"],"呢":["9.0"],"canvas的基本使用":["9.2"],"可以看得出来":["9.3"],"现在流行的浏览器基本都支持":["9.3"],"标签":["9.3","24.11"],"会创建一个固定大小的画布":["9.4"],"同时会公开一个或多个":["9.4"],"画笔":["9.4"],"渲染上下文":["9.4"],"来绘制和处理要展示的内容":["9.4"],"在这里我们重点研究":["9.4"],"2d":["9.4"],"其他的上下文我们暂不研究":["9.4"],"绘制路径":["9.5"],"path":["9.5","22.10"],"只支持一种原生的图形绘制":["9.5"],"矩形":["9.5"],"所有其他图形都至少需要生成一种路径":["9.5"],"图形的基本元素是路径":["9.5"],"路径是通过不同颜色和宽度的线段或曲线相连形成的不同形状的点的集合":["9.5"],"一个路径":["9.5"],"甚至一个子路径":["9.5"],"都是闭合的":["9.5"],"使用路径绘制图形需要一些额外的步骤":["9.5"],"绘制圆弧":["9.6"],"有两个方法可以绘制圆弧":["9.6"],"arc":["9.6"],"x":["9.6","9.12","9.18","22.4","25.33"],"y":["9.6","9.12","9.18","18.2","25.33"],"r":["9.6"],"startangle":["9.6"],"endangle":["9.6"],"anticlockwise":["9.6"],"以":["9.6"],"为圆心":["9.6"],"为半径":["9.6"],"linewidth":["9.8"],"线宽":["9.8"],"只能是正值":["9.8"],"默认是":["9.8"],"起始点和终点的连线为中心":["9.8"],"linecap":["9.9"],"线条末端样式":["9.9"],"butt":["9.9"],"线段末端以方形结束":["9.9"],"round":["9.9","9.10"],"线段末端以圆形结束":["9.9"],"square":["9.9"],"但是增加了一个宽度和线段相同":["9.9"],"高度是线段厚度一半的矩形区域":["9.9"],"linejoin":["9.10"],"线条与线条间接合处的样式":["9.10"],"通过填充一个额外的":["9.10"],"圆心在相连部分末端的扇形":["9.10"],"绘制拐角的形状":["9.10"],"圆角的半径是线段的宽度":["9.10"],"bevel":["9.10"],"在相连部分的末端填充一个额外的以三角形为底的区域":["9.10"],"虚线":["9.11"],"用":["9.11"],"setlinedash":["9.11"],"方法和":["9.11"],"文本绘制":["9.12"],"我为了做个水印学了这么多东西":["9.12"],"绘制文本的两种方法":["9.12"],"filltext":["9.12"],"text":["9.12"],"maxwidth":["9.12"],"在指定的":["9.12"],"图片绘制":["9.13"],"其实这个我是不喜欢学的":["9.13"],"但是想了下以后自己可以画一些":["9.13"],"绘制图片使用的是":["9.13"],"drawimage":["9.13"],"方法":["9.13","16.5","17.2","24.16"],"这个方法有九个参数":["9.13"],"image":["9.13","10.2","22.29","25.30"],"sx":["9.13"],"sy":["9.13"],"swidth":["9.13"],"状态":["9.14","15.1"],"的状态就是当前画面应用的所有样式和变形的一个快照":["9.14"],"save":["9.14","22.6"],"restore":["9.14"],"方法是用来保存和恢复":["9.14"],"状态的":["9.14"],"都没有参数":["9.14"],"关于":["9.14"],"translate":["9.16"],"用来移动":["9.16"],"原点":["9.16"],"到指定的位置":["9.16"],"rotate":["9.17"],"旋转坐标轴":["9.17"],"angle":["9.17"],"只接受一个参数":["9.17"],"旋转的角度":["9.17"],"scale":["9.18"],"增减图形在":["9.18"],"中的像素数目":["9.18"],"对形状":["9.18"],"位图进行缩小或者放大":["9.18"],"b":["9.20","9.21","17.4"],"c":["9.20","17.4"],"d":["9.20"],"重置当前变形为单位矩阵":["9.22"],"它和调用以下语句是一样的":["9.22"],"ctx":["9.22","9.24"],"settransform":["9.22"],"组合":["9.24"],"globalcompositeoperation":["9.24"],"type":["9.24","14.5"],"这个属性设定了在画新图形时采用的遮盖策略":["9.24"],"其值是一个标识":["9.24"],"种遮盖方式的字符串":["9.24"],"document":["9.24"],"getelementbyid":["9.24"],"裁切路径":["9.25"],"裁切路径和普通的":["9.25"],"图形差不多":["9.25"],"不同的是它的作用是遮罩":["9.25"],"用来隐藏不需要的部分":["9.25"],"clip":["9.25"],"将当前正在构建的路径转换为当前的裁剪路径":["9.25"],"默认情况下":["9.25"],"有一个与它自身一样大的裁切路径":["9.25"],"也就是没有裁切效果":["9.25"],"动画的基本步骤":["9.27"],"你可以通过以下的步骤来画出一帧":["9.27"],"控制动画":["9.28"],"mdn":["9.29"],"学习eventloop前需要知道的一些知识":["10.1"],"同步任务":["10.1"],"在主线程上排队执行的任务":["10.1"],"只有前一个任务执行完毕":["10.1"],"才能执行后一个任务":["10.1"],"异步任务":["10.1"],"eventloop":["10.2"],"事件循环":["10.2"],"执行过程":["10.2"],"png":["10.2","22.29"],"具体过程可以理解为":["10.2"],"主线程执行全局同步代码":["10.2"],"console":["10.4","10.5","13.5","24.16"],"log":["10.4","10.5","13.5","24.8","24.16"],"start":["10.4","10.5"],"settimeout1":["10.4"],"promise":["10.4","15.2","15.5"],"async":["10.5"],"fn1":["10.5"],"带你彻底弄懂eventloop":["10.6"],"手写instanceof":["11.0"],"instanceof":["11.0"],"主要判断一个实例是否":["11.0"],"属于":["11.0"],"某种类型":["11.0"],"实现原理就是只要右边":["11.0"],"类型":["11.0"],"prototype":["11.0","13.5","16.0","16.4"],"在左边":["11.0"],"实例":["11.0"],"手写new关键词":["11.1"],"使用new关键词执行构造函数":["11.1"],"主要过程为":["11.1"],"创建":["11.1"],"一个新对象":["11.1"],"将第一步的空对象链接到另一个对象":["11.1"],"new操作符后面跟着的构造函数的":["11.1"],"原型对象":["11.1"],"将第一步创建的对象作为构造函数的":["11.1"],"this上下文":["11.1"],"手写call":["11.2"],"改变函数的":["11.2"],"this":["11.2","11.4","11.8","11.9","13.5","13.6","13.9","13.10","15.4","24.5","24.6","24.7"],"指向":["11.2"],"第一个参数为":["11.2"],"要指向的对象":["11.2"],"如果没有或者参数为undefined":["11.2"],"null则默认指向":["11.2"],"window":["11.2","13.5"],"参数传递是以参数列表传递":["11.2"],"手写apply":["11.3"],"跟call基本是一样的":["11.3"],"只是call的剩余参数是参数列表":["11.3"],"call的参数需要一个一个在后面列举出来":["11.3"],"而apply的第二个参数必须是":["11.3"],"数组":["11.3","20.8"],"apply的参数是以":["11.3"],"参数数组":["11.3"],"的形式传递的":["11.3"],"手写bind":["11.4"],"bind函数也改变":["11.4"],"的指向":["11.4"],"传入的函数不会":["11.4"],"立即执行":["11.4"],"而是":["11.4"],"返回":["11.4"],"一个永久改变this指向的":["11.4"],"函数":["11.4","16.2","22.16"],"参数传递跟call一样使用":["11.4"],"参数列表":["11.4"],"需要一个一个的列举出来传递":["11.4"],"绑定过后的函数被":["11.4"],"实例化之后":["11.4"],"需要继承原函数的":["11.4"],"原型链":["11.4"],"防抖":["11.5"],"在事件触发的一段时间后执行该事件":["11.5"],"如果这期间再次触发事件":["11.5"],"则重新计时":["11.5"],"节流":["11.6"],"事件在一定时间内只能触发一次":["11.6"],"深克隆":["11.7"],"创造一个一模一样的对象":["11.7"],"新对象跟原对象不共享内存":["11.7"],"修改新对象不会改到原对象":["11.7"],"使用json":["11.7"],"stringify和json":["11.7"],"parse也可以实现深拷贝":["11.7"],"json":["11.7","25.4","25.32"],"stringify把对象转成字符串":["11.7"],"再用json":["11.7"],"parse把字符串转成新的对象":["11.7"],"deepclone":["11.7"],"obj":["11.7"],"手写promise":["11.8"],"promise的出现是为了解决回调地狱":["11.8"],"是一种异步编程的解决方案":["11.8"],"promise有三种状态":["11.8"],"pending":["11.8","15.4"],"等待态":["11.8","15.4"],"fulfiled":["11.8","15.3","15.4"],"成功态":["11.8","15.4"],"rejected":["11.8","15.3","15.4"],"失败态":["11.8","15.4"],"初始状态是":["11.8"],"状态一旦改变":["11.8"],"就不会再变":["11.8"],"class":["11.8","11.9","13.6","13.9","13.10","14.5","15.4","20.21","24.16"],"mypromise":["11.8","15.4"],"constructor":["11.8","11.9","13.6","13.9","13.10","14.5","15.4","24.16"],"executor":["11.8","15.4"],"捕获执行器的代码错误":["11.8","15.4"],"try":["11.8","15.4"],"executor执行器":["11.8","15.4"],"进入会立即执行":["11.8","15.4"],"resolve":["11.8","15.1","15.4"],"reject":["11.8","15.1","15.4"],"catch":["11.8","15.4"],"err":["11.8","15.4"],"状态值pending":["11.8","15.4"],"默认为pending":["11.8","15.4"],"promisestate":["11.8","15.1","15.3","15.4"],"发布订阅":["11.9"],"一种对象间一对多的依赖关系":["11.9"],"当一个对象的状态发送改变时":["11.9"],"所有依赖于它的对象都将得到状态改变的通知":["11.9"],"调度中心":["11.9","13.10"],"pubsub":["11.9","13.10"],"subscribers":["11.9","13.10"],"set":["11.9","13.10"],"上传文件base64流转formdata":["12.1"],"什么是设计模式":["13.1"],"设计模式的原则":["13.2"],"s":["13.2"],"single":["13.2"],"responsibility":["13.2"],"principle":["13.2"],"列子":["13.5","13.9","14.13"],"想必大家应该都经常会接触到这个模式":["13.5"],"比如":["13.5"],"我们使用原生dom事件绑定的时候":["13.5"],"addeventlistener":["13.5"],"load":["13.5"],"loaded":["13.5"],"vue中":["13.5"],"on":["13.5","22.13"],"emit":["13.5","24.17","24.18"],"的方法实现":["13.5"],"直接看源码":["13.5"],"eventsmixin":["13.5"],"hookre":["13.5"],"hook":["13.5","24.16"],"event":["13.5"],"fn":["13.5","17.4"],"vm":["13.5"],"为数组时":["13.5"],"循环执行":["13.5"],"array":["13.5","20.8"],"isarray":["13.5"],"for":["13.5"],"i":["13.5","25.12","25.15","25.30"],"自己实现一个简化版的evenetbus":["13.6"],"被观察者":["13.6"],"eventbus":["13.6"],"topic":["13.6"],"事件标识":["13.6"],"订阅模式":["13.7"],"响应式原理":["13.9"],"dep":["13.9"],"观察者列表":["13.9"],"subs":["13.9"],"addsub":["13.9"],"sub":["13.9"],"notify":["13.9"],"改写eventbus简化版":["13.10"],"添加调度中心后":["13.10"],"缓存列表":["13.10"],"观察者模式跟发布订阅者模式":["13.11"],"javascript设计模式与开发实践":["13.12","14.14"],"普通单例模式实现":["14.2"],"singlecase":["14.2"],"存储单例":["14.2"],"example":["14.2"],"判断是否存在单例":["14.2"],"return":["14.2","24.6","25.33"],"factorymode":["14.5"],"返回实例":["14.5"],"创建一个学生的对象":["14.8"],"包含姓名":["14.8"],"年龄":["14.8"],"地址等信息":["14.8"],"允许按步骤构造这个对象":["14.8"],"一个房东有多套房子":["14.11"],"他一个人想要租出去花费的时间跟精力会很大":["14.11"],"于是他找了中介帮他把房子租出去":["14.11"],"这个中介就相当于房东的代理":["14.11"],"房东":["14.11"],"landlord":["14.11"],"学习promise原理以及自己实现一个promise的目的主要是为了更好的使用promise":["15.0"],"ps":["15.0"],"实现promise对象":["15.1"],"promise是一个对象":["15.1"],"对象里面有一系列变量跟方法":["15.1"],"列如":["15.1"],"执行后的值":["15.1","15.3","15.4"],"promiseresult":["15.1","15.4"],"失败的方法":["15.1"],"成功的方法":["15.1","15.4"],"如果使用过程中有throw怎么办":["15.2"],"如果在":["15.2"],"中出现了":["15.2"],"实现then方法":["15.3"],"then方法接受两个可选的参数":["15.3"],"这两个参数必须是函数":["15.3"],"两个参数分别代表两个回调函数":["15.3"],"成功的回调跟失败的回调":["15.3"],"当":["15.3"],"为":["15.3"],"时执行成功的回调":["15.3"],"执行失败的回调":["15.3"],"then方法支持":["15.3"],"链式调用":["15.3"],"下一次的then方法的值来自于上一个then方法":["15.3"],"接下来我们实现then方法":["15.3"],"then":["15.3"],"onfulfilled":["15.3"],"onrejected":["15.3"],"如果不传":["15.3"],"就使用默认函数":["15.3"],"typeof":["15.3","20.27"],"value":["15.3","15.4"],"完整的代码":["15.4"],"成功的回调":["15.4"],"onfulfilledcallbacks":["15.4"],"失败的回调":["15.4"],"onrejectedcallbacks":["15.4"],"如果状态不是pending":["15.4"],"通过promises":["15.5"],"规范测试我们手写的promise":["15.5"],"promise是有多种规范的":["15.5"],"还有":["15.5"],"promise的中文翻译是承诺":["15.6"],"promises":["15.7"],"什么是原型":["16.0"],"原型分为显式原型":["16.0"],"和隐式原型":["16.0"],"proto":["16.0","16.4"],"显式原型":["16.0","16.4"],"也称作构造函数的原型对象":["16.0"],"构造函数具有显式原型":["16.0"],"实例具有隐式原型":["16.0"],"创建函数的两种方法":["16.2"],"字面量跟":["16.2"],"字面量方法的本质其实还是":["16.2"],"也就是说function也是一个构造函数":["16.2"],"函数是其实例":["16.2"],"对象的创建方法":["16.3"],"字面量":["16.3"],"object":["16.3","16.7","16.8"],"create":["16.3"],"什么是原型链":["16.4"],"通俗的说原型链就是多个":["16.4"],"相连形成的一个有层级的":["16.4"],"依赖关系":["16.4"],"构造函数的原型对象":["16.4"],"是一个对象":["16.4"],"那这个对象的隐式原型":["16.4"],"应该指向object构造函数的原型对象":["16.4"],"原型继承":["16.5"],"实例可以使用来自构造函数的":["16.5"],"属性":["16.5"],"与":["16.5"],"也就是":["16.5"],"prtotype":["16.7"],"isprototype":["16.7"],"setprototypeof":["16.8"],"instanceof方法":["16.9"],"判断一个对象是否在另一个对象的原型链上":["16.9"],"函数作用域":["17.2"],"定义函数时的花括号":["17.2"],"为函数作用域":["17.2"],"在函数作用域定义的变量":["17.2"],"块级作用域":["17.3"],"在":["17.3","20.4","20.27","22.7","24.18"],"中的内容就被认为块级作用域":["17.3"],"只有使用let声明的变量":["17.3"],"方法才具备块级作用域":["17.3"],"if块":["17.3"],"while块":["17.3"],"function块":["17.3"],"单独的块都可以被认为时let声明的块级作用域":["17.3"],"作用域链":["17.4"],"各个作用域访问变量和方法的顺序":["17.4"],"当我们使用一个变量时":["17.4"],"js会顺着作用域链一层一层的像上查找":["17.4"],"直到最顶层的全局作用域":["17.4"],"如果在全局作用域中没有找到该变量或者方法":["17.4"],"就返回undefined":["17.4"],"作用域链的存在":["17.4"],"使得内部作用域可以顺着作用域链访问到外部作用域的变量或者方法":["17.4"],"但是外部作用域去不能访问到内部作用域的变量或者方法":["17.4"],"闭包":["17.5"],"一个函数和对其周围状态":["17.5"],"lexical":["17.5"],"environment":["17.5"],"垃圾回收机制":["17.6"],"浏览器的":["17.6"],"标记清除":["17.7"],"js中最常用的":["17.7"],"垃圾回收方式":["17.7"],"javascript高级程序设计":["17.9"],"作为一个前端怎么能没有属于自己的博客呢":["18.0"],"个人博客的搭建主要是vuepress":["18.1"],"创建项目文件夹":["18.2"],"blog":["18.2"],"并进行初始化":["18.2"],"npm":["18.2","22.4","22.6","25.12","25.15","25.30"],"init":["18.2"],"官方推荐的目录结构":["18.3"],"大家可以按照这个结构去构建":["18.3"],"docs":["18.3","18.4","18.5"],"vuepress":["18.3","18.5"],"可选的":["18.3"],"components":["18.3"],"复制下面内容至":["18.4"],"readme":["18.4"],"md":["18.4"],"文件下":["18.4"],"home":["18.4"],"标识是否开启首页":["18.4"],"也可以给标题":["18.4"],"config":["18.5","22.10"],"配置主题的导航栏":["18.5"],"侧边栏":["18.5"],"搜索":["18.5"],"logo":["18.5"],"可以参考下列文件的配置":["18.5"],"module":["18.5","24.6","24.16","25.9"],"exports":["18.5","24.6","24.16","25.9"],"title":["18.5"],"树深遇鹿":["18.5"],"网站标题":["18.5"],"description":["18.5"],"生活不可能像你想象的那么好":["18.5"],"新建一个git仓库blog":["18.6"],"仓库需要是public":["18.6"],"typescript基础学习":["19.1"],"都2022年了":["20.0"],"typescript":["20.1","20.2","20.3","20.4","20.19","20.20","20.21","20.27"],"简介":["20.1"],"值得学吗":["20.2"],"我想很多人都跟我一样存在这样的疑问吧":["20.2"],"下面我列举几个我们需要学习":["20.2"],"获取":["20.3"],"命令行的":["20.3"],"中的基础类型":["20.4"],"数字":["20.6"],"number":["20.6"],"字符串":["20.7"],"string":["20.7"],"元组":["20.9"],"tuple":["20.9"],"元组类型允许表示一个已知元素数量和类型的数组":["20.9"],"各元素的类型不必相同":["20.9"],"也就是初始化的时候类型和":["20.9"],"大小":["20.9"],"以及确定的":["20.9"],"如果后续赋值类型":["20.9"],"枚举类型":["20.10"],"enum":["20.10"],"any类型":["20.11"],"void类型":["20.12"],"void":["20.12"],"undefined":["20.13"],"typescript里":["20.13"],"never":["20.14"],"类型表示的是那些永不存在的值的类型":["20.14"],"类型断言":["20.15"],"有时候你会遇到这样的情况":["20.15"],"你会比typescript更了解某个值的详细信息":["20.15"],"通常这会发生在你清楚地知道一个实体具有比它现有类型更确切的类型":["20.15"],"这种方式可以告诉编译器":["20.15"],"类型推断":["20.16"],"如果变量有默认值的话":["20.16"],"一般我们也不需要显式声明类型":["20.16"],"联合类型":["20.17"],"交叉类型":["20.18"],"交叉类型是将多个类型合并为一个类型":["20.18"],"这让我们可以把现有的多种类型叠加到一起成为一种类型":["20.18"],"它包含了所需的所有类型的特性":["20.18"],"中的接口":["20.19"],"接口定义了对象的外观":["20.19"],"interface":["20.19","20.22"],"person":["20.19"],"name":["20.19","25.34"],"中的函数":["20.20"],"我们可以定义函数参数和返回值的类型":["20.20"],"定义一个名为":["20.20"],"add":["20.20","22.6","22.7"],"的函数":["20.20"],"中的类":["20.21"],"跟":["20.21"],"一样":["20.21"],"我们可以使用":["20.21"],"关键字创建对象":["20.21"],"并且可以定义类中每条数据的类型":["20.21"],"类的":["20.22"],"可以通过接口来规定一个类它必须包含某些属性和方法":["20.22"],"把类当做接口使用":["20.23"],"类定义会创建两个东西":["20.23"],"泛型":["20.24"],"泛型指的是在定义函数":["20.24"],"接口":["20.24"],"类型时":["20.24"],"不预先指定具体的类型":["20.24"],"而是在使用的时候在指定类型限制":["20.24"],"泛型接口":["20.25"],"当我们不知道对象中的某个值是什么类型时":["20.25"],"可以使用泛型来传递该类型":["20.25"],"泛型类":["20.26"],"泛型类看上去与泛型接口差不多":["20.26"],"泛型类使用":["20.26"],"中的类型收窄":["20.27"],"中":["20.27","24.20"],"变量可以从不太精确的类型转移到更精确的类型":["20.27"],"这个过程称为类型收窄":["20.27"],"下面是一个简单的例子":["20.27"],"展示了当我们使用带有":["20.27"],"语句时":["20.27"],"如何将不太特定的":["20.27"],"https":["20.28"],"vue3":["21.1","22.12"],"项目demo":["22.1"],"一点点的":["22.2"],"创建项目":["22.4"],"安装vuejsx":["22.5"],"vite":["22.5","22.10"],"官方现在提供了官方的插件来支持在":["22.5"],"安装":["22.6"],"element":["22.6"],"plus":["22.6"],"install":["22.6"],"yarn":["22.6","22.7"],"pnpm":["22.6"],"如果需要使用":["22.6"],"配置路由":["22.7"],"安装路由":["22.7"],"router":["22.7","22.29"],"安装pinia":["22.9"],"如果你之前使用过":["22.9"],"vuex":["22.9"],"进行状态管理的话":["22.9"],"那么":["22.9"],"pinia":["22.9"],"就是一个类似的插件":["22.9"],"它是最新一代的轻量级状态管理插件":["22.9"],"按照尤雨溪的说法":["22.9"],"将不再接受新的功能":["22.9"],"建议将":["22.9"],"用于新的项目":["22.9"],"vite的一些基础配置":["22.10"],"配置文件别名":["22.10"],"ts":["22.10"],"import":["22.10","22.29"],"vue3新特性":["22.11"],"setup":["22.12"],"函数是":["22.12"],"composition":["22.12"],"api":["22.12","24.5","24.7","24.15"],"新特性的入口":["22.12"],"函数会在":["22.12"],"beforecreate":["22.12"],"生命周期":["22.13"],"你可以通过在生命周期钩子前面加上":["22.13"],"接受一个内部值并返回一个响应式且可变的":["22.14"],"对象仅有一个":["22.14"],"reactive":["22.15"],"返回对象的响应式副本":["22.15"],"影响所有嵌套":["22.15"],"property":["22.15"],"将每个":["22.15"],"都转换成":["22.15"],"computed":["22.16"],"作用跟vue2无差异":["22.16"],"接受一个":["22.16"],"getter":["22.16"],"并根据":["22.16"],"watcheffect":["22.17"],"watch":["22.17"],"立即执行传入的一个函数":["22.17"],"同时响应式追踪其依赖":["22.17"],"并在其依赖变更时重新运行该函数":["22.17"],"自动收集依赖源":["22.17"],"当依赖源变化的时候触发":["22.17"],"在初始化的时候回执行一次":["22.17"],"插值":["22.19"],"jsx":["22.19","22.22","22.24","22.27","22.28"],"class与style":["22.20"],"绑定":["22.20"],"class类名绑定有两种方式":["22.20"],"条件渲染":["22.22"],"tsx中只保留了":["22.22"],"v":["22.22","22.27"],"列表渲染":["22.24"],"同样":["22.24"],"tsx":["22.24","22.29"],"中也没有":["22.24"],"事件处理":["22.26"],"绑定事件使用的也是":["22.26"],"单大括号":["22.26"],"不过事件绑定不是以":["22.26"],"为前缀了":["22.26"],"model":["22.27"],"tsx是支持v":["22.27"],"slot插槽":["22.28"],"定义插槽":["22.28"],"tsx中是没有":["22.28"],"slot":["22.28"],"标签的":["22.28"],"定义插槽需要使用":["22.28"],"使用tsx实现递归组件":["22.29"],"菜单":["22.29"],"主要功能就是根据路由信息自动取生成菜单":["22.29"],"效果如下":["22.29"],"代码如下":["22.29"],"如果需要控制权限啥的":["22.29"],"自己在路由信息的":["22.29"],"meta":["22.29","24.5","24.6"],"中添加对应的参数":["22.29"],"然后在":["22.29"],"menuitem":["22.29"],"中自行控制":["22.29"],"index":["22.29","25.5"],"routes":["22.29"],"from":["22.29"],"webpack5":["23.1","25.6"],"接上回":["24.0"],"概念":["24.2","24.13"],"loader":["24.2","24.3","24.4","24.5","24.6","24.8","24.9","24.10","24.11","25.4","25.6","25.14"],"loader的特性":["24.3"],"支持链式调用":["24.3"],"链中的每个":["24.3"],"会将转换应用在已处理过的资源上":["24.3"],"一组链式的":["24.3"],"执行顺序":["24.4"],"根据配置文件中的":["24.4"],"enforce":["24.4"],"参数分类":["24.4"],"pre":["24.4"],"前置":["24.4"],"normal":["24.4"],"普通":["24.4"],"inline":["24.4"],"内联":["24.4"],"post":["24.4"],"后置":["24.4"],"没有enforce就是normal":["24.4"],"loader接收的参数":["24.5"],"是导出为一个函数的":["24.5"],"node":["24.5","24.15","25.24"],"模块":["24.5"],"该函数在":["24.5"],"转换资源的时候调用":["24.5"],"给定的函数将调用":["24.5"],"并通过":["24.5"],"上下文访问":["24.5"],"content":["24.5","24.6"],"资源输入":["24.5"],"对于第一个执行的":["24.5"],"为资源文件的内容":["24.5"],"后续执行的":["24.5"],"则为前一个":["24.5"],"的执行结果":["24.5"],"sourcemap":["24.5","25.20"],"可选参数":["24.5"],"代码的sourcemap结构":["24.5"],"loader分类":["24.6"],"同步":["24.6"],"map":["24.6","25.20"],"callback":["24.6"],"方法则更灵活":["24.6"],"因为它允许传递多个参数":["24.6"],"而不仅仅是":["24.6"],"一些常用的loader":["24.7"],"方法名":["24.7"],"含义":["24.7"],"用法":["24.7"],"clean":["24.8"],"清楚":["24.8"],"文件中的console":["24.8"],"xxx":["24.8","25.20"],"babel":["24.9","25.11","25.29"],"作用":["24.9","24.10","24.11","24.17","24.18","24.19","24.20"],"编译":["24.9"],"代码":["24.9"],"将":["24.9"],"es6":["24.9","25.11"],"手写":["24.10","24.11"],"将文件原封不动输出出去":["24.10"],"下载包":["24.10"],"style":["24.11","25.5","25.14"],"动态创建":["24.11"],"插入":["24.11"],"中的样式代码":["24.11"],"使样式生效":["24.11"],"loaders":["24.11"],"styleloader":["24.11"],"pitch":["24.11"],"插件是":["24.13"],"plugin":["24.14","24.15","24.16","24.20","25.29"],"工作原理":["24.14"],"webpack":["24.14","24.15","24.18","24.19","24.20","25.3","25.4","25.12","25.22","25.32","25.34"],"就像一条生产线":["24.14"],"要经过一系列处理流程后才能将源文件转换成输出结果":["24.14"],"这条生产线上的每个处理流程的职责都是单一的":["24.14"],"多个流程之间有存在依赖关系":["24.14"],"只有完成当前处理后才能交给下一个流程去处理":["24.14"],"插件就像是一个插入到生产线中的一个功能":["24.14"],"在特定的时机对生产线上的资源做处理":["24.14"],"tapable":["24.14"],"来组织这条复杂的生产线":["24.14"],"构建对象":["24.15"],"compiler":["24.15","24.16","24.17","24.18"],"模块是":["24.15"],"的主要引擎":["24.15"],"它通过":["24.15"],"cli":["24.15"],"或者":["24.15"],"传递的所有选项创建出一个":["24.15"],"compilation":["24.15"],"开发一个插件":["24.16"],"最简单的插件":["24.16"],"plugins":["24.16"],"testplugin":["24.16"],"webpack读取配置时":["24.16"],"会执行插件":["24.16"],"webpack创建":["24.16"],"遍历所有插件":["24.16"],"调用插件的":["24.16"],"apply":["24.16"],"注册":["24.16"],"bannerwebpackplugin":["24.17"],"给打包输出文件添加注释":["24.17"],"开发思路":["24.17","24.18","24.20"],"需要打包输出前添加注释":["24.17"],"需要使用":["24.17","24.18"],"hooks":["24.17","24.18"],"cleanwebpackplugin":["24.18"],"打包输出前将上次打包内容清空":["24.18"],"如何在打包输出前执行":["24.18"],"analyzewebpackplugin":["24.19"],"分析":["24.19"],"打包资源大小":["24.19"],"并输出分析文件":["24.19"],"inlinechunkwebpackplugin":["24.20"],"打包生成的":["24.20"],"runtime":["24.20","25.29"],"文件太小了":["24.20"],"额外发送请求性能不好":["24.20"],"所以需要将其内联到":["24.20"],"从而减少请求数量":["24.20"],"我们需要借助":["24.20"],"从0开始构建自己的webpack5知识体系":["24.21"],"前言":["25.0"],"基本配置":["25.1"],"首先初始化一下项目":["25.1"],"并建立一下文件":["25.1"],"使用webpack":["25.3"],"开发模式":["25.3"],"npx":["25.3"],"配置文件":["25.4"],"在使用webpack之前先认识一下webpack的一些基本概念":["25.4"],"五大核心概念":["25.4"],"entry":["25.4"],"入口":["25.4"],"指示":["25.4"],"从哪个文件开始打包":["25.4"],"output":["25.4"],"输出":["25.4","25.9"],"打包完的文件输出到哪里去":["25.4"],"如何命名等":["25.4"],"加载器":["25.4"],"本身只能处理":["25.4"],"等资源":["25.4"],"其他资源需要借助":["25.4"],"处理样式资源":["25.5"],"在src中新建一个":["25.5"],"文件夹":["25.5"],"然后新增一个":["25.5"],"文件":["25.5","25.20","25.32","25.33"],"随便在里面写一点样式":["25.5"],"并在":["25.5"],"处理图片":["25.6"],"字体等资源":["25.6"],"过去在":["25.6"],"webpack4":["25.6"],"时":["25.6"],"我们处理图片资源通过":["25.6"],"进行处理":["25.6"],"现在":["25.6"],"处理字体":["25.7"],"视频":["25.7"],"音频等资源":["25.7"],"添加字体":["25.7"],"图标":["25.7"],"在打开阿里巴巴矢量图标库open":["25.7"],"修改输出资源的名称跟路径":["25.9"],"现在的打包文件都是全部放在dist根目录下面的":["25.9"],"看起来比较杂乱":["25.9"],"我们需要把文件根据文件属性放到不同的目录下面":["25.9"],"修改配置文件":["25.9"],"js兼容性处理":["25.11"],"浏览器对":["25.11"],"的一些":["25.11"],"语法兼容性不太好":["25.11"],"所以我们需要借助":["25.11"],"编译器":["25.11"],"来将":["25.11"],"语法转化为":["25.11"],"向后兼容":["25.11"],"的javascript语法":["25.11"],"从而能够运行在当前和旧版本的浏览器或其他环境中":["25.11"],"js的静态检查":["25.12"],"静态检查是为了统一代码风格":["25.12"],"减少bug":["25.12"],"节约开发时间":["25.12"],"安装eslint":["25.12"],"eslint":["25.12"],"提取css文件":["25.14"],"之前我们都是使用":["25.14"],"来处理css":["25.14"],"它把css":["25.14"],"打包到js中":["25.14"],"在js文件加载的时候":["25.14"],"css兼容性处理":["25.15"],"css3的一些新特性在有的浏览器中不兼容":["25.15"],"需要添加后缀或者前缀才能生效":["25.15"],"下载依赖":["25.15"],"压缩css":["25.16"],"引入less或者sass":["25.17"],"less跟sass跟css一样不能被webpack识别":["25.17"],"需要借助loader来编译":["25.17"],"less比起sass要简单许多":["25.17"],"区分环境":["25.18"],"本地开发和部署线上":["25.18"],"各自所看重的点是不一样的":["25.18"],"本地环境":["25.18"],"不需要有输出文件":["25.18"],"打包文件都在内存中":["25.18"],"需要打印":["25.18"],"debug":["25.18"],"信息":["25.18"],"需要":["25.18"],"热更新":["25.18"],"源代码映射":["25.20"],"是一个用来生成源代码与构建后代码一一映射的文件的方案":["25.20"],"它会生成一个":["25.20"],"里面包含源代码和构建后代码每一行":["25.20"],"每一列的映射关系":["25.20"],"当构建后代码出错了":["25.20"],"会通过":["25.20"],"hotmodulereplacement":["25.22"],"hmr":["25.22"],"热模块替换":["25.22"],"在程序运行中":["25.22"],"替换":["25.22"],"添加或删除模块":["25.22"],"而无需重新加载整个页面":["25.22"],"开发时我们修改了其中一个模块代码":["25.22"],"默认会将所有模块全部重新打包编译":["25.22"],"速度很慢":["25.22"],"include":["25.24"],"exclude":["25.24"],"开发时我们需要使用第三方的库或插件":["25.24"],"所有文件都下载到":["25.24"],"缓存":["25.25"],"cache":["25.25"],"利用缓存可以大幅度提高构建速度":["25.25"],"每次打包时":["25.25"],"文件都要经过":["25.25"],"多进程":["25.26"],"thread":["25.26"],"如果项目规模较小或者打包速度还可以的话":["25.26"],"不建议配置多进程":["25.26"],"因为每一个进程开启和通信都需要耗费一定的时间":["25.26"],"每个进程启动就有大约为":["25.26"],"600ms":["25.26"],"左右开销":["25.26"],"这样反而会增加时间成本":["25.26"],"获取电脑的cpu核心数":["25.26"],"每个电脑":["25.26"],"cpu核心数":["25.26"],"transform":["25.29"],"禁用了":["25.29"],"自动对每个文件的":["25.29"],"图片压缩":["25.30"],"minimizer":["25.30"],"开发如果项目中引用了较多图片":["25.30"],"那么图片体积会比较大":["25.30"],"将来请求速度比较慢":["25.30"],"我们可以对图片进行压缩":["25.30"],"减少图片体积":["25.30"],"注意":["25.30"],"如果项目中图片都是在线链接":["25.30"],"那么就不需要了":["25.30"],"本地项目静态图片才需要进行压缩":["25.30"],"安装依赖":["25.30"],"代码分割":["25.32"],"split":["25.32"],"打包代码时会将所有":["25.32"],"文件打包到一个文件中":["25.32"],"体积太大了":["25.32"],"我们如果只要渲染首页":["25.32"],"就应该只加载首页的":["25.32"],"其他文件不应该加载":["25.32"],"所以我们需要将打包生成的文件进行代码分割":["25.32"],"生成多个":["25.32"],"渲染哪个页面就只加载某个":["25.32"],"这样加载的资源就少":["25.32"],"速度就更快":["25.32"],"主要做了两件事":["25.32"],"分割文件":["25.32"],"将打包生成的文件进行分割":["25.32"],"按需加载":["25.32","25.33"],"需要哪个文件就加载哪个文件":["25.32"],"多入口代码分割":["25.32"],"新建一个demo演示":["25.32"],"目录结构":["25.32"],"public":["25.32"],"sum":["25.32"],"app":["25.32"],"package":["25.32"],"新增":["25.33"],"count":["25.33"],"export":["25.33"],"default":["25.33"],"统一命名":["25.34"],"文件指纹策略是将文件名后面加上":["25.34"],"值":["25.34"],"例如我们在基础配置中用到的":["25.34"],"filename":["25.34"],"ext":["25.34"],"这里里面":["25.34"],"包起来的":["25.34"],"就叫占位符":["25.34"],"它们都是什么意思呢":["25.34"],"请看下面这个表":["25.34"],"占位符":["25.34"],"解释":["25.34"],"文件后缀名":["25.34"],"runtime配置":["25.35"],"问题":["25.35"],"当我们修改":["25.35"],"math":["25.35"],"文件再重新打包的时候":["25.35"],"因为":["25.35"],"contenthash":["25.35"],"原因":["25.35"],"preload":["25.36"],"prefetch":["25.36"],"告诉浏览器立即加载资源":["25.36"],"core":["25.37"],"pwa":["25.38"],"webpack原理篇":["25.39"]},{"0":["2.5","3.1","5.5","9.18","9.24","13.5","22.17","25.11"],"1":["6.6","8.0","8.1","9.5","9.18","14.4","14.7","14.10","14.11","22.28","25.28"],"2":["2.6","8.0","9.5","22.28","25.21","25.32"],"3":["2.6","24.17","24.18","24.19"],"4":["2.6","9.5","9.19","24.4","25.4","25.31"],"5":["22.8","25.4","25.32"],"6":["25.32"],"7":["25.8","25.32"],"8":["25.32"],"9":["2.5","25.10"],"10":["25.13"],"11":["7.14","7.15"],"25":["6.13"],"40":["17.4"],"50":["9.25","17.4"],"85":["2.5"],"100":["5.5","17.4"],"150":["9.25"],"200":["9.24","17.4"],"300":["9.2"],"1500":["14.11"],"4444":["25.33"],"20000":["2.6"],"86176":["24.11"],"1234567890":["6.13"],"利用h5的":["0.0"],"拖拽":["0.0"],"drop":["0.2","0.7","0.12"],"dragenter":["0.2"],"dragover":["0.2"],"dragleave":["0.2"],"filelist":["0.3","0.4"],"对象":["0.3","22.16","24.18"],"也可以来自拖放操作生成的":["0.3"],"datatransfer":["0.3"],"还可以是来自在一个":["0.3"],"htmlcanvaselement":["0.3"],"上执行":["0.3"],"mozgetasfile":["0.3"],"方法后返回结果":["0.3"],"的几个相关事件":["0.3"],"onload":["0.3","1.5"],"filelist对象":["0.4"],"js":["0.6","0.8","0.10","1.4","1.8","2.2","9.4","9.8","9.9","9.10","9.17","9.22","11.0","11.1","11.2","11.4","11.5","14.8","15.1","15.5","16.0","16.2","16.4","16.7","16.9","17.2","20.3","20.9","20.23","20.24","20.26","22.9","22.16","22.17","22.20","22.24","22.27","24.4","24.5","24.17","24.18","25.1","25.3","25.11","25.14","25.16","25.22","25.24","25.26","25.38"],"div":["0.6","0.9","22.20"],"class":["0.6","14.8","15.1","20.22","20.23","20.26"],"main":["0.6","24.5","25.3","25.33","25.35"],"document":["0.7","0.8","0.9","9.8","9.9","9.10","9.22","9.25","25.33"],"getelementbyid":["0.7","9.8","9.9","9.10","9.22","9.25","25.33"],"文件流数组":["0.7"],"fileblodarr":["0.7"],"文件数组":["0.7"],"filearr":["0.7"],"拖拽上传事件":["0.7"],"function":["0.7","7.15","11.0","11.1","11.2","11.3","11.4","11.5","16.4","16.9","17.2","20.20","20.24","20.27","24.8","24.11","25.11"],"获取input元素":["0.8"],"let":["0.8","0.9","8.1","9.4","9.8","9.9","9.10","9.22","11.0","11.6","14.5","17.3","20.9","20.19"],"fileinput":["0.8"],"创建单个文件预览":["0.9"],"filediv":["0.9"],"createelement":["0.9"],"删除按钮":["0.9"],"removediv":["0.9"],"id":["0.9","9.2","14.11"],"length":["0.9","8.1","11.8","13.5","15.4","25.26"],"innerhtml":["0.9"],"文件名":["0.9","1.7","25.34"],"filename":["0.9","1.7","25.9"],"p":["0.9"],"name":["0.9","3.1","14.8","14.11","20.18","20.21","20.25","25.33"],"title":["0.9"],"缩略图":["0.9"],"图片直接展示":["0.9"],"其他文件根据文件类型展示不同的缩略图":["0.9"],"通过对id的检验识别出当前需要删除的文件":["0.10"],"目前因为是根据删除按钮的id判断":["0.10"],"所以删除一个文件":["0.10"],"会重新加载一次dom":["0.10"],"删除文件操作":["0.10"],"450px":["0.11"],"border":["0.11"],"1px":["0.11"],"dashed":["0.11"],"a89b9b":["0.11"],"y":["0.11","9.16"],"滚动条样式":["0.11"],"webkit":["0.11"],"scrollbar":["0.11"],"4px":["0.11"],"thumb":["0.11"],"radius":["0.11"],"10px":["0.11"],"在做文件拖拽上传的时候需要将":["0.12"],"的默认行为取消":["0.12"],"不然无法触发":["0.12"],"前端文件下载应该是一个老生常谈的问题了":["1.0"],"a标签":["1.1"],"浏览器可以打开预览的文件":["1.2"],"的问题":["1.2"],"例如":["1.2","17.7","22.26","24.4"],"txt":["1.2"],"png":["1.2","9.17","18.4","18.5"],"jpg等文件":["1.2"],"模拟a标签下载":["1.3"],"然后通过":["1.4"],"去模拟":["1.4"],"a":["1.4","13.5","15.1","15.7","17.2","17.3","25.11"],"标签点击来下载文件":["1.4"],"兼容性查询":["1.4","1.5"],"可以看出来主流浏览器基本上都兼容此方法":["1.4","1.5"],"截图来源于":["1.4","1.5"],"can":["1.4"],"i":["1.4","24.9","24.10","25.16","25.32"],"通过":["1.5","24.18"],"回调函数的":["1.5"],"result":["1.5"],"属性返回":["1.5"],"data":["1.5","10.4"],"url":["1.5"],"格式的字符串":["1.5"],"base64编码":["1.5"],"href":["1.6","18.5"],"应该是最简单直接的下载了吧":["1.6"],"不过大部分时间都不能满足我们的需求":["1.6"],"所以现在用的比较少了":["1.6"],"下载文件":["1.7"],"param":["1.7"],"string":["1.7","20.9","20.18","20.19","20.21","20.22","20.25","20.27"],"downloadurl":["1.7"],"请求的地址":["1.7"],"同样不能下载浏览器可以浏览的文件":["1.8"],"说实话":["1.8"],"iframe接触的比较少":["1.8"],"如果有错误或者不足的地方请大家补充":["1.8"],"谢谢":["1.8"],"用过的下载文件的方法":["1.9"],"if":["2.0","2.3","11.1","11.3","11.4","11.7","11.8","15.4","17.3","22.22"],"else":["2.0","2.1","2.3","13.5"],"的项目代码吧":["2.0"],"逻辑或":["2.1"],"的短路运算":["2.1"],"若左边能转成true":["2.1"],"例子":["2.2"],"条件为":["2.2"],"true":["2.2","9.6","13.5","17.3","18.4"],"时返回1":["2.2"],"反之返回0":["2.2"],"const":["2.2","2.5","7.12","15.3","22.16","22.17","22.29","24.7","25.4","25.12","25.26"],"fn":["2.2","11.1","11.5","11.6","17.2"],"更高":["2.3"],"但是我想大家应该都觉得它写起来比较麻烦吧":["2.3"],"反正我觉得很麻烦":["2.3"],"例":["2.3"],"有a":["2.3"],"b":["2.3","2.6","15.5","25.11"],"c":["2.3","2.6","9.21","24.11"],"d四种种类型":["2.3"],"在a":["2.3"],"都是根据不同得参数使用不同得数据":["2.4"],"算法":["2.4"],"函数":["2.4","6.11","7.6","11.2","22.28"],"策略模式就是将一系列算法封装起来":["2.4"],"getdiscount":["2.5"],"userkey":["2.5"],"普通会员":["2.5"],"return":["2.5","2.6","11.7","11.8","13.5","14.5","15.4","17.4","22.29","25.11"],"年费会员":["2.5"],"我们有很多的方法去优化我们的代码":["2.7"],"提高我们代码的可读性":["2.7"],"就不多说了":["3.0"],"写这篇文章的初衷主要是丰富自己的知识和解决遇到的问题":["3.0"],"因为我基本上没接触过":["3.0"],"child1":["3.1"],"来自parent的消息":["3.1"],"frameborder":["3.1"],"同时还可以使用":["3.1"],"window":["3.1","7.0","7.4","8.1"],"onhashchange":["3.1"],"来监听参数的变化":["3.1"],"减少if":["4.1"],"问我能不能做一个九宫格抽奖来决定我们晚上吃什么":["5.0"],"flex":["5.1"],"就足够了":["5.1"],"抽奖盒子固定宽高":["5.1"],"v":["5.3","22.24"],"for":["5.3","22.24"],"动态生成九个":["5.3"],"item":["5.3","5.4"],"select":["5.3"],"样式是用来控制转动的时候当前选中的":["5.3"],"为每一个":["5.4"],"添加单机事件":["5.4"],"appoint":["5.5"],"index":["5.5","22.7","24.5","24.20"],"value":["5.5","11.8","22.14","22.17"],"定时器":["5.5"],"timer":["5.5","11.6"],"圈数":["5.5"],"turnsnumbers":["5.5"],"转多少圈中奖":["5.5"],"初始转动速度":["5.5"],"剩余几个中奖":["5.5"],"surplusnum":["5.5"],"博客主要记录一些学习的文章":["5.6","25.39"],"什么是正则表达式":["6.0"],"变量":["6.1"],"new":["6.1","11.7","13.6","15.3","25.7"],"regexp":["6.1","11.7"],"正则表达式":["6.1"],"ig":["6.1"],"简写":["6.1"],"匹配字符串的结尾":["6.2"],"匹配前面的子表达式零次或多次":["6.2"],"至少匹配前面的子表达式一次":["6.2"],"只能匹配前面的子表达式零次或一次":["6.2"],"n":["6.2","8.1","20.21"],"n是一个非负整数":["6.2"],"何时使用正则表达式":["6.3"],"验证字符串格式":["6.4"],"查找敏感词":["6.5"],"字符串":["6.7","6.11"],"只要字符串格式满足正则表达式的规则就会返回true":["6.7"],"否则返回false":["6.7"],"缺点":["6.11"],"如果只调用一次exec":["6.11"],"即使正则表达式后加了":["6.11"],"千分符":["6.13"],"var":["6.13","7.5","17.2"],"str":["6.13"],"reg":["6.13"],"d":["6.13","9.21","15.5","18.2","24.10","25.12","25.15","25.30","25.32"],"验证字符串的方法是test":["6.14"],"查找字符串的方法有多个":["6.14"],"timeoutid":["7.1"],"settimeout":["7.1","7.9","10.5"],"这是一个可选语法":["7.2"],"你可以使用字符串而不是":["7.2"],"在":["7.2","9.28","22.12","24.20"],"毫秒之后编译和执行字符串":["7.2"],"使用该语法是":["7.2"],"表示定时器的编号":["7.3"],"这个值可以传递给":["7.3"],"cleartimeout":["7.3"],"来取消该定时器":["7.3"],"setinterval":["7.4","7.7"],"intervalid":["7.5"],"延迟":["7.6"],"毫秒后执行的":["7.6"],"code":["7.6"],"用来标识通过":["7.7"],"创建的计时器":["7.7"],"这个值可以用来作为":["7.7"],"实际延时比设定值更久的原因":["7.8"],"最小延时":["7.10"],"之外":["7.10"],"chrome":["7.11"],"safari":["7.11"],"就会发现":["7.12"],"每次的结果都会存有差异":["7.12"],"javascript":["7.12","17.6"],"starttime":["7.12"],"遇到的关于无法清除定时器的问题":["7.13"],"time":["7.14"],"定义一个函数":["7.14","7.15"],"实现倒计时功能":["7.14","7.15"],"countdown":["7.15"],"事件循环":["7.16"],"这个语音上传有两种方式":["8.0"],"直接选择文件上传":["8.0"],"输入文字":["8.0"],"atob":["8.1"],"split":["8.1"],"使用atob":["8.1"],"将base64":["8.1"],"转为文本文件":["8.1"],"其实是因为工作中有一个小需求":["9.0"],"就是给特定的区域做水印":["9.0"],"思来想去":["9.0"],"canvas":["9.1","9.8","9.9","9.10","9.22","9.27","9.28"],"简介":["9.1"],"width":["9.2","25.5"],"height":["9.2"],"只有":["9.3"],"ie9":["9.3"],"ie应该没有人在用了吧":["9.3"],"之下的浏览器不支持":["9.3"],"比如":["9.4","10.1","20.9","24.15"],"webgl":["9.4"],"使用了基于":["9.4"],"opengl":["9.4"],"es的3d":["9.4"],"上下文":["9.4","22.28"],"experimental":["9.4"],"获取canvas元素对象":["9.4"],"创建路径起始点":["9.5"],"调用绘制方法去绘制出路径":["9.5"],"把路径封闭":["9.5"],"一旦路径生成":["9.5"],"通过描边或填充路径区域来渲染图形":["9.5"],"下面是需要用到的方法":["9.5"],"beginpath":["9.5"],"新建一条路径":["9.5"],"路径一旦创建成功":["9.5"],"图形绘制命令被指向到路径上生成路径":["9.5"],"moveto":["9.5"],"从":["9.6"],"弧度开始到":["9.6"],"弧度结束":["9.6"],"anticlosewise":["9.6"],"是布尔值":["9.6"],"表示逆时针":["9.6"],"false":["9.6"],"表示顺时针":["9.6"],"默认是顺时针":["9.6"],"注意":["9.6","9.17"],"这里的度数都是弧度":["9.6"],"在顺时针的情况下":["9.6"],"如果两个参数的差为math":["9.6"],"pi":["9.6"],"线条":["9.7"],"上下各占线宽的一半":["9.8"],"ctx":["9.8","9.9","9.25","22.28"],"getcontext":["9.9","9.24","9.25"],"2d":["9.9","9.24","9.25"],"每个部分都有各自独立的矩形拐角":["9.10"],"miter":["9.10"],"默认":["9.10"],"通过延伸相连部分的外边缘":["9.10"],"使其相交于一点":["9.10"],"形成一个额外的菱形区域":["9.10"],"linedashoffset":["9.11"],"属性来制定虚线样式":["9.11"],"方法接受一个数组":["9.11"],"来指定线段与间隙的交替":["9.11"],"位置填充指定的文本":["9.12"],"绘制的最大宽度是可选的":["9.12"],"stroketext":["9.12"],"位置绘制文本边框":["9.12"],"至于它们两个的区别":["9.12"],"sheight":["9.13"],"dx":["9.13"],"dy":["9.13"],"dwidth":["9.13"],"dheight":["9.13"],"参数表示绘制的图片":["9.13"],"表示":["9.13"],"的矩形":["9.13"],"裁剪":["9.13"],"选择框的左上角":["9.13"],"canvas状态存储在栈中":["9.14"],"每当save":["9.14"],"方法被调用后":["9.14"],"当前的状态就被推送到栈中保存":["9.14"],"一个绘画状态包括":["9.14"],"当前应用的变形":["9.14"],"即移动":["9.14"],"旋转和缩放":["9.14"],"strokestyle":["9.14"],"fillstyle":["9.14","9.24"],"globalalpha":["9.14"],"linewidth":["9.14"],"linecap":["9.14"],"linejoin":["9.14"],"miterlimit":["9.14"],"变形":["9.15"],"x":["9.16","15.3","17.4","20.9","20.20"],"接受两个参数":["9.16"],"是左右偏移量":["9.16"],"是上下偏移量":["9.16"],"它是顺时针方向的":["9.17"],"以弧度为单位的值":["9.17"],"旋转的中心是坐标原点":["9.17"],"image":["9.17"],"分别是横轴和纵轴的缩放因子":["9.18"],"可以为负数":["9.18"],"值默认对":["9.18"],"小于":["9.18"],"则缩小":["9.18"],"大于则放大":["9.18"],"如果参数为负实数":["9.18"],"相当于以":["9.18"],"e":["9.20"],"f":["9.20"],"这个方法是将当前的变形矩阵乘上一个基于自身参数的矩阵":["9.20"],"如下面的矩阵所示":["9.20"],"一个简单的案例":["9.22"],"组合与裁剪":["9.23"],"blue":["9.24"],"fillrect":["9.24","9.25"],"source":["9.24","24.11","25.18","25.20"],"over":["9.24"],"绘制一个矩形":["9.25"],"动画":["9.26"],"清空":["9.27"],"除非接下来要画的内容会完全充满":["9.27"],"例如背景图":["9.27"],"上绘制内容是用":["9.28"],"canvas教程":["9.29"],"什么是eventloop":["10.0"],"evnetloop是js的运行机制":["10.0"],"不进入主线程":["10.1"],"而进入任务队列的任务":["10.1"],"只有引擎认为某个异步任务可以执行了":["10.1"],"ajax":["10.1"],"操作从服务器得到了结果":["10.1"],"该任务":["10.1"],"该过程可能产生一系列异步任务":["10.2"],"这些异步任务分别进入对应的任务队列":["10.2"],"宏任务队列":["10.2"],"macrotask":["10.2"],"queue":["10.2"],"跟":["10.2","25.17"],"微任务队列":["10.2"],"microtask":["10.2"],"概念性的东西都说完了":["10.3"],"resolve":["10.4","15.3","22.10"],"reject":["10.4","15.3"],"promise1":["10.4"],"promise2":["10.4","15.3"],"then":["10.4"],"fn2":["10.5"],"await":["10.5"],"settimeout1":["10.5"],"看完一定懂的":["10.6"],"原型链":["11.0","16.5"],"上即可":["11.0"],"l代表左侧的实列":["11.0"],"r代表右侧的类型":["11.0"],"instance":["11.0"],"of":["11.0","13.5"],"l":["11.0","13.5"],"r":["11.0"],"获取类型的原型对象prototype":["11.0"],"返回对象":["11.1"],"实例":["11.1","24.15"],"如果构造函数有返回对象":["11.1"],"则对象实例就是构造函数返回的对象":["11.1"],"否则就返回this作为对象实例":["11.1"],"mynew":["11.1"],"fn必须是一个函数":["11.1"],"typeof":["11.1","11.4","11.7"],"throw":["11.1","11.4","15.2","15.3"],"需要一个一个的列举出来":["11.2"],"立即执行":["11.2"],"prototype":["11.2","11.3","11.4","14.2","16.2"],"mycall":["11.2"],"context":["11.2","11.3","11.4","22.12"],"arg":["11.2","11.3","20.24","25.11"],"如果context不存在":["11.2","11.3"],"undefined":["11.2","11.3"],"nul":["11.2","11.3"],"myapply":["11.3"],"则指向window":["11.3"],"方法":["11.4","16.7","16.8"],"且绑定过程中提供的this被忽略":["11.4"],"继承原函数的this对象":["11.4"],"但是参数还是会使用":["11.4"],"mybind":["11.4"],"this必须是一个函数":["11.4"],"error":["11.4"],"debounce":["11.5"],"delay":["11.5","11.6"],"保存一个timer":["11.5"],"throttle":["11.6"],"保存timer":["11.6"],"cache":["11.7"],"weakmap":["11.7"],"判断是否是引用类型":["11.7"],"如果不是则直接返回":["11.7"],"null":["11.7","11.8","14.5","24.6"],"object":["11.7"],"判断是否是特殊的对象类型":["11.7"],"date":["11.7"],"成功的回调":["11.8"],"onfulfilledcallbacks":["11.8"],"失败的回调":["11.8"],"onrejectedcallbacks":["11.8"],"执行后的值":["11.8"],"promiseresult":["11.8","15.3"],"成功的方法":["11.8"],"如果状态不是pending":["11.8"],"则直接返回":["11.8","15.4"],"因为状态已经改变就不可再次改变":["11.8","15.4"],"状态置为成功的状态fulfiled":["11.8","15.4"],"执行后的值改为传进来的值":["11.8","15.4"],"查看是否存在可执行的回调":["11.8","15.4"],"while":["11.8","15.4","17.3"],"shift":["11.8","15.4"],"console":["11.8","13.9","14.2","15.4","17.3","17.4","22.17","25.11","25.32","25.33"],"log":["11.8","13.9","14.2","15.4","17.3","17.4","22.17","25.11","25.32","25.33"],"失败的方法":["11.8","15.4"],"缓存列表":["11.9","13.6"],"添加订阅":["11.9"],"subscribe":["11.9","13.10"],"ob":["11.9","13.6","13.10"],"add":["11.9","13.6","13.10","22.9"],"移除订阅":["11.9"],"unsubscribe":["11.9","13.10"],"delete":["11.9","13.10"],"canvas基础":["12.1"],"设计模式":["13.1","13.12","14.14"],"design":["13.1"],"单一职责原则":["13.2"],"一个程序只做好一件事":["13.2"],"如果功能过于复杂就拆分开":["13.2"],"每个部分保持独立":["13.2"],"o":["13.2"],"openclosed":["13.2"],"概念":["13.4","13.8"],"events":["13.5"],"push":["13.5"],"optimize":["13.5"],"cost":["13.5"],"by":["13.5"],"using":["13.5"],"boolean":["13.5","20.21"],"flag":["13.5"],"marked":["13.5"],"at":["13.5"],"registration":["13.5"],"instead":["13.5"],"hash":["13.5","25.35"],"lookup":["13.5"],"test":["13.5","24.4","24.5"],"hashookevent":["13.5"],"observers":["13.6"],"set":["13.6"],"添加观察":["13.6"],"addobserver":["13.6"],"取消观察":["13.6"],"removeobserver":["13.6"],"foreach":["13.9"],"update":["13.9"],"观察者":["13.9"],"watcher":["13.9"],"将":["13.9","20.27","25.9"],"target":["13.9"],"指向当前观察者":["13.9"],"do":["13.9"],"something":["13.9"],"publish":["13.10"],"topic":["13.10"],"都是为了实现一对多的依赖关系":["13.11"],"单例模式":["14.0"],"列子":["14.1","14.4"],"在项目中的":["14.1"],"this":["14.2","14.5","14.8","15.3","22.12"],"初始化":["14.2"],"init":["14.2","14.5","22.4"],"初始化操作":["14.2"],"我是单例":["14.2"],"获取实例的静态方法":["14.2"],"getexample":["14.2"],"工厂模式":["14.3"],"操作函数":["14.5"],"example":["14.5"],"建造者模式":["14.6"],"建造者":["14.8"],"carbuilder":["14.8"],"constructor":["14.8","15.1","16.2","20.21"],"代理模式":["14.9"],"houses":["14.11"],"一室一厅":["14.11"],"price":["14.11"],"单间配套":["14.11"],"享元模式":["14.12"],"flyweight":["14.12"],"线程池":["14.13"],"连接池":["14.13"],"高考考场":["14.13"],"我是不会承认主要目的是为了面试做准备的":["15.0"],"promise的出现是为了解决回调地狱":["15.0"],"等":["15.1"],"然后根据promises":["15.1"],"规范得知":["15.1"],"状态一经改变就不可再次改变":["15.1"],"就可以得出最基础的promise对象":["15.1"],"代码如下":["15.1"],"mypromise":["15.1","15.3"],"executor":["15.1"],"执行传进来的回调函数":["15.1"],"的话":["15.2"],"那就相当于执行了":["15.2"],"rejecte":["15.2"],"这样我们就需要用到":["15.2"],"reason":["15.3"],"成功":["15.3"],"resolvemicrotask":["15.3"],"queuemicrotask":["15.3"],"then执行阶段错误捕获":["15.3"],"try":["15.3"],"resolvepromise":["15.3"],"catch":["15.3"],"err":["15.3"],"状态置为失败的状态rejected":["15.4"],"测试我们的代码是否符合promises":["15.5"],"规范可以借助":["15.5"],"promises":["15.5"],"aplus":["15.5"],"tests":["15.5"],"来检测":["15.5"],"初始化项目":["15.5"],"npm":["15.5","24.9","24.10","25.16","25.32","25.38"],"它就像它的名字一样":["15.6"],"承诺它过一段时间会给你一个结果":["15.6"],"构造函数的显式原型":["16.0"],"和其实例的隐式原型":["16.0"],"都指向同一个地方":["16.0"],"原型对象":["16.0","16.4"],"同一个构造函数创建的实例的隐式原型":["16.0"],"相同":["16.0"],"并且都跟该构造函数的显式原型":["16.0"],"一致":["16.0"],"验证一下":["16.0"],"函数与对象":["16.1"],"构造函数也是一个函数":["16.2"],"可以通过new关键字创建一个实例的函数就是构造函数":["16.2"],"function的本质也是一个函数":["16.2"],"function是它自己的实例":["16.2"],"存在于function的显式原型":["16.2"],"中":["16.2","20.4","25.7"],"保存了指向function的一个":["16.2"],"引用":["16.2","25.5"],"验证":["16.2","16.4"],"构造函数创建":["16.3"],"跟函数一样":["16.3"],"字面量方法的本质是new":["16.3"],"创建的是一个没有原型的对象":["16.3"],"构造函数创建的对象的原型都指向其构造函数":["16.3"],"object也是一个构造函数":["16.3"],"也就是说构造函数的":["16.4"],"是object构造函数的一个实例":["16.4"],"原型链的终点是null":["16.4"],"object的原型对象":["16.4"],"的隐式原型":["16.4"],"就是null":["16.4"],"person构造函数":["16.4"],"继承":["16.5"],"了构造函数的":["16.5"],"实例本身没有这个属性或者方法":["16.5"],"那js会沿着":["16.5"],"原型相关的方法":["16.6"],"判断一个对象是否是另外一个对象的原型":["16.7"],"但是需要注意只要某个对象存在原型链上":["16.7"],"就会返回true":["16.7"],"该方法接收两个参数":["16.8"],"第一个是现有对象":["16.8"],"第二个是新设置的原型对象":["16.8"],"person":["16.9","20.18","20.21","20.25"],"什么是作用域":["17.0"],"作用域就是代码执行的环境":["17.0"],"在函数作用域外部无法访问":["17.2"],"外层变量":["17.2"],"referenceerror":["17.3"],"没有定义":["17.3"],"bar":["17.4"],"词法环境":["17.5"],"的引用捆绑在一起":["17.5"],"或者说函数被引用包围":["17.5"],"这样的组合就是":["17.5"],"closure":["17.5"],"具有自动垃圾回收机制":["17.6"],"gc":["17.6"],"garbage":["17.6"],"就是":["17.7"],"当变量进入环境时":["17.7"],"在函数中声明一个变量":["17.7"],"引用计数":["17.8"],"引用计数的含义是跟踪记录每个值被引用的次数":["17.8"],"第4版":["17.9"],"但是平常忙于工作中":["18.0"],"reco主题":["18.1"],"安装":["18.2","25.14","25.30"],"vuepress":["18.2"],"install":["18.2","25.30"],"theme":["18.3"],"layout":["18.3"],"vue":["18.3","22.4","22.6","22.9","22.19"],"public":["18.3","24.5"],"副标题设置null来禁用":["18.4"],"heroimage":["18.4"],"hero":["18.4"],"herotext":["18.4"],"但也不会像你想象的那么糟":["18.5"],"网站描述":["18.5"],"dest":["18.5"],"dist":["18.5","24.11"],"打包后的文件存放路径":["18.5"],"base":["18.5"],"blog":["18.5"],"打包后的静态资源的路径":["18.5"],"网站的图标":["18.5"],"head":["18.5"],"link":["18.5"],"rel":["18.5"],"icon":["18.5"],"avatar":["18.5"],"不然pages需要收费":["18.6"],"在仓库的setting中找到pages":["18.6"],"开启pages":["18.6"],"我才开始学习":["20.0"],"typescript":["20.0","20.8","20.16"],"从官网的描述来看":["20.1"],"是":["20.1","24.16","25.34"],"的理由":["20.2"],"更好的开发体验":["20.2"],"可以清晰的知道值的类型":["20.2"],"提前发现类型相关的代码错误":["20.2"],"编写的代码":["20.2"],"编译器可以使用":["20.3"],"node":["20.3","24.11","25.4"],"我们可以在声明一个变量之后设置我们想要添加的类型":["20.4"],"type":["20.4"],"布尔值":["20.5"],"除了支持十进制和十六进制字面量":["20.6"],"typescript还支持ecmascript":["20.6"],"2015中引入的二进制和八进制字面量":["20.6"],"跟javascript一样":["20.7"],"可以使用双引号":["20.7"],"或单引号":["20.7"],"表示字符串":["20.7"],"定义数组类型有两种方式":["20.8"],"在元素类型后面接上":["20.8"],"不匹配就会抛出异常":["20.9"],"你可以定义一对值分别为":["20.9"],"和":["20.9","25.25"],"number":["20.9","20.19","20.20","20.21","20.27"],"类型的元组":["20.9"],"它是一种可以将多个常量分组为一个并附加一系列值的类型":["20.10"],"使用枚举定义的常量称为枚举器列表":["20.10"],"默认情况下":["20.10"],"枚举器从零开始按顺序编号":["20.10"],"可以是任意的一种类型":["20.11"],"在不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查就可以使用":["20.11"],"类型表示没有任何类型":["20.12"],"通常当一个函数没有返回值时":["20.12"],"它的返回值类型是":["20.12"],"两者各自有自己的类型分别叫做":["20.13"],"类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型":["20.14"],"类型是任何类型的子类型":["20.14"],"也可以赋值给任何类型":["20.14"],"相信我":["20.15"],"我知道自己在干什么":["20.15"],"类型断言好比其它语言里的类型转换":["20.15"],"但是不进行特殊的数据检查和解构":["20.15"],"它没有运行时的影响":["20.15"],"只是在编译阶段起作用":["20.15"],"类型断言有两种形式":["20.15"],"会自动推断变量的类型":["20.16"],"我们还可以将变量设置为联合类型":["20.17"],"联合类型是可以分配多个类型的变量":["20.17"],"interface":["20.18","20.25"],"age":["20.18","20.19","20.21"],"lucy":["20.19"],"它接受两个类型为":["20.20"],"的变量":["20.20"],"并返回一个":["20.20"],"iscool":["20.21"],"hasformatter":["20.22"],"format":["20.22"],"类的实例类型和一个构造函数":["20.23"],"的一种特性":["20.24"],"identity":["20.24"],"t":["20.24","20.25"],"括起泛型类型":["20.26"],"跟在类名后面":["20.26"],"缩小到更特定的类型":["20.27"],"addanother":["20.27"],"val":["20.27"],"ts":["20.27","22.2","22.7"],"www":["20.28"],"tsx":["21.1","22.5","22.19"],"webp":["22.0"],"记得第一次写":["22.0"],"git仓库":["22.1"],"搭建项目":["22.3"],"vite":["22.4"],"latest":["22.4"],"my":["22.4","24.5","25.1"],"app":["22.4","22.9"],"template":["22.4"],"vue3":["22.5","22.11"],"中使用":["22.5"],"jsx":["22.5","22.18"],"啦":["22.5"],"的默认图标库还需要安装图标库":["22.6"],"icons":["22.6"],"src":["22.7","22.10","24.5","24.11","25.1","25.3"],"文件下新增":["22.7"],"文件夹":["22.7"],"文件":["22.7","24.19","24.20","25.35"],"内容如下":["22.7"],"import":["22.7","22.9","24.2","25.32"],"createrouter":["22.7"],"createwebhistory":["22.7"],"routerecordraw":["22.7"],"安装sass":["22.8"],"其实我就是觉得新东西应该去用一下试试看":["22.9"],"yarn":["22.9"],"挂载":["22.9"],"createapp":["22.9"],"from":["22.9","22.10","25.32"],"export":["22.10","22.29"],"default":["22.10","22.29"],"defineconfig":["22.10"],"alias":["22.10"],"dirname":["22.10"],"对于":["22.11"],"created":["22.12"],"生命周期之前执行":["22.12"],"可直接写":["22.12"],"await语法":["22.12"],"中你应该避免使用":["22.12"],"因为它不会找到组件实例":["22.12"],"参数":["22.12"],"接收两个参数":["22.12"],"props":["22.12","22.28"],"来访问组件的生命周期钩子":["22.13"],"下表包含如何在":["22.13"],"setup":["22.13","22.28","22.29"],"内部调用生命周期钩子":["22.13"],"选项式":["22.13"],"api":["22.13","25.37"],"property":["22.14"],"指向该内部值":["22.14"],"template中可以直接使用":["22.14"],"不需要":["22.14"],"调用":["22.14"],"script和jsx中都需要使用":["22.14"],"proxy对象":["22.15"],"直接解构":["22.15"],"的话会丢失响应性":["22.15"],"如果需要结构的化":["22.15"],"需要借助":["22.15"],"torefs":["22.15"],"函数转换":["22.15"],"相关api":["22.15"],"readonly":["22.15"],"接受一个对象":["22.15"],"的返回值返回一个不可变的响应式":["22.16"],"ref":["22.16","22.17"],"count":["22.16","22.17"],"无法获取依赖源的新旧值":["22.17"],"logs":["22.17"],"的插值与":["22.19"],"模板语法中的插值一样":["22.19"],"使用模板字符串或者使用数组":["22.20"],"使用模板字符串两个类名之间使用空格隔开":["22.20"],"模板字符串":["22.20"],"show":["22.22"],"指令":["22.22","22.24"],"没有":["22.22"],"使用":["22.22"],"需要渲染列表我们只需要使用js":["22.24"],"的数组方法":["22.24"],"map":["22.24","25.18"],"就可以了":["22.24"],"而是改成了":["22.26"],"on":["22.26"],"click":["22.26"],"事件是":["22.26"],"onclick":["22.26","25.33"],"如果需要使用事件修饰符":["22.26"],"就需要借助":["22.26"],"model语法的":["22.27"],"正常写法":["22.27"],"input":["22.27"],"或者使用":["22.28"],"renderslot":["22.28"],"函数默认接收两个参数":["22.28"],"scss":["22.29"],"definecomponent":["22.29"],"isshowroutes":["22.29"],"computed":["22.29"],"currentpath":["22.29"],"useroute":["22.29"],"path":["22.29","25.4","25.34"],"el":["22.29"],"基础配置优化篇":["23.1"],"上一篇文章把webpack的基本配置跟一些优化都说过了":["24.0"],"loader":["24.1","24.7","25.15","25.17","25.22","25.23"],"用于对模块的源代码进行转换":["24.2"],"可以使你在":["24.2"],"将按照相反的顺序执行":["24.3"],"链中的第一个":["24.3"],"将其结果":["24.3"],"也就是应用过转换后的资源":["24.3"],"传递给下一个":["24.3"],"依此类推":["24.3"],"最后":["24.3"],"类":["24.4","24.15"],"的执行优级为":["24.4"],"相同优先级的":["24.4"],"执行顺序为":["24.4"],"从右到左":["24.4"],"从下到上":["24.4"],"此时loader执行顺序":["24.4"],"loader3":["24.4"],"loader2":["24.4"],"loader1":["24.4"],"module":["24.4","24.8","25.6","25.12","25.15","25.18","25.20"],"rules":["24.4"],"其它需要在":["24.5"],"链中传递的信息":["24.5"],"我们写一个简单的loader测试一下":["24.5"],"新建一个demo":["24.5"],"文件目录结构如下":["24.5"],"webpack":["24.5","24.13","24.17","25.1","25.6","25.30"],"loaders":["24.5","24.10"],"html":["24.5","25.5","25.32"],"config":["24.5","25.4","25.32"],"webpack配置文件":["24.5"],"package":["24.5"],"json":["24.5"],"简单配置一下":["24.5"],"传递map":["24.6"],"让source":["24.6"],"map不中断":["24.6"],"传递meta":["24.6"],"让下一个loader接收到其他参数":["24.6"],"当调用":["24.6"],"async":["24.7"],"异步回调":["24.7"],"返回":["24.7"],"callback":["24.7"],"exports":["24.8","25.12","25.15"],"content":["24.8"],"利用正则把接受的文件内容的console":["24.8"],"替换为空":["24.8"],"语法编译成":["24.9"],"es5":["24.9"],"语法":["24.9"],"下载依赖":["24.9"],"core":["24.9"],"utils":["24.10"],"remainingrequest":["24.11"],"users":["24.11"],"desktop":["24.11"],"modules":["24.11","25.24"],"css":["24.11","25.7","25.16","25.22"],"cjs":["24.11"],"plugin":["24.12","24.17","25.12","25.14","25.30","25.32"],"的支柱功能":["24.13"],"自身也是构建于":["24.13"],"你在":["24.13"],"在运行过程中会广播事件":["24.14"],"插件只需要监听它所关心的事件":["24.14"],"就能加入到这条生产线中":["24.14"],"去改变生产线的运作":["24.14"],"的事件流机制保证了插件的有序性":["24.14"],"使得整个系统扩展性很好":["24.14"],"深入浅出":["24.14"],"站在代码逻辑的角度就是":["24.14"],"在编译代码过程中":["24.14"],"会触发一系列":["24.14"],"钩子事件":["24.14"],"插件所做的":["24.14"],"在相应的钩子注册事件":["24.14"],"它扩展":["24.15"],"extends":["24.15"],"自":["24.15"],"tapable":["24.15"],"用来注册和调用插件":["24.15"],"这个对象会在首次启动":["24.15"],"时创建":["24.15"],"我们可以通过":["24.15"],"对象上访问到":["24.15"],"webapck":["24.15"],"的主环境配置":["24.15"],"从文档可知":["24.16"],"compile":["24.16"],"synchook":["24.16"],"也就是同步钩子":["24.16"],"只能用tap注册":["24.16"],"hooks":["24.16","24.19"],"tap":["24.16"],"compilationparams":["24.16"],"钩子":["24.17","24.18"],"它是打包输出前触发":["24.17","24.18"],"如何获取打包输出的资源":["24.17"],"compilation":["24.17"],"assets":["24.17"],"可以获取所有即将输出的资源文件":["24.17"],"实现":["24.17","24.18"],"plugins":["24.17","24.18","25.4"],"banner":["24.17"],"如何清空上次打包内容":["24.18"],"获取打包输出目录":["24.18"],"通过文件操作清空内容":["24.18"],"outputfilesystem":["24.18"],"操作文件":["24.18"],"开发思路":["24.19"],"在哪做":["24.19"],"compiler":["24.19"],"emit":["24.19"],"它是在打包输出前触发":["24.19"],"我们需要分析资源大小同时添加上分析后的":["24.19"],"md":["24.19"],"来实现":["24.20"],"输出":["24.20"],"前将内联":["24.20"],"注入进去":["24.20"],"删除多余的":["24.20"],"如何操作":["24.20"],"官方文档open":["24.20"],"in":["24.20","25.7"],"长篇文章":["24.21"],"不知道大家面试的时候有没有遇到过这种情况":["25.0"],"面试官问你":["25.0"],"了解过webpack嘛":["25.0"],"现在的文件目录结构":["25.1"],"安装依赖":["25.2","25.16","25.32","25.38"],"在本地安装webpack跟webpack":["25.2"],"cli":["25.2","25.32"],"mode":["25.3","25.4"],"development":["25.3","25.4"],"生产模式":["25.3","25.4"],"才能解析":["25.4"],"插件":["25.4","25.14"],"扩展":["25.4"],"的功能":["25.4"],"模式":["25.4"],"主要由两种模式":["25.4"],"开发模式":["25.4"],"production在根目录下新建一个":["25.4"],"js的核心模块":["25.4"],"专门用来处理文件路径":["25.4"],"中引用这个文件":["25.5"],"只有在入口文件中":["25.5"],"的文件才能打包输出":["25.5"],"body":["25.5"],"background":["25.5"],"color":["25.5"],"yellowgreen":["25.5"],"box1":["25.5"],"200px":["25.5"],"已经将两个":["25.6"],"功能":["25.6","25.18"],"内置":["25.6"],"到":["25.6"],"里了":["25.6"],"即webpack5":["25.6"],"新增的":["25.6"],"资源模块":["25.6"],"asset":["25.6"],"允许使用资源文件":["25.6"],"图片":["25.6"],"字体":["25.6"],"图标等":["25.6"],"而不需要在借助其它loader来处理这些资源":["25.6"],"window下载喜欢的图标到本地":["25.7"],"把字体文件放入":["25.7"],"fonts":["25.7"],"把":["25.7"],"放入":["25.7"],"自动清空打包目录":["25.8"],"output":["25.9"],"输出文件名":["25.9"],"文件输出到":["25.9"],"static":["25.9"],"目录中":["25.9"],"我们在js中写一些es6语法的东西":["25.11"],"看一下输出的结果main":["25.11"],"sum":["25.11"],"reduce":["25.11"],"在webpack中使用eslint":["25.12"],"引入eslint插件":["25.12"],"eslintwebpackplugin":["25.12"],"require":["25.12","25.26"],"创建一个style标签来生成样式":["25.14"],"这样会出现网站的闪屏现象":["25.14"],"为了避免闪屏":["25.14"],"我们希望css文件打包成单独的文件":["25.14"],"并通过link标签来加载":["25.14"],"minicss":["25.14"],"extract":["25.14"],"postcss":["25.15"],"preset":["25.15"],"env":["25.15"],"配置":["25.15","25.33"],"只需要配置":["25.17"],"less":["25.17"],"就可以":["25.17"],"sass需要":["25.17"],"sass":["25.17"],"错误提示应该使用":["25.18"],"cheap":["25.18","25.20"],"生产环境":["25.18"],"代码压缩":["25.18"],"tree":["25.18","25.28"],"shaking":["25.18"],"静态资源压缩":["25.18"],"代码分割":["25.18"],"需要压缩图片体积":["25.18"],"优化配置":["25.19"],"从构建后代码出错位置找到映射后源代码出错位置":["25.20"],"从而让浏览器提示源代码文件出错位置":["25.20"],"帮助我们更快的找到错误根源":["25.20"],"这里我们就讲sourcemap的两种值":["25.20"],"其它更多的配置":["25.20"],"所以我们需要做到修改某个模块代码":["25.22"],"就只有这个模块代码需要重新打包编译":["25.22"],"其他模块不变":["25.22"],"这样打包速度就能很快":["25.22"],"基本配置":["25.22"],"webpack默认是开启hmr功能的":["25.22"],"不过此时":["25.22"],"样式经过":["25.22"],"style":["25.22"],"处理":["25.22","25.23"],"已经具备":["25.22"],"功能了":["25.22"],"但是":["25.22","25.35"],"oneof":["25.23"],"打包时每个文件都会经过所有":["25.23"],"中了":["25.24"],"而这些文件是不需要编译可以直接使用的":["25.24"],"所以我们在对":["25.24"],"文件处理时":["25.24"],"要排除":["25.24"],"eslint":["25.25"],"检查":["25.25"],"babel":["25.25"],"编译":["25.25"],"速度比较慢":["25.25"],"我们可以缓存之前的":["25.25"],"都不一样":["25.26"],"我们启动的进程就是电脑的":["25.26"],"nodejs核心模块":["25.26"],"直接使用":["25.26"],"os":["25.26"],"cpu核数":["25.26"],"threads":["25.26"],"cpus":["25.26"],"注入":["25.29"],"而是引入":["25.29"],"并且使所有辅助代码从这里引用":["25.29"],"为编译的每个文件都插入了辅助代码":["25.29"],"使代码体积过大":["25.29"],"对一些公共方法使用了非常小的辅助代码":["25.29"],"imagemin":["25.30"],"这个插件还需要配合其它的包一起使用":["25.30"],"它有两种模式可以选择":["25.30"],"推荐使用":["25.30"],"cnpm":["25.30"],"安装总是失败":["25.30"],"无损压缩":["25.30"],"gifsicle":["25.30"],"jpegtran":["25.30"],"新建文件":["25.32"],"内容无关紧要":["25.32"],"主要观察打包输出的结果":["25.32"],"btn":["25.33"],"eslint会对动态导入语法报错":["25.33"],"需要修改eslint配置文件":["25.33"],"webpackchunkname":["25.33"],"这是webpack动态导入模块命名的方式":["25.33"],"将来就会作为":["25.33"],"文件相对路径":["25.34"],"folder":["25.34"],"文件所在文件夹":["25.34"],"fullhash":["25.34"],"每次构建生成的唯一":["25.34"],"chunkhash":["25.34"],"根据":["25.34"],"chunk":["25.34"],"生成":["25.34"],"contenthash":["25.34"],"根据文件内容生成hash":["25.34"],"的区别":["25.34"],"webpack4":["25.34"],"值发生了变化":["25.35"],"这是正常的":["25.35"],"文件的":["25.35"],"值也发生了变化":["25.35"],"这会导致":["25.35"],"告诉浏览器在空闲时才开始加载资源":["25.36"],"它们共同点":["25.36"],"都只会加载资源":["25.36"],"并不执行":["25.36"],"都有缓存":["25.36"],"它们区别":["25.36"],"加载优先级高":["25.36"],"是专门用来做":["25.37"],"es6":["25.37"],"以及以上":["25.37"],"的":["25.37"],"polyfill":["25.37"],"提供项目的离线体验":["25.38"],"即在离线状态下也可以访问项目":["25.38"]},{"0":["0.11","2.2","9.6","9.9","9.25","10.5","20.9"],"1":["2.2","2.5","5.5","6.9","6.13","20.3","22.16","22.17","25.6","25.18"],"2":["0.11","3.1","9.6","9.14","9.27","10.2","24.6"],"3":["5.1","6.7","14.11","24.20","25.11"],"4":["6.12","25.11"],"5":["20.16","25.11","25.33"],"6":["25.11"],"7":["22.4"],"8":["2.5"],"9":["5.5"],"10":["9.8"],"18":["20.19","22.24"],"60":["9.25"],"100":["9.24","22.17"],"111":["24.16"],"125":["9.25"],"127":["3.1"],"180":["9.6"],"1200":["14.11"],"1800":["14.11"],"2000":["24.16"],"60000":["2.6"],"事件":["0.0","0.12","24.14"],"获取到拖进我们特定区域的文件数据":["0.0"],"四个事件":["0.2"],"当一个元素或是选中的文字被拖拽释放到一个有效的释放目标位置时":["0.2"],"该事件会在文件读取完成后触发":["0.3"],"其中event":["0.3"],"target":["0.3","0.10","22.10"],"result为文件读取的返回值":["0.3"],"js":["0.3","1.5","1.6","2.1","2.3","2.4","9.6","9.11","9.12","15.2","16.5","16.8","20.6","20.7","20.8","20.10","20.11","20.12","20.13","20.15","20.19","22.5","22.12","22.22","22.26","22.28","24.19","25.2","25.6","25.7","25.18","25.29","25.34"],"var":["0.3"],"reader":["0.3"],"new":["0.3","7.12","8.1","10.5","13.9","14.2","14.5","15.4","16.7","16.9","24.20","25.11","25.12"],"event":["0.3","0.7","0.10","10.6","12.1"],"console":["0.3","2.5","7.14","7.15","16.4","17.2","20.9","20.27","22.12","22.16","24.8"],"log":["0.3","2.5","7.15","16.2","17.2","20.9","20.27","22.12","22.16"],"对象通常来自于":["0.4"],"input":["0.4"],"p":["0.6"],"drop":["0.6"],"text":["0.6"],"handleevent":["0.7"],"阻止事件的默认行为":["0.7"],"preventdefault":["0.7"],"if":["0.7","0.9","0.10","2.7","5.5","11.2","11.6","15.3"],"type":["0.7","0.9","2.3"],"文件进入并松开鼠标":["0.7"],"文件边框恢复正常":["0.7"],"getelementbyid":["0.8","9.4","9.12","9.17"],"通过input框上传文件":["0.8"],"addeventlistener":["0.8","0.10"],"img":["0.9"],"image":["0.9","1.4","1.5","9.16","9.20","17.4","25.7"],"test":["0.9","25.9","25.15","25.23"],"src":["0.9","25.4","25.12"],"else":["0.9","2.6","4.1","22.22"],"switch":["0.9","14.5"],"case":["0.9","14.5"],"application":["0.9"],"msword":["0.9"],"static":["0.9"],"word":["0.9"],"png":["0.9","1.4","1.5","9.16","9.20","17.4","25.7","25.9"],"break":["0.9","14.5"],"vnd":["0.9"],"openxmlformats":["0.9"],"officedocument":["0.9"],"wordprocessingml":["0.9"],"droptarget":["0.10"],"shadow":["0.11"],"inset":["0.11"],"5px":["0.11"],"rgba":["0.11"],"track":["0.11"],"获取拖拽文件":["0.12"],"在":["0.12","18.2","22.3"],"事件中通过":["0.12"],"e":["0.12","9.21"],"这次主要是结合自己最近在项目中的实践和百度来的一些下载方式":["1.0"],"a标签下载应该是目前大家用的最多的下载文件的方式了吧":["1.1"],"毕竟它简单明了":["1.1"],"接下来看一下兼容性":["1.2"],"主流浏览器大部分都支持这个属性":["1.2"],"如果要向下兼容建议采用其它的方式进行下载":["1.2"],"截图来源于":["1.2"],"can":["1.2","1.5","9.3"],"i":["1.2","1.5","9.3","9.9","25.2","25.7","25.14","25.26","25.29","25.33","25.38"],"use":["1.2","1.4","1.5","25.15"],"这里也没什么特别的":["1.3"],"下载文件":["1.4","1.5","1.8"],"param":["1.4","1.5","1.8"],"string":["1.4","1.5","1.8"],"blob":["1.4"],"文件流":["1.4","1.5"],"blob格式":["1.4","1.5"],"用法":["1.6"],"window":["1.6","11.3","24.20"],"function":["1.7","7.1","7.14","11.8","13.9","15.4","16.0","16.3","16.7","17.3","20.12","24.10","25.32"],"downloadfile":["1.7"],"创建表单":["1.7"],"const":["1.7","11.3","13.9","15.4","16.2","16.7","16.9","20.25","22.7","22.22","22.24","24.5","24.6","24.8","24.9","24.10","24.17","24.18","24.20","25.32"],"formobj":["1.7"],"document":["1.7","9.4","9.11","9.12","9.17"],"createelement":["1.7"],"downloadurl":["1.8"],"请求的地址":["1.8"],"如果有什么不足或者错误之处":["1.9"],"多重嵌套的":["2.0"],"返回左边式子的值":["2.1"],"反之返回右边式子的值":["2.1"],"下面用一个简单的案例来表述":["2.1"],"nboolean":["2.2"],"return":["2.2","5.5","11.1","11.5","11.6","14.8","20.20","20.24","20.27","24.8","25.32"],"使用三元运算符":["2.2"],"b的时候输出1":["2.3"],"c输出2":["2.3"],"d输出3":["2.3"],"默认输出0":["2.3"],"let":["2.3","7.2","7.12","9.11","9.12","9.17","11.1","11.2","11.3","11.4","11.5","11.9","13.6","13.10","20.6","20.7","20.8","20.11","20.13","20.15","20.16","20.17"],"a":["2.3","11.1","14.2","14.5","15.6","20.9","20.21","22.19"],"并使它们相互之间可以替换":["2.4"],"被封装起来的算法具有独立性":["2.4"],"外部不可改变其特性":["2.4"],"接下来我们用对象配置的方法实现一下上述的例子":["2.4"],"超级会员":["2.5"],"输出":["2.6"],"可以发现":["2.6"],"这段代码十分简单":["2.6"],"但是":["2.6"],"函数比较庞大":["2.6"],"所有的逻辑分支都包含在":["2.6"],"语句中":["2.6"],"如果增加了一种新的绩效等级d":["2.6"],"或者把a等级的倍数改成5":["2.6"],"那我们必须阅读所有代码才能去做修改":["2.6"],"️":["2.6"],"所以我们可以用对象配置":["2.6"],"策略模式去简化这个函数":["2.6"],"对":["2.7"],"所以对它的通信方式不是很了解":["3.0"],"前几天":["3.0"],"需要注意的是通过":["3.1"],"的时候":["3.1"],"传输携带中文的话":["3.1"],"记得使用":["3.1"],"decodeuricomponent":["3.1"],"进行解码":["3.1"],"postmessage":["3.1"],"安全":["3.1"],"可靠且支持跨域的":["3.1"],"通信方式":["3.1"],"它可以在两个窗口之间异步传递消息":["3.1"],"在发送方中":["3.1"],"方法向另一个窗口发送消息":["3.1"],"该方法接收两个参数":["3.1"],"要发送的消息和目标窗口的源":["3.1"],"例如":["3.1"],"http":["3.1","14.10"],"emmm":["5.0"],"既然对象都开口了":["5.0"],"奖品项为盒子的1":["5.1"],"超过换行就行":["5.1"],"这里循环的":["5.3"],"key":["5.3","13.9","22.29"],"值":["5.3"],"我使用的索引值":["5.3"],"主要是为了后面添加编辑奖品的时候":["5.3"],"id不一定能保证按顺序排列":["5.3"],"appoint":["5.4"],"index":["5.4","18.3","22.9","24.9","24.11","25.6","25.7"],"传入参数为当前的索引值":["5.4"],"computed":["5.5"],"剩余圈数":["5.5"],"指定中奖的索引":["5.5"],"初始化":["5.5"],"init":["5.5","15.5"],"开始抽奖":["5.5"],"startraffle":["5.5"],"如果已经存在定时器则表示已经在转动":["5.5"],"不理会":["5.5"],"如有不足":["5.6","25.39"],"正则表达式就是专门规定一个字符串中字符出现的规律的一套规则":["6.0"],"注意":["6.1","9.16","22.3"],"如果想要在正则表达式使用js的变量或者js函数处理后返回的字符串":["6.1"],"匹配确定的n次":["6.2"],"至少匹配n次":["6.2"],"m":["6.2"],"手机号验证":["6.4"],"弹幕敏感词等":["6.5"],"验证字符串":["6.6"],"缺点":["6.7","25.20"],"只要字符串中含有符合规则的内容":["6.7"],"正则表达式就会匹配":["6.7"],"返回true":["6.7"],"解决":["6.7","6.11"],"查找敏感词":["6.8"],"reg":["6.9","6.10","6.12"],"g":["6.11","6.13","24.8","25.9"],"也只会获得第一个敏感词的内容和位置":["6.11"],"如果想要获取所有敏感词的位置和内容":["6.11"],"必须反复调用exec":["6.11"],"replace":["6.13","24.8"],"示例2":["6.13"],"使用0宽断言切割url":["6.13"],"search":["6.14"],"match":["6.14"],"settimeout":["7.0","7.3","22.17","24.6","24.16"],"delay":["7.1"],"arg1":["7.1"],"不推荐的":["7.2"],"原因和使用":["7.2"],"eval":["7.2"],"一样":["7.2"],"有安全风险":["7.2"],"javascript":["7.2","20.1","24.3"],"示例":["7.2"],"需要注意的是":["7.3"],"和":["7.3","22.6","25.34"],"方法重复调用一个函数或执行一个代码段":["7.4"],"setinterval":["7.5","7.9"],"func":["7.5"],"这个语法是可选的":["7.6"],"你可以传递一个字符串来代替一个函数对象":["7.6"],"你传递的字符串会被编译然后每个delay毫秒时间内执行一次":["7.6"],"clearinterval":["7.7"],"的参数来清除对应的计时器":["7.7"],"值得注意的是":["7.7"],"定时器仍然有可能因为当前页面":["7.10"],"或者操作系统":["7.10"],"firefox":["7.11"],"在内的浏览器其内部以32位带符号整数存储延时":["7.11"],"date":["7.12"],"gettime":["7.12"],"开始时间":["7.12"],"frequency":["7.12"],"countdown":["7.14"],"倒计时":["7.15"],"mdn定时器":["7.16"],"利用tts能力转为语音":["8.0"],"然后在上传":["8.0"],"是不是看起来都挺正常的":["8.0"],"但是问题就出在":["8.0"],"tts能力不是自己公司的":["8.0"],"u8arr":["8.1"],"uint8array":["8.1"],"创建一个二进制数据缓冲区":["8.1"],"可以理解为一个数组":["8.1"],"while":["8.1","11.0"],"就选择使用":["9.0"],"去做":["9.0"],"即画布的意思":["9.1"],"当前的浏览器版本不支持":["9.2"],"请升级浏览器":["9.2"],"所以我们可以放心的使用":["9.3"],"use兼容性截图":["9.3"],"使用getcontext函数来获取画笔":["9.4"],"ctx":["9.4","9.10","9.12","9.17"],"getcontext":["9.4","9.8","9.10","9.12","9.17","9.22"],"设置颜色":["9.4"],"fillstyle":["9.4"],"x":["9.5","9.13","20.23","25.32"],"y":["9.5","9.13","15.5","20.20","20.23","25.32"],"把画笔移动到指定的坐标":["9.5"],"相当于设置路径的起始点坐标":["9.5"],"lineto":["9.5"],"绘制一条从当前位置到指定":["9.5"],"以及":["9.5"],"位置的直线":["9.5"],"则代表绘制一个圆":["9.6"],"弧度是指的":["9.6"],"轴正方向":["9.6"],"radians":["9.6"],"math":["9.6","9.25"],"degrees":["9.6"],"角度转换成弧度":["9.6"],"arcto":["9.6"],"x1":["9.6"],"y1":["9.6"],"x2":["9.6"],"线条有4个属性":["9.7"],"2d":["9.8","9.10","9.12","9.22"],"线宽10":["9.8"],"beginpath":["9.8","9.25"],"moveto":["9.8"],"三种样式":["9.9"],"linecaps":["9.9"],"分别绘制三种样式的线条":["9.9"],"for":["9.9","11.9","13.6","13.10"],"三种连接样式":["9.10"],"属性设置起始偏移量":["9.11"],"canvas":["9.11","9.12","9.17"],"大家可以从下列的案例中清晰的看出来":["9.12"],"轴和":["9.13"],"轴坐标":["9.13"],"选择框的宽高":["9.13"],"也可以认为是缩放比例":["9.13"],"shadowoffsetx":["9.14"],"shadowoffsety":["9.14"],"shadowblur":["9.14"],"shadowcolor":["9.14"],"globalcompositeoperation":["9.14"],"的值":["9.14"],"当前的裁切路径":["9.14"],"clipping":["9.14"],"path":["9.14","22.7","24.5","25.12","25.32"],"可以调用任意多次":["9.14"],"方法":["9.14","9.27"],"类似数组的":["9.14"],"push":["9.14"],"移动的是":["9.16"],"的坐标原点":["9.16"],"坐标变换":["9.16"],"或":["9.18","20.4","22.15","24.2"],"轴作为对称轴镜像反转":["9.18"],"默认情况下":["9.18"],"的":["9.18"],"单位就是":["9.18"],"个像素":["9.18"],"举例说":["9.18"],"如果我们设置缩放因子是":["9.18"],"transform":["9.19"],"如果任意一个参数是":["9.20"],"infinity":["9.20"],"变形矩阵也必须被标记为无限大":["9.20"],"f":["9.21"],"这个方法会将当前的变形矩阵重置为单位矩阵":["9.21"],"translate":["9.22","9.25"],"共12种样式":["9.24"],"red":["9.24"],"注":["9.24"],"下面的展示中":["9.24"],"蓝色表示旧的":["9.24"],"即之前画布中的图形":["9.24"],"红色为新的":["9.24"],"默认设置":["9.24"],"移动坐标原点到矩形中心点":["9.25"],"设置一个圆形裁剪路径":["9.25"],"arc":["9.25"],"pi":["9.25"],"true":["9.25","11.0","13.9","22.10","24.5"],"否则你需要清空所有":["9.27"],"最简单的做法就是用":["9.27"],"clearrect":["9.27"],"提供的或者自定义的方法":["9.28"],"而通常":["9.28"],"我们仅仅在脚本执行结束后才能看见结果":["9.28"],"比如说":["9.28"],"博客主要记录一些学习的文章":["9.29","13.12","14.14","24.21"],"也就是":["10.0"],"事件循环":["10.0"],"采用回调函数的形式":["10.1"],"才会进入主线程执行":["10.1"],"排在异步任务后面的代码":["10.1"],"不用等待异步任务结束会马上运行":["10.1"],"也就是说":["10.1","17.5","17.6"],"异步任务不具有":["10.1"],"堵塞":["10.1"],"同步代码执行完毕":["10.2"],"调用栈":["10.2"],"stack":["10.2"],"清空":["10.2"],"检查是否存在":["10.2"],"微任务":["10.2"],"做几个题目校验一下学习成果":["10.3"],"promise3":["10.4"],"promise4":["10.4"],"settimeout2":["10.5"],"promise":["10.5"],"resolve":["10.5","24.5","25.4","25.12","25.32"],"reject":["10.5"],"rprototype":["11.0"],"获取实例的隐式原型":["11.0"],"proto":["11.0","16.3"],"循环判断":["11.0"],"直到最顶层null或者找到为止":["11.0"],"must":["11.1"],"be":["11.1","11.4"],"arg":["11.1"],"完成前两步":["11.1"],"创建新对象":["11.1"],"链接原型":["11.1"],"newobj":["11.1"],"object":["11.1","13.5","13.9"],"create":["11.1","13.5"],"则指向window":["11.2"],"使用符号确保属性名唯一":["11.2","11.3"],"fn":["11.2","11.3","16.2"],"symbol":["11.2","11.3"],"this指向传入对象":["11.2","11.3"],"this":["11.3","15.1","16.0","16.4","20.21","24.17","25.11"],"带参数执行函数":["11.3"],"bind":["11.4"],"what":["11.4"],"is":["11.4"],"trying":["11.4"],"to":["11.4"],"bound":["11.4"],"not":["11.4","22.13"],"callable":["11.4"],"保存this":["11.4"],"方便后续执行的时候使用":["11.4"],"self":["11.4"],"获取参数列表除第一个this之外的参数":["11.4"],"args":["11.4","11.5","11.6"],"array":["11.4"],"timer":["11.5"],"如果以及存在则清除":["11.5"],"如果存在timer则返回":["11.6"],"instanceof":["11.7"],"如果出现循环引用":["11.7"],"状态置为失败的状态rejected":["11.8"],"then":["11.8","15.4","25.33"],"onfulfilled":["11.8","15.4"],"onrejected":["11.8","15.4"],"如果不传":["11.8","15.4"],"就使用默认函数":["11.8","15.4"],"typeof":["11.8","15.4"],"reason":["11.8","15.4"],"发布消息":["11.9"],"publish":["11.9"],"topic":["11.9"],"params":["11.9","13.10"],"of":["11.9","13.6","13.10"],"遍历缓存列表":["11.9","13.10"],"update":["11.9","13.10"],"loop":["12.1"],"pattern":["13.1","14.6","14.12"],"是一套被反复使用":["13.1"],"开放":["13.2"],"封闭原则":["13.2"],"对扩展开放":["13.2"],"对修改封闭":["13.2"],"增加需求时":["13.2"],"扩展新代码":["13.2"],"而非修改已有代码":["13.2"],"发布":["13.4"],"once":["13.5"],"先绑定":["13.5"],"后删除":["13.5"],"off":["13.5"],"apply":["13.5","24.17","24.18","24.19"],"arguments":["13.5"],"all":["13.5"],"若没有传参数":["13.5"],"清空所有订阅":["13.5"],"delete":["13.6"],"推送消息":["13.6"],"pusharticle":["13.6"],"val":["13.6","13.9","22.14"],"相对于观察者模式":["13.8"],"re":["13.9"],"render":["13.9"],"view":["13.9"],"definereactive":["13.9"],"obj":["13.9"],"defineproperty":["13.9"],"enumerable":["13.9"],"configurable":["13.9"],"发布者":["13.10"],"都是为了实现一个状态的改变触发回调函数进行通知":["13.11"],"singleton":["14.0"],"全局loading":["14.1"],"其实就是单例模式":["14.1"],"测试":["14.2","24.8"],"b":["14.2","14.5","17.2","17.3"],"c":["14.2","17.2","17.3","20.21"],"factory":["14.3"],"使用document":["14.4"],"aclass":["14.5"],"builder":["14.6"],"例子":["14.7"],"电脑工厂":["14.7"],"部件1":["14.8"],"setage":["14.8"],"age":["14.8","16.0","16.4","20.25","22.24","25.11"],"proxy":["14.9"],"列子":["14.10"],"两室一厅":["14.11"],"lease":["14.11"],"驾校驾考车等":["14.13"],"资源可以共享":["14.13"],"共同使用的":["14.13"],"是一种异步编程的解决方案":["15.0"],"promise有三种状态":["15.0"],"pending":["15.0","15.1"],"状态值pending":["15.1"],"等待态":["15.1"],"fulfiled":["15.1"],"成功态":["15.1"],"rejected":["15.1"],"失败态":["15.1"],"默认为pending":["15.1"],"try":["15.2"],"catch":["15.2"],"在执行回调的时候去捕获throw了":["15.2"],"失败":["15.3"],"rejectmicrotask":["15.3"],"如果":["15.3"],"时执行第一个回调":["15.3"],"成功的回调":["15.3"],"throw":["15.4"],"promise2":["15.4"],"安装promises":["15.5"],"install":["15.5","25.18"],"在mypromise":["15.5"],"目前我们使用promise都是基于promises":["15.6"],"规范":["15.7"],"面试官":["15.7"],"构造函数":["16.0"],"person":["16.0","16.4","16.7","20.22"],"name":["16.0","16.2","16.4","22.7","22.24","25.11","25.32"],"sayname":["16.0","16.4"],"fn1":["16.2"],"consle":["16.2"],"function也是一个构造函数":["16.2"],"那它也是":["16.3"],"的实例":["16.3"],"object的":["16.3"],"也指向function的":["16.3"],"prototype":["16.3"],"通过":["16.3"],"向上":["16.5"],"查找":["16.5"],"直到找到或者到":["16.5"],"null":["16.5"],"为止":["16.5"],"验证":["16.5"],"person构造函数":["16.5"],"person1":["16.7","16.9"],"为现有对象设置原型":["16.8"],"返回一个新对象":["16.8"],"在程序运行时代码中的某些特定部分中变量":["17.0"],"全局作用域":["17.1"],"内层变量":["17.2"],"未定义直接赋值":["17.2"],"foo":["17.3"],"分析这个试题前":["17.4"],"大家可以先看一下这个图":["17.4"],"从图中可以看出":["17.4"],"当前试题中存在三个嵌套的作用域":["17.4"],"执行":["17.4"],"时":["17.4"],"创建了一个局部变量":["17.4"],"且值为40":["17.4"],"同时把":["17.4"],"函数返回":["17.4"],"赋值给":["17.4"],"闭包让你可以在一个内层函数中访问到其外层函数的作用域":["17.5"],"闭包的特点":["17.5"],"让外部访问函数内部变量成为可能":["17.5"],"可以避免使用全局变量":["17.5"],"collecation":["17.6"],"执行环境会负责管理代码执行过程中使用的内存":["17.6"],"其原理是":["17.6"],"就将这个变量标记为":["17.7"],"进入环境":["17.7"],"从逻辑上讲":["17.7"],"永远不能释放进入环境的变量所占用的内存":["17.7"],"因为只要执行流进入相应的环境":["17.7"],"当声明了一个变量并将一个引用类型值赋给该变量时":["17.8"],"则这个值的引用次数就是1":["17.8"],"豆瓣":["17.9"],"douban":["17.9"],"难以抽出很多时间去搭建自己的博客":["18.0"],"不知道大家有没有听说过vuepress":["18.0"],"个人博客预览地址":["18.1"],"package":["18.2"],"json":["18.2","22.10"],"中添加启动":["18.2"],"编译命令":["18.2"],"建议在启动命令添加上":["18.2"],"temp":["18.2"],"styles":["18.3"],"styl":["18.3"],"palette":["18.3"],"标题":["18.4"],"tagline":["18.4"],"副标题":["18.4"],"actiontext":["18.4"],"快速上手":["18.4"],"actionlink":["18.4"],"zh":["18.4"],"guide":["18.4"],"插件":["18.5","22.6","25.12"],"plugins":["18.5","24.19","24.20","25.12"],"register":["18.5"],"components":["18.5","22.6"],"评论插件":["18.5"],"主题":["18.5"],"reco":["18.5"],"theme":["18.5","22.9"],"导航栏":["18.5"],"侧边栏配置":["18.5"],"时间轴是自带的":["18.5"],"只需要配置路由":["18.5"],"link就是文档的路径":["18.5"],"相当于vue中的路由":["18.5"],"themeconfig":["18.5"],"默认为main分支":["18.6"],"保存":["18.6"],"也不知道还能不能跟上时代的脚步":["20.0"],"的超集":["20.1"],"具有更高的可读性":["20.2"],"更加容易重构":["20.2"],"越来越受欢迎":["20.2"],"大部分前端开源库":["20.2"],"框架都逐步支持":["20.2"],"包来安装":["20.3"],"安装":["20.3"],"我们一般称之为":["20.4"],"类型注释":["20.4"],"类型签名":["20.4"],"boolean":["20.5"],"num":["20.6"],"也可以使用":["20.7"],"模板字符串":["20.7"],"表示由此类型元素组成的一个数组":["20.8"],"numarr":["20.8"],"与数组一样":["20.9"],"我们可以通过下标来访问元组中的元素":["20.9"],"数字枚举":["20.10"],"默认从0开始":["20.10"],"进行标记":["20.11"],"warnuser":["20.12"],"u":["20.13"],"然而":["20.14"],"没有":["20.14"],"类型是":["20.14"],"的子类型或可以赋值给":["20.14"],"其一是":["20.15"],"尖括号":["20.15"],"语法":["20.15"],"somevalue":["20.15"],"any":["20.15"],"id":["20.16"],"number":["20.18","20.23","20.25"],"family":["20.18"],"father":["20.18"],"可选属性和只读属性":["20.19"],"implements":["20.22"],"constructor":["20.22","24.17","25.11"],"public":["20.22"],"point":["20.23"],"我们给identity添加了类型变量":["20.24"],"documents":["20.25"],"genericnumber":["20.26"],"t":["20.26"],"zerovalue":["20.26"],"add":["20.26","22.5"],"视为一个字符串":["20.27"],"concat":["20.27"],"知道":["20.27"],"在这里是一个数字":["20.27"],"typescriptlang":["20.28"],"org":["20.28"],"从搭建到实践":["21.1"],"vue3":["22.0"],"是在2021年了":["22.0"],"基础":["22.2"],"需要额外的双横线":["22.4"],"直接安装就行":["22.5"],"yarn":["22.5"],"vitejs":["22.5"],"plugin":["22.5","24.5","24.18","24.19","25.16","25.38"],"图标的自动导入需要安装":["22.6"],"unplugin":["22.6"],"d":["22.6","24.9","25.14","25.16","25.26","25.38"],"自动按需导入":["22.6"],"首先你需要安装":["22.6"],"auto":["22.6"],"import":["22.6","22.28","25.5","25.33"],"这两款插件":["22.6"],"from":["22.7","22.28"],"routes":["22.7"],"login":["22.7"],"component":["22.7"],"这里我比较习惯用":["22.8"],"scss":["22.8","22.9"],"router":["22.9"],"element":["22.9"],"plus":["22.9"],"chalk":["22.9"],"dark":["22.9"],"css":["22.9","25.6","25.14","25.15","25.34"],"vars":["22.9"],"style":["22.9","25.7"],"引入pinia":["22.9"],"配置文件路径别名还需要修改一下":["22.10"],"tsconfig":["22.10"],"compileroptions":["22.10"],"esnext":["22.10"],"usedefineforclassfields":["22.10"],"module":["22.10","24.5","25.4","25.22","25.32"],"的学习":["22.11"],"我大部分都是看官方文档学习的":["22.11"],"attribute":["22.12"],"非响应式对象":["22.12"],"等同于":["22.12"],"attrs":["22.12","22.28"],"插槽":["22.12"],"hook":["22.13"],"inside":["22.13"],"beforecreate":["22.13"],"相关api":["22.14"],"unref":["22.14"],"如果参数是一个":["22.14"],"则返回内部值":["22.14"],"否则返回参数本身":["22.14"],"这是":["22.14"],"响应式或纯对象":["22.15"],"ref":["22.15"],"并返回原始对象的只读代理":["22.15"],"只读代理是深层的":["22.15"],"任何被访问的嵌套":["22.15"],"也是只读的":["22.15"],"isproxy":["22.15"],"检查对象是否是由":["22.15"],"plusone":["22.16"],"value":["22.16","22.27","22.29"],"api":["22.17"],"与选项式":["22.17"],"tsx在":["22.18"],"支持有效的":["22.19"],"javascript表达式":["22.19"],"比如":["22.19","25.29"],"classname":["22.20"],"header":["22.20"],"isbg":["22.20"],"headerbg":["22.20"],"和三目表达式都可以实现":["22.22"],"setup":["22.22","22.24"],"isshow":["22.22"],"listdata":["22.24"],"tom":["22.24","25.11"],"withmodifiers":["22.26"],"方法啦":["22.26"],"方法接收两个参数":["22.26"],"第一个参数是绑定的事件":["22.26"],"第二个参数是需要使用的事件":["22.26"],"修饰符":["22.26"],"vue":["22.27","22.28"],"其中包含":["22.28"],"slots":["22.28"],"emit":["22.28"],"等":["22.28"],"scrollbar":["22.29"],"class":["22.29","24.17","24.18","24.19","24.20","25.11"],"menucontent":["22.29"],"menu":["22.29"],"active":["22.29"],"mode":["22.29"],"vertical":["22.29"],"map":["22.29"],"route":["22.29"],"item":["22.29"],"这篇文章就讲一下原理":["24.0"],"load":["24.2"],"加载":["24.2"],"模块时预处理文件":["24.2"],"因此":["24.2"],"链中的最后一个":["24.3"],"返回":["24.3"],"webpack":["24.3","24.8","25.5","25.16","25.38"],"所期望的":["24.3"],"可以是同步的":["24.3"],"也可以是异步的":["24.3"],"require":["24.5","24.10","24.20","25.4","25.32"],"htmlwebpackplugin":["24.5","24.20","25.32"],"exports":["24.5","25.4","25.32"],"单入口":["24.5","25.32"],"entry":["24.5","24.15","25.32","25.34"],"output":["24.5","24.15","25.32"],"dirname":["24.5","25.4","25.12","25.32"],"dist":["24.5","25.4","25.32"],"filename":["24.5","25.4"],"clean":["24.5","24.18","25.8"],"rules":["24.5","25.9","25.15"],"函数时":["24.6"],"总是返回":["24.6"],"undefined":["24.6"],"异步":["24.6"],"async":["24.6"],"进行异步操作":["24.6"],"可以同步或者异步调用的并返回多个结果的函数":["24.7"],"err":["24.7"],"content":["24.7","24.10"],"sourcemap":["24.7"],"config":["24.8","25.1"],"preset":["24.9"],"env":["24.9","25.18"],"loaders":["24.9","24.15"],"loaderutils":["24.10"],"fileloader":["24.10"],"根据文件内容生产一个新的文件名称":["24.10"],"这里是inline":["24.11"],"loader用法":["24.11"],"代表后面还有一个css":["24.11"],"loader等待处理":["24.11"],"最终我们需要将remainingrequest中的路径转化成相对路径":["24.11"],"webpack才能处理":["24.11"],"希望得到":["24.11"],"所以":["24.11"],"需要将绝对路径转化成相对路径":["24.11"],"要求":["24.11"],"必须是相对路径":["24.11"],"配置中用到的":["24.13"],"相同的插件系统":["24.13"],"之上":["24.13"],"插件目的在于解决":["24.13"],"当":["24.14"],"构建的时候":["24.14"],"插件注册的事件就会随着钩子的触发而执行了":["24.14"],"内部的钩子":["24.14"],"什么是钩子":["24.14"],"钩子的本质就是":["24.14"],"为了方便我们直接介入和控制编译过程":["24.14"],"把编译过程中触发的各类关键事件封装成事件接口暴露了出来":["24.14"],"这些接口被很形象地称做":["24.14"],"hooks":["24.14"],"钩子":["24.14"],"开发插件":["24.14"],"离不开这些钩子":["24.14"],"loader":["24.15","25.26"],"等等配置信息":["24.15"],"它有以下主要属性":["24.15"],"options":["24.15","24.17"],"可以访问本次启动":["24.15"],"时候所有的配置文件":["24.15"],"包括但不限于":["24.15"],"等等完整配置信息":["24.15"],"inputfilesystem":["24.15"],"make":["24.16"],"asyncparallelhook":["24.16"],"也就是异步并行钩子":["24.16"],"特点就是异步任务同时执行":["24.16"],"可以使用":["24.16"],"tapasync":["24.16"],"tappromise":["24.16"],"如果使用tap注册的话":["24.16"],"进行异步操作是不会等待异步操作执行完成的":["24.16"],"compilation":["24.16"],"使用tapasync":["24.16"],"tappromise注册":["24.16"],"进行异步操作会等异步操作做完再继续往下执行":["24.16"],"callback":["24.16"],"需要处理文件":["24.17"],"extensions":["24.17"],"获取操作文件的对象":["24.18"],"fs":["24.18"],"emit是异步串行钩子":["24.18"],"实现":["24.19","24.20"],"analyze":["24.19"],"inline":["24.20"],"chunk":["24.20"],"safe":["24.20"],"之前有没有做过webpack的配置或者优化":["25.0"],"然后你想半天":["25.0"],"回答说":["25.0"],"main":["25.1","25.4","25.9"],"npm":["25.2","25.14","25.18","25.26","25.29","25.33"],"production":["25.3"],"文件输出目录":["25.4"],"必须是绝对路径":["25.4"],"方法返回一个绝对路径":["25.4"],"当前文件的文件夹绝对路径":["25.4"],"输出文件名":["25.4"],"height":["25.5","25.6"],"tomato":["25.5"],"运行":["25.5"],"npx":["25.5"],"serve":["25.5"],"添加图片资源":["25.6"],"box1":["25.6"],"box2":["25.6"],"box3":["25.6"],"width":["25.6"],"200px":["25.6"],"background":["25.6"],"repeat":["25.6"],"no":["25.6"],"文件夹中":["25.7"],"修改配置文件":["25.7"],"html":["25.7"],"只需要在输出配置":["25.8"],"加载器":["25.9","25.15"],"处理图片资源":["25.9"],"jpe":["25.9"],"gif":["25.9"],"webp":["25.9"],"处理js":["25.10"],"student":["25.11"],"指定检查文件的根目录":["25.12"],"主要为了排除检查dist目录下的js文件":["25.12"],"context":["25.12"],"eslint配置":["25.12"],"新建":["25.12"],"eslintrc":["25.12","25.33"],"处理css资源":["25.13"],"mini":["25.14"],"配置":["25.14","25.25","25.26","25.30"],"这里需要注意的是":["25.14"],"我们需要把":["25.14"],"处理css的loader":["25.15"],"正则匹配文件":["25.15"],"minicssextractplugin":["25.15"],"minimizer":["25.16"],"搭配起来使用":["25.17"],"因为less":["25.17"],"stylu这些样式的配置基本一致":["25.17"],"就不一个一个的去配置了":["25.17"],"这里以":["25.17"],"根据不同的需求":["25.18"],"就需要根据环境来区分不同的配置":["25.18"],"本地安装":["25.18"],"cross":["25.18"],"文档地址":["25.18"],"在前面":["25.19"],"大家可以查看webpack":["25.20"],"devtool":["25.20"],"文档":["25.20"],"主要用于开发模式中":["25.20"],"优点":["25.20"],"打包编译速度快":["25.20"],"只包含行映射":["25.20"],"没有列映射":["25.20"],"提升打包构建速度":["25.21"],"还不行":["25.22"],"js需要我们在入口文件":["25.22"],"mian":["25.22"],"中手动配置":["25.22"],"hot":["25.22"],"accept":["25.22"],"接收两个参数":["25.22"],"第一个参数是需要开启hmr功能的模块":["25.22"],"第二个参数是一个可选的回调函数":["25.22"],"在模块更新前需要做的事情":["25.22"],"如果没有可不传":["25.22"],"我们新建一个":["25.22"],"sum":["25.22"],"来测试这个功能":["25.22"],"虽然因为":["25.23"],"正则原因实际没有处理上":["25.23"],"下面的文件":["25.24"],"包含":["25.24"],"只处理":["25.24"],"xxx":["25.24"],"文件":["25.24"],"排除":["25.24"],"编译结果":["25.25"],"这样第二次打包时速度就会更快了":["25.25"],"开启缓存的配置也很简单":["25.25"],"因为babel":["25.25"],"loader跟eslint已经内置了缓存功能":["25.25"],"只需要开启就好了":["25.25"],"loader的缓存位置":["25.25"],"node":["25.25"],"安装依赖":["25.26","25.29"],"减少代码体积":["25.27"],"shaking":["25.28"],"extend":["25.29"],"默认情况下会被添加到每一个需要它的文件中":["25.29"],"你可以将这些辅助代码作为一个独立模块":["25.29"],"来避免重复引入":["25.29"],"optipng":["25.30"],"svgo":["25.30"],"有损压缩":["25.30"],"mozjpeg":["25.30"],"pngquant":["25.30"],"有损":["25.30"],"无损压缩的区别":["25.30"],"我们以无损压缩配置为例":["25.30"],"优化代码运行性能":["25.31"],"export":["25.32"],"default":["25.32"],"配置文件":["25.32"],"多入口":["25.32"],"是webpack命名规则":["25.32"],"使用chunk的name作为输出的文件名":["25.32"],"的值显示":["25.33"],"需要安装插件":["25.33"],"每次修改任何一个文件":["25.34"],"所有文件名的":["25.34"],"至都将改变":["25.34"],"所以一旦修改了任何一个文件":["25.34"],"整个项目的文件缓存都将失效":["25.34"],"根据不同的入口文件":["25.34"],"进行依赖文件解析":["25.34"],"构建对应的":["25.34"],"生成对应的哈希值":["25.34"],"我们":["25.34"],"是同一个引入":["25.34"],"会共享一个":["25.34"],"根据文件内容生成":["25.34"],"的缓存失效":["25.35"],"明明我们只修改":["25.35"],"为什么":["25.35"],"也会变身变化呢":["25.35"],"更新前":["25.35"],"加载优先级低":["25.36"],"只能加载当前页面需要使用的资源":["25.36"],"可以加载当前页面资源":["25.36"],"也可以加载下一个页面需要使用的资源":["25.36"],"浏览器空闲的时候进行资源的拉取":["25.36"],"总结":["25.36"],"翻译过来叫做垫片":["25.37"],"补丁":["25.37"],"就是用社区上提供的一段代码":["25.37"],"让我们在不兼容某些新特性的浏览器上":["25.37"],"使用该新特性":["25.37"],"主要是解决一些":["25.37"],"workbox":["25.38"]},{"0":["7.12","9.10","20.4","20.6"],"1":["0.10","0.11","2.3","9.25","11.4","16.8","20.8","20.9","20.20"],"2":["20.8","20.20","24.11"],"3":["9.9","20.20","24.6","24.11"],"4":["5.5","20.11"],"5":["9.18","22.19"],"8":["5.5"],"10":["9.12","25.9"],"16":["22.24"],"17":["20.27"],"18":["25.11"],"20":["9.9","9.10","22.24"],"22":["16.0","16.4"],"30":["9.9"],"34":["20.27"],"75":["9.25"],"100":["9.4","9.8","9.12","9.22"],"150":["9.4"],"222":["24.16"],"333":["24.16"],"1000":["24.6","24.16"],"1024":["25.9"],"3000":["25.22"],"4000":["7.2"],"5500":["3.1"],"8080":["6.13"],"143778":["9.25"],"或者通过":["0.0"],"input":["0.0"],"事件被抛出":["0.2"],"当拖动的元素或被选择的文本进入有效的放置目标时":["0.2"],"result":["0.3","11.1","11.2","11.3","15.5","24.6"],"onerror":["0.3"],"该事件会在文件读取发生错误的时候触发":["0.3"],"并抛出异常状态码值":["0.3"],"error":["0.3"],"code":["0.3"],"一共有5个码值":["0.3"],"分别代表不同的错误":["0.3"],"如下":["0.3"],"元素的":["0.4"],"files":["0.4","0.7","0.12"],"拖拽文件到此上传文件":["0.6"],"span":["0.6"],"onclick":["0.6"],"style":["0.7","1.7"],"bordercolor":["0.7"],"a89b9b":["0.7"],"for":["0.7","9.10","9.25","9.28"],"file":["0.7","0.10"],"of":["0.7"],"datatransfer":["0.7","0.12"],"change":["0.8"],"event":["0.8","13.6","14.2"],"上传的文件都会保存到文件数组中":["0.8"],"filearr":["0.8"],"push":["0.8","15.3"],"ms":["0.9"],"powerpoint":["0.9"],"ppt":["0.9"],"presentationml":["0.9"],"presentation":["0.9"],"excel":["0.9"],"id":["0.10","5.5"],"indexof":["0.10"],"清空整个文件上传盒子":["0.10"],"单个文件":["0.11"],"div":["0.11","5.3","22.28"],"144px":["0.11"],"获取拖拽文件列表数据":["0.12"],"length":["0.12"],"属性获取文件数量":["0.12"],"如果有遗漏或者错误的地方":["1.0"],"a标签分两种":["1.1"],"image":["1.2","5.1","9.3","9.4","9.24","25.5","25.6","25.11"],"注意":["1.2"],"下载跨域文件会导致":["1.2"],"属性失效":["1.2"],"就是我们熟知的文件流转":["1.3"],"filename":["1.4","1.5","1.8","24.10","25.32"],"下载文件的名字":["1.4","1.5"],"考虑到兼容性问题":["1.4","1.5"],"最好加上后缀名":["1.4","1.5"],"function":["1.4","1.5","1.8","15.5","16.5","24.5","25.20"],"downloadfile":["1.4","1.5","1.6","1.8"],"读取文件流":["1.5"],"const":["1.5","11.2","11.8","16.0","16.3","16.4","22.9","22.26","25.14","25.16","25.30","25.38"],"zip":["1.6"],"form":["1.7"],"action":["1.7"],"method":["1.7"],"get":["1.7","2.6","11.7","13.9"],"文件名":["1.8"],"请大家及时指正":["1.9"],"在维护的时候真的让人很恼火":["2.0"],"有时候一个":["2.0"],"bug":["2.0"],"let":["2.1","2.4","2.5","2.6","9.5","9.6","9.14","9.16","9.18","11.7","20.4"],"c":["2.1"],"a":["2.1","2.4","11.3","16.8","20.15","25.20"],"三元运算符使用的地方也比较多":["2.2"],"console":["2.3","7.2","16.2","20.12","20.20","22.26","24.5"],"log":["2.3","7.2","7.14","16.0","16.4","20.12","20.20","22.26","24.5"],"type":["2.4","8.1","20.18","25.9"],"使用对象配置":["2.5"],"策略模式实现":["2.5"],"策略模式":["2.5"],"我们可以根据用户类型来生成我们的折扣对象":["2.5"],"discounts":["2.5"],"strategies":["2.6"],"new":["2.6","11.8","16.0","16.4","24.5","25.30","25.32"],"map":["2.6","14.11","24.11"],"else":["2.7","15.3"],"并没有歧视的意思":["2.7"],"跟我的一个朋友":["3.0"],"在下杨公子":["3.0"],"聊天时":["3.0"],"child":["3.1"],"hello":["3.1"],"world":["3.1"],"在接收方中":["3.1"],"addeventlistener":["3.1"],"方法监听":["3.1"],"message":["3.1"],"事件":["3.1"],"该事件对象包含三个属性":["3.1"],"data":["3.1"],"表示接收到的数据":["3.1"],"origin":["3.1"],"表示发送方的源":["3.1"],"提高代码可读性":["4.1"],"不做也不行啊":["5.0"],"转动方向是这样的":["5.1"],"png":["5.1","9.4","9.24","25.5"],"所以用索引值比较直观":["5.3"],"js":["5.3","5.4","9.5","9.14","9.16","9.18","16.3","17.5","20.5","24.3","24.14","25.17","25.20"],"template":["5.3","24.5","25.32"],"class":["5.3","14.2","22.20","25.7"],"box":["5.3"],"做成点击事件指定奖品主要是为了不让对象发现":["5.4"],"指定的奖品":["5.4"],"如果没有指定奖品则随机指定一个奖品":["5.5"],"取随机数0":["5.5"],"数组的索引值":["5.5"],"math":["5.5"],"round":["5.5"],"random":["5.5"],"取随机数10":["5.5"],"20圈":["5.5"],"4时少转一圈":["5.5"],"num":["5.5"],"望大家指出":["5.6","25.39"],"则只能使用标准写法创建正则表达式":["6.1"],"i":["6.1","9.10","25.5","25.17"],"表示忽略大小写":["6.1"],"g":["6.1","20.3"],"表示匹配所有":["6.1"],"javascript":["6.1","6.7","6.11","17.3","20.2"],"m和n均为非负整数":["6.2"],"其中n":["6.2"],"最少匹配n次且最多匹配m次":["6.2"],"匹配除":["6.2"],"邮箱验证等":["6.4"],"以下用reg表示正则表达式":["6.6"],"配合":["6.7"],"和":["6.7","7.7","9.2","24.15"],"一起使用":["6.7"],"表示从头到尾匹配":["6.7"],"以下reg表示正则表达式":["6.8"],"search":["6.9"],"match":["6.10"],"直到找不到":["6.11"],"返回null为止":["6.11"],"示例":["6.11"],"var":["6.11","9.10","9.25","15.5","16.8"],"findall":["6.12","6.14"],"url":["6.13"],"http":["6.13"],"localhost":["6.13","25.22"],"public":["6.13","25.33"],"index":["6.13","25.32","25.33"],"html":["6.13","18.3","24.8","25.4","25.33"],"uname":["6.13"],"exec":["6.14"],"arg2":["7.1"],"timer":["7.2","7.12"],"settimeout":["7.2","7.7","11.6"],"定时器":["7.2","7.12"],"setinterval":["7.3"],"共用一个编号池":["7.3"],"技术上":["7.3"],"在每次调用之间具有固定的时间延迟":["7.4"],"delay":["7.5","7.6","7.11"],"arg1":["7.5"],"这个语法因为存在安全风险所以不被推荐使用":["7.6"],"是每次延迟的毫秒数":["7.6"],"一秒等于1000毫秒":["7.6"],"共享同一个id池":["7.7"],"并且":["7.7"],"的每调用一次定时器的最小间隔是4ms":["7.9"],"浏览器本身":["7.10"],"这就会导致如果一个延时":["7.11"],"执行次数":["7.12"],"倒计时":["7.14"],"秒":["7.14","7.15"],"当时间为0的时候清除定时器":["7.15"],"if":["7.15","11.0","11.5","14.11","15.1"],"博客主要记录一些学习的文章":["7.16"],"它返回的是一个":["8.0"],"base64":["8.0"],"流":["8.0"],"这样就导致先前的上传接口不支持":["8.0"],"因为它是直接接收":["8.0"],"charcodeat":["8.1"],"将文本文件转为utf":["8.1"],"16的ascii":["8.1"],"放到类型化数组对象中":["8.1"],"blob对象":["8.1"],"blob":["8.1"],"简单效果如下":["9.0"],"代码片段":["9.0"],"实现思路":["9.0"],"是":["9.1","20.2"],"html5":["9.1"],"标签":["9.2"],"只有两个可选的属性":["9.2"],"感兴趣的可以去看一下":["9.3"],"的一些api的兼容性":["9.3"],"green":["9.4"],"绘制矩形":["9.4"],"fillrect":["9.4"],"执行上例代码":["9.4"],"我们就可以得到如下的一个矩形":["9.4"],"closepath":["9.5"],"闭合路径之后":["9.5"],"图形绘制命令又重新指向到上下文中":["9.5"],"stroke":["9.5","9.8"],"通过线条来绘制图形轮廓":["9.5"],"fill":["9.5"],"通过填充路径的内容区域生成实心的图形":["9.5"],"接下来就用这些方法随意绘制一个图形":["9.5"],"获取canvas元素对象":["9.5"],"document":["9.5","9.6","9.14","9.16","9.18"],"getelementbyid":["9.5","9.6","9.11","9.14","9.16","9.18"],"y2":["9.6"],"radius":["9.6"],"根据给定的控制点和半径画一段圆弧":["9.6"],"最后再以直线连接两个控制点":["9.6"],"canvas":["9.6"],"ctx":["9.6","9.11","9.16"],"getcontext":["9.6"],"2d":["9.6","9.17"],"beginpath":["9.6","9.9"],"lineto":["9.8"],"线宽20":["9.8"],"moveto":["9.9"],"线宽":["9.10"],"linewidth":["9.10"],"font":["9.12"],"50px":["9.12"],"sans":["9.12"],"serif":["9.12"],"我爱学习":["9.12"],"不信你看":["9.12"],"的左上角在目标画布上":["9.13"],"在目标画布上绘制的宽高":["9.13"],"关于两个不同坐标和宽高的区别":["9.13"],"大家可以从下图跟概念结合理解一样":["9.13"],"图片来源":["9.13"],"mdn":["9.13"],"关于restore":["9.14"],"每一次调用":["9.14"],"上一个保存的状态就从栈中弹出":["9.14"],"所有设定都恢复":["9.14"],"pop":["9.14"],"fillstyle":["9.17","9.25"],"red":["9.17"],"save":["9.17"],"保存旋转前的状态":["9.17"],"个单位就变成对应":["9.18"],"这样绘制出来的形状就会是原先的一半":["9.18"],"变形矩阵":["9.19"],"否则会抛出异常":["9.20"],"这个函数的参数各自代表如下":["9.20"],"m11":["9.20"],"然后用相同的参数调用":["9.21"],"transform":["9.21","9.22"],"新图像会覆盖在原有图像":["9.24"],"in":["9.24","25.12"],"只绘制新旧图形重叠的部分":["9.24"],"其他区域全部透明":["9.24"],"绘制新图形":["9.24"],"out":["9.24"],"只绘制新旧图形没有重叠的部分":["9.24"],"填充圆形路径":["9.25"],"绘制三角形":["9.25"],"j":["9.25"],"保存":["9.27"],"状态":["9.27"],"如果你要改变一些会改变":["9.27"],"循环里面做完成动画是不太可能的":["9.28"],"因此":["9.28"],"如有不足":["9.29","13.12","14.14","24.21"],"我个人的理解就是":["10.0"],"为了使单线程的js在执行的时候不发生阻塞":["10.0"],"效应":["10.1"],"调用栈":["10.1"],"执行栈":["10.1"],"stack":["10.1"],"执行栈会将当前的执行上下文":["10.1"],"通俗一点可以理解成当前的函数调用":["10.1"],"压入到执行栈当中":["10.1"],"如果存在则按顺序执行":["10.2"],"直至清空":["10.2"],"如果在执行过程中产生了新的":["10.2"],"则把该任务放入队列的队尾":["10.2"],"settimeout2":["10.4"],"end":["10.4"],"这里的结果是什么呢":["10.4"],"不妨结合上面简述的知识看一下":["10.4"],"promise1":["10.5"],"then":["10.5"],"promise2":["10.5","11.8"],"loop":["10.6"],"null":["11.0","13.5","15.1"],"return":["11.0","11.2","11.3","13.9","15.1","15.3","20.21","22.22","22.26","22.28","24.16"],"false":["11.0","22.22"],"prototype":["11.1","16.7"],"第三步":["11.1"],"改变构造函数的this指向":["11.1"],"apply":["11.1","11.6","24.20"],"第四步":["11.1"],"判断返回值":["11.1"],"测试":["11.1","11.2","11.3"],"带参数执行函数":["11.2"],"contextfn":["11.2","11.3"],"删除fn":["11.2","11.3"],"确保不会污染原对象":["11.2","11.3"],"delete":["11.2","11.3"],"slice":["11.4"],"call":["11.4"],"arguments":["11.4"],"fnop":["11.4"],"绑定后生成的函数":["11.4"],"fbound":["11.4"],"bindargs":["11.4"],"使用apply改变调用时的this指向":["11.4"],"cleartimeout":["11.5"],"延迟执行函数":["11.5"],"this":["11.6","14.11","15.2","16.5","20.12","20.15","22.17","24.10","24.11","24.20"],"则返回缓存的对象":["11.7"],"防止递归进入死循环":["11.7"],"has":["11.7"],"使用原对象的构造函数创建一个新对象":["11.7"],"newobj":["11.7"],"constructor":["11.7","14.2","24.20"],"throw":["11.8"],"成功":["11.8","15.4"],"resolvemicrotask":["11.8","15.4"],"queuemicrotask":["11.8","15.4"],"then执行阶段错误捕获":["11.8","15.4"],"x":["11.8","15.4","16.8","20.26"],"resolvepromise":["11.8","15.4"],"失败":["11.8","15.4"],"rejectmicrotask":["11.8","15.4"],"发布者":["11.9"],"eventbus":["11.9","13.10"],"推送消息":["11.9","13.10"],"pusharticle":["11.9","13.10"],"val":["11.9","13.10","22.26"],"一些手写的源码解析":["12.1"],"多数人知晓的":["13.1"],"经过分类编目的":["13.1"],"l":["13.2"],"liskov":["13.2"],"substitution":["13.2"],"里氏替换原则":["13.2"],"子类能覆盖父类":["13.2"],"订阅模式其实是一种对象间一对多的依赖关系":["13.4"],"specific":["13.5"],"cbs":["13.5"],"没有":["13.5"],"直接":["13.5"],"遍历缓存列表":["13.6"],"update":["13.6"],"触发观察者的回调函数":["13.6"],"观察者":["13.6"],"name":["13.6","16.3","16.5","20.7"],"发布":["13.8"],"指向观察者":["13.9"],"收集":["13.9"],"set":["13.9"],"newval":["13.9"],"新值与旧值相等":["13.9"],"或新值与旧值都为nan":["13.9"],"发布订阅者模式比观察者模式多了一个调度中心":["13.11"],"pattern":["14.0","14.3","14.9"],"永远只会存在一个":["14.1"],"loading":["14.1"],"true":["14.2","16.2","25.8","25.22","25.32"],"符合单一职责的单例模式":["14.2"],"把功能函数提取出来":["14.2"],"如初始化":["14.2"],"等操作方法":["14.2"],"功能类":["14.2"],"funcclass":["14.2"],"createelement创建dom元素":["14.4"],"就是使用工厂模式的思想实现的":["14.4"],"bclass":["14.5"],"defulat":["14.5"],"又称生成器模式":["14.6"],"汽车工厂类似与这种由多个部件组成的":["14.7"],"部件2":["14.8"],"setaddress":["14.8"],"address":["14.8"],"链模式使用":["14.8"],"相关的拦截器":["14.10"],"item":["14.11"],"运用共享技术来有效地支持大量细粒度对象的复用":["14.12"],"以减少创建的对象的数量":["14.12"],"优点":["14.13"],"减少了系统中的对象数量":["14.13"],"提高了程序运行效率和性能":["14.13"],"等待态":["15.0"],"fulfiled":["15.0"],"value":["15.1"],"如果状态不是pending":["15.1"],"则直接返回":["15.1"],"因为状态已经改变就不可再次改变":["15.1"],"状态置为成功的状态fulfiled":["15.1"],"执行传进来的回调函数":["15.2"],"executor":["15.2"],"resolve":["15.2","24.16"],"时执行第二个回调":["15.3"],"失败的回调":["15.3"],"pending":["15.3"],"时":["15.3"],"暂时保存两个回调":["15.3"],"onfulfilledcallbacks":["15.3"],"onrejectedcallbacks":["15.3"],"如果":["15.4"],"js中添加以下代码":["15.5"],"我们手写的promise":["15.5"],"mypromise":["15.5"],"测试代码":["15.5"],"deferred":["15.5"],"规范实现的":["15.6"],"then方法我参考了":["15.6"],"能说下promise实现异步的原理吗":["15.7"],"consle":["16.0"],"实例":["16.0","22.9"],"person1":["16.0","16.4","20.25"],"tom":["16.0","16.4"],"person2":["16.0","16.4","16.7","16.9"],"proto":["16.2"],"创建的对象就是object的实例":["16.3"],"验证":["16.3"],"people":["16.3"],"lucy":["16.3","20.7","22.24"],"jim":["16.4","22.24"],"person":["16.5"],"age":["16.5","20.17"],"函数和对象的":["17.0"],"可访问性":["17.0"],"在任何地方都能访问到的对象称之为全局作用域":["17.1"],"这不是对象字面量":["17.3"],"而是一个独立的块":["17.3"],"解释器会根据其中内容识别出它来":["17.3"],"d":["17.3","22.5","25.18","25.29","25.33"],"即执行":["17.4"],"函数代码":["17.4"],"这里的":["17.4"],"并没有":["17.4"],"声明":["17.4"],"直接赋值":["17.4"],"所以顺着":["17.4"],"向上查找":["17.4"],"在fn中没有找到":["17.4"],"继续向上查找":["17.4"],"在全局作用域中找到了":["17.4"],"所以全局作用域下的":["17.4"],"变量的值被改变为50":["17.4"],"接下来输出a":["17.4"],"同理":["17.4"],"防止全局变量污染":["17.5"],"可以让局部变量常驻在内存中":["17.5"],"会造成内存泄漏":["17.5"],"有一块内存空间被长期占用":["17.5"],"而不被释放":["17.5"],"垃圾收集器会定期":["17.6"],"周期性":["17.6"],"找出那些不在继续使用的变量":["17.6"],"然后释放其内存":["17.6"],"就可能会用到它们":["17.7"],"而当变量离开环境时":["17.7"],"则将其标记为":["17.7"],"离开环境":["17.7"],"如果同一个值又被赋给另一个变量":["17.8"],"则该值的引用次数加1":["17.8"],"com":["17.9"],"一个可以快速搭建类似于vue官方文档一样的文档":["18.0"],"vuepress官方文档":["18.1"],"这样我们更改配置文件后就不需要重新启动项目也能看到效果啦":["18.2"],"scripts":["18.2","25.18"],"dev":["18.2","18.3","25.18","25.20"],"templates":["18.3"],"谨慎配置":["18.3"],"ssr":["18.3"],"features":["18.4"],"title":["18.4"],"简洁至上":["18.4"],"details":["18.4"],"以":["18.4"],"markdown":["18.4"],"为中心的项目结构":["18.4"],"以最少的配置帮助你专注于写作":["18.4"],"nav":["18.5"],"text":["18.5"],"主页":["18.5"],"home":["18.5"],"时间轴":["18.5"],"timeline":["18.5"],"date":["18.5"],"随笔":["18.5"],"因为我的自动部署是在gh":["18.6"],"pages分支":["18.6"],"所以我的pages的source为gh":["18.6"],"看来是舒适的工作环境让我逐渐失去了前进的动力":["20.0"],"️":["20.0"],"也就是说":["20.1"],"拥有":["20.1"],"超集":["20.2"],"完全兼容":["20.2"],"npm":["20.3","25.5","25.17","25.20"],"install":["20.3"],"nunm":["20.4"],"number":["20.4","20.8","20.15","20.16","20.24"],"在元组初始化的时候":["20.9"],"如果出现类型和":["20.9"],"不匹配的话":["20.9"],"direction":["20.10"],"north":["20.10"],"south":["20.10"],"east":["20.10"],"notsure":["20.11"],"any":["20.11"],"is":["20.12","20.15"],"n":["20.13"],"默认情况下":["20.13","22.17","24.6"],"类型":["20.14","20.16"],"除了":["20.14","25.24"],"本身之外":["20.14"],"即使":["20.14"],"string":["20.15","20.17"],"strlength":["20.15"],"familyperson":["20.18"],"readonly":["20.19"],"只读属性":["20.19"],"es6":["20.20"],"箭头函数的写法":["20.20"],"sayhello":["20.21"],"hi":["20.21"],"我是":["20.21"],"username":["20.22"],"protected":["20.22"],"password":["20.22"],"interface":["20.23"],"point3d":["20.23"],"帮助我们捕获用户传入的类型":["20.24"],"比如":["20.24","25.32"],"之后我们就可以使用这个类型":["20.24"],"上述中的":["20.24"],"并没有什么特别的含义":["20.24"],"conardli":["20.25"],"y":["20.26"],"哈哈":["20.27"],"另一个例子":["20.27"],"下面":["20.27"],"我们定义了一个名为":["20.27"],"allvehicles":["20.27"],"的联合类型":["20.27"],"它可以是":["20.27"],"plane":["20.27"],"docs":["20.28"],"一直没有很好静下心来好好梳理一下":["22.0"],"一点点":["22.2"],"node":["22.3","22.10","24.3","24.6","25.18"],"yarn":["22.4"],"create":["22.4"],"vue":["22.5","22.11","22.29","25.12"],"安装完之后在":["22.5"],"可以自动导入api":["22.6"],"如":["22.6","25.37"],"router":["22.6"],"elementplus":["22.6"],"这些的api":["22.6"],"在使用过程中就不需要我们手动去导入":["22.6"],"啦":["22.6"],"自动导入组件":["22.6"],"只会导入我们使用的组件":["22.6"],"pages":["22.7"],"注意这里要带上":["22.7"],"文件后缀":["22.7"],"history":["22.7"],"所以安装一下":["22.8"],"createpinia":["22.9"],"创建":["22.9"],"use":["22.9"],"moduleresolution":["22.10"],"strict":["22.10"],"jsx":["22.10"],"preserve":["22.10"],"sourcemap":["22.10"],"resolvejsonmodule":["22.10"],"isolatedmodules":["22.10"],"不得不说":["22.11"],"slots":["22.12"],"触发事件":["22.12"],"方法":["22.12"],"emit":["22.12","24.16"],"needed":["22.13"],"created":["22.13"],"beforemount":["22.13"],"onbeforemount":["22.13"],"isref":["22.14"],"的语法糖函数":["22.14"],"检查值是否为一个":["22.14"],"创建的响应式代理":["22.15"],"isreactive":["22.15"],"但是该代理是":["22.15"],"创建的":["22.15"],"错误":["22.16"],"或者":["22.16"],"接受一个具有":["22.16"],"以及相应的":["22.17"],"watch选项":["22.17"],"完全等效":["22.17"],"需要侦听特定的数据源":["22.17"],"并在单独的回调函数中执行副作用":["22.17"],"它也是惰性的":["22.17"],"即回调仅在侦听源发生变化时被调用":["22.17"],"与":["22.17"],"vue3":["22.18"],"b":["22.19"],"只不过在":["22.19"],"数组":["22.20"],"element":["22.22"],"setup":["22.26"],"clickbox":["22.26"],"指定绑定值写法":["22.27"],"modelvalue":["22.27"],"export":["22.28","25.20"],"default":["22.28","25.20"],"definecomponent":["22.28"],"从ctx中解构出来":["22.28"],"proptype":["22.29"],"routerecordraw":["22.29"],"原理篇":["23.1"],"类似于其他构建工具中":["24.2"],"任务":["24.2"],"task":["24.2"],"运行在":["24.3"],"中":["24.3","24.15"],"并且能够执行任何操作":["24.3"],"可以通过":["24.3"],"options":["24.3","24.7","24.18","25.15","25.30"],"对象配置":["24.3"],"仍然支持使用":["24.3"],"使用":["24.4","25.24"],"的方式":["24.4"],"配置方式":["24.4"],"在":["24.4","24.6","24.14"],"webpack":["24.4","25.2","25.26"],"config":["24.4","25.22"],"文件中指定":["24.4"],"plugins":["24.5","25.15","25.30","25.32","25.33"],"mode":["24.5","25.11","25.32"],"development":["24.5"],"我们自定义的loader":["24.5"],"打印我们接收到的文件内容":["24.5"],"由于同步计算过于耗时":["24.6"],"这样的单线程环境下进行此操作并不是好的方案":["24.6"],"我们建议尽可能地使你的":["24.6"],"异步化":["24.6"],"但如果计算量很小":["24.6"],"也是可以的":["24.6"],"raw":["24.6"],"meta":["24.7","25.4","25.33"],"getoptions":["24.7"],"schema":["24.7","24.9"],"获取":["24.7"],"的":["24.7"],"path":["24.8","24.18"],"require":["24.8","24.9","25.14","25.16","25.30","25.38"],"htmlwebpackplugin":["24.8"],"plugin":["24.8","25.26","25.33"],"单入口":["24.8"],"json":["24.9","25.1","25.18"],"module":["24.9","25.24","25.25","25.26","25.29","25.30","25.33","25.34"],"interpolatename":["24.10"],"hash":["24.10"],"ext":["24.10"],"输出文件":["24.10"],"相对路径必须以":["24.11"],"或":["24.11"],"开头":["24.11"],"相对路径的路径分隔符必须是":["24.11"],"不能是":["24.11"],"relativerequest":["24.11"],"split":["24.11"],"part":["24.11"],"将路径转化为相对路径":["24.11"],"relativepath":["24.11"],"utils":["24.11"],"contextify":["24.11"],"context":["24.11"],"loader":["24.13","25.5","25.11","25.25","25.29"],"无法实现的":["24.13"],"其他功能":["24.13"],"为":["24.14"],"提供了统一的插件接口":["24.14"],"类型定义":["24.14"],"它是":["24.14"],"的核心功能库":["24.14"],"中目前有十种":["24.14"],"源码中可以看到":["24.14"],"他们是":["24.14"],"outputfilesystem":["24.15"],"可以进行文件操作":["24.15"],"相当于":["24.15"],"nodejs":["24.15"],"fs":["24.15"],"hooks":["24.15","24.20"],"可以注册":["24.15"],"的不同种类":["24.15"],"hook":["24.15"],"从而可以在":["24.15"],"必须调用":["24.16"],"必须返回promise":["24.16"],"promise":["24.16"],"asyncserieshook":["24.16"],"也就是异步串行钩子":["24.16"],"特点就是异步任务顺序执行":["24.16"],"css":["24.17"],"emit是异步串行钩子":["24.17","24.19"],"tapasync":["24.17","24.18"],"callback":["24.17","24.18"],"assets包含所有即将输出的资源":["24.17"],"通过过滤只保留需要处理的文件":["24.17"],"compilation":["24.18","24.19","24.20"],"获取输出文件目录":["24.18"],"outputpath":["24.18"],"output":["24.18","25.34"],"删除目录所有文件":["24.18"],"err":["24.18"],"tap":["24.19","24.20"],"object":["24.19"],"entries将对象变成二维数组":["24.19"],"tests":["24.20"],"compiler":["24.20"],"gethooks":["24.20"],"alterassettaggroups":["24.20"],"webpack是一个比较流行的打包工具":["25.0"],"可以通过配置loader":["25.0"],"plugin来优化我们的代码":["25.0"],"webpack配置文件":["25.1"],"package":["25.1","25.18"],"在src":["25.1"],"是用来运行本地安装":["25.3"],"包的":["25.3"],"rules":["25.4","25.26"],"为了更好的观察我们打包输出的文件":["25.4"],"我们先配置一下devserve":["25.4"],"在根目录中新增一个public文件夹":["25.4"],"并在其中新建一个index":["25.4"],"doctype":["25.4","25.33"],"lang":["25.4","25.33"],"en":["25.4","25.33"],"head":["25.4","25.33"],"charset":["25.4"],"utf":["25.4"],"在这里报错了":["25.5"],"原因是":["25.5"],"webpack只能处理js和json文件":["25.5"],"其它类型的文件不能处理":["25.5"],"需要借助loader来处理":["25.5"],"安装":["25.5"],"处理css文件":["25.5"],"size":["25.6"],"contain":["25.6"],"images":["25.6"],"webp":["25.6"],"iconfont":["25.7"],"icon":["25.7"],"bluetoothoff":["25.7"],"就可以实现":["25.8"],"asset":["25.9"],"parser":["25.9"],"dataurlcondition":["25.9"],"maxsize":["25.9"],"小于10kb的图片会被base64处理":["25.9"],"generator":["25.9"],"将图片文件输出到":["25.9"],"兼容性跟静态检查":["25.10"],"测试的时候":["25.11"],"把模式":["25.11"],"的值改为":["25.11"],"none":["25.11"],"这样就可以比较清晰的看到输出啦":["25.11"],"可以看的出来":["25.11"],"我们使用的es6的语法在输出的资源中还是原本的语法":["25.11"],"这样的话在低版本浏览器就会出现兼容性的问题":["25.11"],"png安装babel以及相关依赖":["25.11"],"编译es6语法转化为es5的语法":["25.11"],"core":["25.11"],"编译的核心包":["25.11"],"文件":["25.12"],"并根据官网规则配置":["25.12"],"比较出名的几个规则":["25.12"],"官方的规则open":["25.12"],"window":["25.12"],"recommended":["25.12"],"cli":["25.12"],"替换成":["25.14"],"插件的loader":["25.14"],"并且需要调用插件":["25.14"],"minicssextractplugin":["25.14"],"postcssoptions":["25.15"],"配置文件":["25.16"],"cssminimizerplugin":["25.16"],"为例":["25.17"],"安装依赖":["25.17","25.37"],"配置启动命令":["25.18"],"打开":["25.18"],"我们已经把基本配置都配置好了":["25.19"],"新建一个js文件夹":["25.20"],"并在文件夹中建立a":["25.20"],"js文件":["25.20"],"故意写入一点错误代码":["25.20"],"然后运行":["25.20"],"run":["25.20"],"exports":["25.22","25.24","25.25","25.26","25.29","25.30","25.33","25.34"],"其他省略":["25.22"],"devserver":["25.22"],"host":["25.22"],"启动服务器域名":["25.22"],"port":["25.22"],"启动服务器端口号":["25.22"],"open":["25.22"],"是否自动打开浏览器":["25.22"],"但是都要过一遍":["25.23"],"比较慢":["25.23"],"顾名思义就是只能匹配上一个":["25.23"],"文件以外其他文件都处理":["25.24"],"加载器":["25.24","25.25","25.26","25.29"],"modules":["25.25"],"eslint的缓存位置我们可以自己设置":["25.25"],"terserplugin":["25.26"],"terser":["25.26"],"是一个术语":["25.28"],"通常用于描述移除":["25.28"],"配置":["25.29","25.38"],"配置也相对简单":["25.29"],"只需要在":["25.29"],"中引用插件就好":["25.29"],"imageminimizerplugin":["25.30"],"插件":["25.30"],"压缩图片":["25.30"],"implementation":["25.30"],"imagemingenerate":["25.30"],"体验":["25.31"],"什么是chunk":["25.32"],"打包的资源就是chunk":["25.32"],"输出出去叫bundle":["25.32"],"chunk的name是啥呢":["25.32"],"entry中xxx":["25.32"],"xxx":["25.32","25.35"],"name就是xxx":["25.32"],"注意是前面的xxx":["25.32"],"和文件名无关":["25.32"],"为什么需要这样命名呢":["25.32"],"如果还是之前写法main":["25.32"],"那么打包生成两个js文件都会叫做main":["25.32"],"js会发生覆盖":["25.32"],"实际上会直接报错的":["25.32"],"clear":["25.32"],"production":["25.32"],"运行指令":["25.32"],"npx":["25.32"],"此时在":["25.32"],"目录我们能看到输出了两个":["25.32"],"总结":["25.32"],"配置了几个入口":["25.32"],"至少输出几个":["25.32"],"提取重复文件":["25.32"],"通过输出文件":["25.32"],"我们可以看出来":["25.32"],"eslint":["25.33"],"解决动态导入import语法报错问题":["25.33"],"只有文件内容变化了":["25.34"],"值才会变化":["25.34"],"所有文件":["25.34"],"值是独享且不同的":["25.34"],"有了以上的知识":["25.34"],"我们就可以根据不同的占位符来配置一下了":["25.34"],"输出":["25.34"],"static":["25.34"],"入口文件打包输出资源命名方式":["25.34"],"chunkfilename":["25.34"],"引用的":["25.35"],"更新后":["25.35"],"yyy":["25.35"],"当前页面优先级高的资源用":["25.36"],"加载":["25.36"],"下一个页面需要使用的资源用":["25.36"],"它们的问题":["25.36"],"兼容性较差":["25.36"],"babel":["25.37"],"无法解决的兼容性问题":["25.37"],"async函数":["25.37"],"promise对象等":["25.37"],"workboxplugin":["25.38"]},{"0":["0.8","7.15","9.4","9.14","25.4"],"1":["0.3","2.4","10.4"],"2":["0.0","2.3"],"3":["2.3","17.4","20.8","25.6"],"4":["10.2"],"5":["25.22","25.30"],"6":["6.7","25.22"],"8":["24.6","25.4","25.33"],"9":["7.12"],"10":["9.22"],"12":["22.3"],"17":["20.25"],"18":["11.2","11.3","14.8","16.0","16.4","20.7"],"20":["9.11"],"40":["9.6"],"50":["9.5","9.6","9.10"],"100":["0.11","9.9","9.16","9.17","9.18"],"110":["9.8"],"123":["16.5"],"150":["9.6","9.14"],"160":["9.8"],"180":["9.17"],"200":["9.12","14.11"],"555":["25.20"],"3000":["24.16"],"2147483647":["7.11"],"元素获取文件":["0.0"],"事件被触发":["0.2"],"当元素或者选择的文本被拖拽到一个有效的放置目标上时":["0.2"],"switch":["0.3"],"case":["0.3"],"alert":["0.3"],"未找到文件":["0.3"],"break":["0.3","13.5"],"安全错误":["0.3"],"属性或者拖拽操作的元素的":["0.4"],"datatransfer":["0.4"],"upload":["0.6"],"点击上传":["0.6"],"把文件保存到文件数组中":["0.7"],"push":["0.7","11.8","15.4","22.29"],"初始化文件":["0.7"],"filestoblod":["0.7","0.8"],"else":["0.7","5.5","11.8","15.4"],"target":["0.8"],"files":["0.8","24.18"],"spreadsheetml":["0.9"],"sheet":["0.9"],"pdf":["0.9"],"text":["0.9"],"plain":["0.9"],"innerhtml":["0.10"],"删除文件数组中对应的数据":["0.10"],"filearr":["0.10"],"splice":["0.10","13.5"],"170px":["0.11"],"3px":["0.11"],"display":["0.11","1.7"],"inline":["0.11"],"block":["0.11"],"缩略图":["0.11"],"img":["0.11"],"145px":["0.11"],"删除按钮":["0.11"],"absolute":["0.11"],"right":["0.11"],"type":["0.12","20.9","20.27","22.29"],"属性获取文件类型":["0.12"],"filereader":["0.12"],"对象":["0.12","16.4"],"通过":["0.12"],"readasdataurl":["0.12"],"希望大家及时指出":["1.0"],"直接a标签点击下载":["1.1"],"download属性":["1.1"],"用法":["1.2","24.4"],"属性可以指定下载的文件的文件名":["1.2"],"如果有属性值则该属性值就是下载后的文件的文件名":["1.2"],"js":["1.2","9.13","18.3","22.8","22.19","25.8","25.36"],"a":["1.2","6.13","11.2","20.11","20.24","25.1"],"blob":["1.3","24.14"],"base64":["1.3"],"读取文件流":["1.4"],"const":["1.4","1.8","5.4","7.14","14.8","20.18","20.20","20.21","24.19","25.1"],"window":["1.4","24.15"],"创建a标签并设置属性":["1.4","1.5"],"reader":["1.5"],"new":["1.5","11.0","14.8","15.5","20.21","20.26","24.15"],"读取完成的回调事件":["1.5"],"e":["1.5"],"使用该方法需要注意":["1.6"],"none":["1.7"],"创建input":["1.7"],"用于传参":["1.7"],"formitem":["1.7"],"input":["1.7"],"创建iframe":["1.8"],"document":["1.8","9.13","18.5","25.4"],"createelement":["1.8"],"博客主要记录一些学习的文章":["1.9","10.6","15.7","17.9","20.28"],"如有不足":["1.9","7.16","10.6"],"排查下来":["2.0"],"严重感觉身体被掏空":["2.0"],"本文并未有消灭或歧视":["2.0"],"比如":["2.2"],"条件赋值":["2.2"],"递归":["2.2"],"num值在nboolean为true时为10":["2.2"],"否则为5":["2.2"],"let":["2.2","9.13","17.5","20.5","20.26","24.19"],"num":["2.2"],"d":["2.3","6.2","6.7","24.5","25.2","25.5","25.11","25.17","25.37"],"tactics":["2.4"],"b":["2.4","16.8"],"default":["2.5","22.7","24.10","25.30"],"至此":["2.6"],"这个需求做完了":["2.6"],"然后产品经理说要加上一个部门区分":["2.6"],"假设公司有两个部门d和f":["2.6"],"d部门的业绩较好":["2.6"],"所以年终奖翻1":["2.6"],"2倍":["2.6"],"f部门的业绩较差":["2.6"],"年终奖打9折":["2.6"],"改造以上代码":["2.6"],"把状态值拼接":["2.6"],"然后存入map中":["2.6"],"只是希望在大家以后的代码中不仅仅只有":["2.7"],"他提到了":["3.0"],"的通信方式":["3.0"],"source":["3.1","24.19"],"表示发送方窗口的引用":["3.1"],"function":["3.1","24.9"],"event":["3.1","11.9","13.10"],"判断消息是否来自可信任的源":["3.1"],"if":["3.1","13.9","25.22"],"console":["3.1","11.2","11.3","11.9","13.6","13.10","14.5","14.11","15.1","16.0","16.3","25.20"],"log":["3.1","11.2","11.3","11.9","13.6","14.5","14.11","15.1","16.3"],"兼容性":["3.1"],"来自":["3.1"],"mdn":["3.1"],"image":["3.1","9.12","24.5","25.32"],"iframe之间的通信":["4.1"],"最后给大家看一个简化版的":["5.0"],"没有美工样式":["5.0"],"抽奖方式主要分为两种":["5.1"],"一种是随机抽取":["5.1"],"完全随机":["5.1"],"还有一种是指定奖品抽取":["5.1"],"index":["5.3","24.14"],"in":["5.3","11.7","24.15"],"raffleitem":["5.3"],"appointraffle":["5.4"],"ref":["5.4"],"handleraffle":["5.5"],"转动的方法实现":["5.5"],"这里需要注意的是":["5.5"],"我们使用的是索引值":["5.5"],"所以转动一圈为":["5.5"],"而不是":["5.5"],"抽奖方法":["5.5"],"每转完一圈":["5.5"],"转动速度规则":["5.5"],"speedrole":["5.5"],"如果圈数跟需要转动的总圈数相同并且转到本轮中奖的位置则停止转动":["5.5"],"谢谢":["5.6","25.39"],"匹配数组中包含的字符":["6.1"],"arr":["6.1","11.0"],"国":["6.1"],"人":["6.1"],"str":["6.1"],"之外的任何单个字符":["6.2"],"表示或":["6.2"],"匹配一个数字字符":["6.2"],"匹配一个非数字字符":["6.2"],"f":["6.2"],"匹配六位数字":["6.7"],"var":["6.7"],"reg":["6.7"],"敏感词":["6.9","6.10","6.12"],"查找模式匹配":["6.9"],"正则表达式":["6.11"],"do":["6.11"],"result":["6.11"],"zhongguo":["6.13"],"upwd":["6.13"],"zhongguo123":["6.13"],"z":["6.13","20.23","20.24"],"z0":["6.13"],"每个方法都有自己的优缺点":["6.14"],"零宽断言":["6.14"],"主要是在指定的位置添加限制条件":["6.14"],"方法设置一个定时器":["7.0"],"可选":["7.2"],"延迟的毫秒数":["7.2"],"一秒等于1000毫秒":["7.2"],"函数的调用会在该延迟之后发生":["7.2"],"如果省略该参数":["7.2"],"delay取默认值0":["7.2"],"意味着":["7.2"],"clearinterval":["7.3","7.12","7.15"],"可以互换":["7.3"],"但是":["7.3"],"方法重复调用函数或执行代码片段":["7.4"],"每次调用之间有固定的时间延迟":["7.4"],"arg2":["7.5"],"函数的每次调用会在该延迟之后发生":["7.6"],"和settimeout一样":["7.6"],"实际的延迟时间可能会稍长一点":["7.6"],"这个时间计算单位是毫秒":["7.6"],"cleartimeout":["7.7","11.6"],"在技术上是可互换使用的":["7.7"],"这通常是由于函数嵌套导致":["7.9"],"被其他任务占用导致延时":["7.10"],"需要被强调是":["7.10"],"大于":["7.11"],"毫秒":["7.11"],"setinterval":["7.12","9.28"],"执行十次后停止并清除定时器":["7.12"],"定义定时器":["7.14","7.15"],"间隔一秒执行一次该函数":["7.14","7.15"],"timer":["7.14","7.15"],"formdata":["8.0","8.1"],"的":["8.0","24.3"],"不支持":["8.0"],"audio":["8.1"],"wav":["8.1"],"formdata对象":["8.1"],"fd":["8.1"],"把文件追加到formdata对象中":["8.1"],"append":["8.1"],"autocall":["8.1"],"file":["8.1"],"️":["9.0"],"封装一个全局指令":["9.0"],"这里案列是私有指令":["9.0"],"新增的元素":["9.1"],"主要用来绘制图形":["9.1"],"分别设置标签的高度与宽度":["9.2"],"默认值为":["9.2"],"png":["9.3","9.12","9.13","24.5","25.6","25.32","25.34"],"当浏览器不兼容的时候":["9.3"],"就会显示我们标签中的备选文案":["9.3"],"当前的浏览器版本不支持":["9.3"],"我们分析一下上述的代码":["9.4"],"以栅格的图来描述可以得到以下图片":["9.4"],"一个格子为50":["9.4"],"可以看得出来":["9.4"],"我们":["9.4"],"画图":["9.4"],"的起点为":["9.4"],"画布":["9.4"],"的左上角":["9.4"],"坐标为":["9.4"],"使用getcontext函数来获取画笔":["9.5"],"ctx":["9.5","9.13","9.14","9.18"],"getcontext":["9.5","9.11","9.13","9.14","9.16","9.18"],"2d":["9.5","9.11","9.13","9.14","9.16","9.18"],"开启路径绘制":["9.5"],"移动画笔起点到":["9.5"],"stroke":["9.6"],"lineto":["9.9"],"linewidth":["9.9"],"length":["9.10","20.15"],"beginpath":["9.10"],"moveto":["9.10"],"对了":["9.12"],"文本还有一点小知识":["9.12"],"就是控制文本的样式":["9.12"],"value":["9.12","13.9"],"当前我们用来绘制文本的样式":["9.12"],"这个字符串使用和":["9.12"],"css":["9.12","24.4"],"属性相同的语法":["9.12"],"实践":["9.13"],"canvas":["9.13"],"getelementbyid":["9.13"],"fillrect":["9.14","9.22"],"使用默认设置绘制一个矩形":["9.14"],"保存默认状态":["9.14"],"save":["9.16","9.18","9.25"],"保存坐原点平移之前的状态":["9.16"],"translate":["9.17"],"平移坐标原点":["9.17"],"math":["9.17"],"pi":["9.17"],"保存初始状态":["9.18"],"strokestyle":["9.18"],"red":["9.18"],"strokerect":["9.18"],"水平方向的缩放":["9.20"],"m12":["9.20"],"竖直方向的倾斜偏移":["9.20"],"方法":["9.21"],"如果任意一个参数是无限大":["9.21"],"atop":["9.24"],"新图形只绘制与旧图形内容重叠的地方":["9.24"],"旧图形正常绘制":["9.24"],"新图形位于旧图形上方":["9.24"],"destination":["9.24"],"新图像会在老图像的下面":["9.24"],"绘制旧图形":["9.24"],"fff":["9.25"],"在圆形中随机取坐标原点":["9.25"],"floor":["9.25"],"random":["9.25"],"状态的设置":["9.27"],"样式":["9.27"],"变形之类的":["9.27"],"又要在每画一帧之时都是原始状态的话":["9.27"],"你需要先保存一下":["9.27"],"为了实现动画":["9.28"],"我们需要一些可以定时执行重绘的方法":["9.28"],"我们可以通过以下三种方法来实现定时重绘":["9.28"],"望大家指出":["9.29","13.12","14.14","24.21"],"eventloop有两种":["10.0"],"浏览器的eventloop":["10.0"],"执行完成后就会把它弹出去":["10.1"],"任务队列":["10.1"],"queue":["10.1"],"任务队列通俗的讲就是存放异步任务的队列":["10.1"],"js的任务队列有两种":["10.1"],"宏任务队列":["10.1"],"macrotask":["10.1"],"在当前周期执行":["10.2"],"执行完毕":["10.2"],"为空":["10.2"],"相信这样简单的题目":["10.4"],"对于正在看文章的你来说是轻而易举的":["10.4"],"我们来分析一下具体的流程":["10.4"],"end":["10.5"],"这里结果又会是什么呢":["10.5"],"测试":["11.0"],"obj":["11.0"],"fn":["11.0"],"class":["11.0","16.5","22.24","22.26","25.4"],"father":["11.0"],"father1":["11.0"],"student":["11.1"],"name":["11.1","11.2","11.3","11.9","13.10","20.4","22.29","24.7","25.4","25.30"],"age":["11.1","11.2","11.3","20.7"],"this":["11.1","11.5","20.22","24.9","24.18"],"tom":["11.1","11.2","11.3","14.8"],"add":["11.2","11.3"],"hobby":["11.2","11.3"],"my":["11.2","11.3","20.12"],"this只和运行的时候有关系":["11.4"],"所以这里的this和上面的self不是一样的":["11.4"],"return":["11.4","14.11","15.5","20.22","22.24","24.5","24.10","24.11","24.17"],"apply":["11.4","11.5"],"instanceof":["11.4","15.3","16.9"],"concat":["11.4"],"继承原型":["11.4"],"settimeout":["11.5"],"清除定时器":["11.6"],"null":["11.6"],"缓存对象":["11.7"],"用于循环引用的情况":["11.7"],"set":["11.7","22.16"],"for":["11.7"],"key":["11.7"],"hasownproperty":["11.7"],"递归克隆":["11.7"],"如果":["11.8"],"为":["11.8","15.4","24.6"],"时执行第一个回调":["11.8","15.4"],"时执行第二个回调":["11.8","15.4"],"时":["11.8","15.4"],"暂时保存两个回调":["11.8","15.4"],"订阅者":["11.9","13.10"],"观察者模式跟发布订阅者模式":["12.1"],"js的设计模式":["12.1"],"代码设计经验的总结":["13.1"],"使用设计模式是为了可重用代码":["13.1"],"让代码更容易被他人理解":["13.1"],"父类能出现的地方子类就能出现":["13.2"],"i":["13.2","24.5","25.11","25.36","25.37"],"interface":["13.2","20.27"],"segregation":["13.2"],"接口隔离原则":["13.2"],"保持接口的单一独立":["13.2"],"当一个对象的状态发送改变时":["13.4"],"若没有":["13.5"],"handler":["13.5"],"清空":["13.5"],"对应的缓存列表":["13.5"],"删除相应的":["13.5"],"cb":["13.5"],"while":["13.5"],"给":["13.6"],"发送消息":["13.6"],"订阅模式相对于观察者模式是面向调度中心编程的":["13.8"],"将对象处理为可被观察的":["13.9"],"暂时只处理对象第一层属性":["13.9"],"observer":["13.9"],"typeof":["13.9"],"也就是通过第三方来管理发布者跟订阅者":["13.11"],"又称为单体模式":["14.0"],"顾名思义一个类只能存在一个实例":["14.0"],"效果":["14.1"],"而不会重复出现":["14.1"],"浏览器的window":["14.1"],"单例类":["14.2"],"根据不同的输入值":["14.3"],"vue":["14.4","14.10","18.4","22.2","25.36"],"router的几种模式":["14.4"],"say":["14.5","25.20"],"我是aclass":["14.5"],"分步创建一个对象":["14.6"],"各个部件由代理商或者外包给其它人员进行生产":["14.7"],"最后自己来装配形成完整的产品":["14.7"],"china":["14.8"],"又称委托模式":["14.9"],"router":["14.10"],"可以出租":["14.11"],"什么时候签合同":["14.11"],"这个价格你可以看一下其它的房间":["14.11"],"中介":["14.11"],"intermediary":["14.11"],"如果系统中存在多个相同的对象":["14.12"],"那么只需共享一份就可以了":["14.12"],"精简了内存占用":["14.13"],"加快运行速度":["14.13"],"外部状态相对独立":["14.13"],"成功态":["15.0"],"rejected":["15.0"],"执行后的值改为传进来的值":["15.1"],"成功的回调":["15.1"],"reject":["15.2","15.5"],"err":["15.2"],"捕捉到错误直接执行reject":["15.2"],"promise":["15.3"],"typeerror":["15.3"],"the":["15.3"],"and":["15.3"],"are":["15.3"],"same":["15.3"],"同我们原来的判断":["15.3"],"这里只是为了和promisea":["15.3"],"规范保持统一":["15.3"],"object":["15.3","22.29","24.17"],"resolve":["15.5","24.8","25.26"],"面试官":["15.6"],"能说下promise实现异步的原理吗":["15.6"],"jim":["16.0"],"ƒ":["16.0"],"people1":["16.3"],"juli":["16.3"],"通过new":["16.3"],"object创建的对象就是object的实例":["16.3"],"函数":["16.4","22.12","22.17"],"fn1":["16.4"],"fn2":["16.4"],"consle":["16.4"],"prototype":["16.5"],"sayname":["16.5"],"isprototypeof":["16.7"],"true":["16.7","16.9","20.21","22.15","22.29","24.6","25.30"],"作用域分为全局作用域跟函数作用域":["17.0"],"js中没有":["17.0"],"window对象下的所有属性和方法都有全局作用域":["17.1"],"uncaught":["17.2"],"referenceerror":["17.2"],"is":["17.2","20.9"],"let与var的区别":["17.3"],"let声明的变量不存在变量提升":["17.3"],"严谨的说":["17.3"],"let声明的变量会产生":["17.3"],"暂时性死区":["17.3"],"不能在声明变量之前使用变量":["17.3"],"let定义的变量不能重复声明":["17.3"],"否则会报错":["17.3"],"变量在fn中找到":["17.4"],"使用就是fn中的":["17.4"],"而不是全局作用域下的":["17.4"],"所以a":["17.4"],"c就是全局作用域下的a":["17.4"],"c加上fn中的b":["17.4"],"最后输出200":["17.4"],"在全局作用域下打印":["17.4"],"使用的全局作用域的":["17.4"],"所以输出200":["17.4"],"试题":["17.4"],"aa":["17.4"],"test":["17.4","25.5","25.6","25.24","25.25","25.26","25.29","25.34"],"闭包的经典应用":["17.5"],"在es6":["17.5"],"出来之前":["17.5"],"解决for循环中的变量i是全局变量":["17.5"],"在定时器中最后得到的i都是循环的最后结果":["17.5"],"这个过程不是实时的":["17.6"],"因为其开销比较大并且gc时停止响应其他操作":["17.6"],"所以垃圾回收器会按照固定的时间间隔周期性的执行":["17.6"],"不再使用的变量也就是生命周期结束的变量":["17.6"],"垃圾回收器在运行的时候会给存储在内存中的所有变量都加上标记":["17.7"],"当然":["17.7","20.2"],"可以使用任何标记方式":["17.7"],"然后":["17.7"],"它会去掉环境中的变量以及被环境中的变量引用的变量的标记":["17.7"],"相反":["17.8"],"如果包含对这个值引用的变量又取得了另外一个值":["17.8"],"还提供博客主题让我们快速搭建自己的博客":["18.0"],"其中还内置评论":["18.0"],"reco主题文档":["18.1"],"docs":["18.2"],"build":["18.2","25.18"],"config":["18.3","22.5","22.6"],"enhanceapp":["18.3"],"readme":["18.3"],"vue驱动":["18.4"],"享受":["18.4"],"webpack":["18.4","25.18","25.36"],"的开发体验":["18.4"],"在":["18.4"],"留言板":["18.5"],"suggestion":["18.5"],"message":["18.5","20.12"],"board":["18.5"],"md":["18.5"],"自动部署主要是利用github的action实现":["18.6"],"具体的可以看仓库里面的代码":["18.6"],"这篇文章主要是我总结的一些":["20.0"],"的所有功能":["20.1"],"并且提供了可选的静态类型和基于类的面向对象编程":["20.1"],"所有":["20.2"],"语法规则":["20.2"],"使用":["20.2","25.23"],"也有一些缺点":["20.2"],"编译":["20.3"],"文件":["20.3"],"string":["20.4","20.16","22.29"],"lucy":["20.4","20.18"],"isboolean":["20.5"],"hexliteral":["20.6"],"0xf00d":["20.6"],"number":["20.7","20.17"],"使用数组泛型":["20.8"],"类型不匹配":["20.9"],"error":["20.9"],"not":["20.9"],"assignable":["20.9"],"to":["20.9"],"west":["20.10"],"指定开始值":["20.10"],"color":["20.10"],"maybe":["20.11"],"warning":["20.12"],"一个":["20.12","24.13","24.15"],"是所有类型的子类型":["20.13"],"就是说你可以把":["20.13"],"any":["20.14","22.29"],"也不可以赋值给":["20.14"],"下面是一些返回":["20.14"],"类型的函数":["20.14"],"另一个为":["20.15"],"as":["20.15","22.29"],"firstname":["20.16"],"conardli":["20.16","20.21"],"可选属性":["20.19"],"只读属性只能在对象刚刚创建的时候修改其值":["20.19"],"我今年":["20.21"],"岁了":["20.21"],"person1":["20.21"],"tolocalelowercase":["20.22"],"extends":["20.23","20.27"],"只不过是一个约定好的规范而已":["20.24"],"也就是说使用大写字母":["20.24"],"定义的类型变量都属于泛型":["20.24"],"把":["20.24"],"passport":["20.25"],"bank":["20.25"],"mygenericnumber":["20.26"],"或":["20.27"],"train":["20.27"],"类型":["20.27"],"vehicle":["20.27"],"topspeed":["20.27"],"carriages":["20.27"],"的知识":["22.0"],"js版本":["22.3"],"pnpm":["22.4"],"ts":["22.5","22.6","22.9"],"中插入一下代码":["22.5"],"import":["22.5","24.4","25.20","25.22"],"按需自动导入":["22.6"],"然后把下列代码插入到你的":["22.6"],"vite":["22.6"],"的配置文件中":["22.6"],"autoimport":["22.6"],"from":["22.6","24.4","25.20","25.22"],"elementplusresolver":["22.6"],"export":["22.7","22.9","24.10"],"修改入口文件":["22.7"],"mian":["22.7"],"createapp":["22.7"],"sass":["22.8"],"mount":["22.9"],"创建store":["22.9"],"src":["22.9","24.8","25.26"],"store":["22.9"],"definestore":["22.9"],"usemainstore":["22.9"],"main":["22.9","24.3","24.8","25.7","25.20","25.22"],"esmoduleinterop":["22.10"],"lib":["22.10","24.14"],"dom":["22.10"],"skiplibcheck":["22.10"],"baseurl":["22.10"],"paths":["22.10"],"的官方文档真的太":["22.11"],"nice":["22.11"],"暴露公共":["22.12"],"property":["22.12"],"expose":["22.12"],"函数中的":["22.12"],"是响应式的":["22.12"],"当传入新的":["22.12"],"prop":["22.12"],"mounted":["22.13"],"onmounted":["22.13"],"beforeupdate":["22.13"],"onbeforeupdate":["22.13"],"updated":["22.13"],"onupdated":["22.13"],"toref":["22.14"],"可以用来为源响应式对象上的某个":["22.14"],"新创建一个":["22.14"],"torefs":["22.14"],"将响应式对象":["22.14"],"reactive对象":["22.14"],"但包裹了由":["22.15"],"创建的另一个代理":["22.15"],"它也会返回":["22.15"],"isreadonly":["22.15"],"创建的只读代理":["22.15"],"toraw":["22.15"],"get":["22.16"],"和":["22.16","24.16"],"函数的对象":["22.16"],"用来创建可写的":["22.16"],"相比":["22.17"],"允许我们":["22.17"],"惰性地执行副作用":["22.17"],"更具体地说明应触发侦听器重新运行的状态":["22.17"],"能够获取依赖源的新旧值":["22.17"],"侦听单一源":["22.17"],"侦听器数据源可以是一个具有返回值的":["22.17"],"getter":["22.17"],"也可以直接是一个":["22.17"],"中的应用":["22.18"],"tsx中":["22.19"],"由双大括号":["22.19"],"变为了单大括号":["22.19"],"style绑定需要使用":["22.20"],"span":["22.22","22.24","22.26"],"我是if":["22.22"],"我是else":["22.22"],"div":["22.24","22.26","25.4"],"box":["22.24"],"姓名":["22.24"],"box1":["22.26"],"我是box1":["22.26"],"title":["22.28","25.4"],"使用插槽":["22.28"],"可以通过":["22.28"],"v":["22.28"],"props":["22.29"],"required":["22.29"],"userouter":["22.29"],"jumproute":["22.29"],"并提供了处理前端构建步骤的得力方式":["24.2"],"可以将文件从不同的语言":["24.2"],"如":["24.2"],"typescript":["24.2"],"query":["24.3","25.9"],"参数来设置选项":["24.3"],"但是这种方式已被废弃":["24.3"],"除了常见的通过":["24.3"],"package":["24.3","24.16","25.15"],"json":["24.3","24.16","25.15"],"来将一个":["24.3"],"npm":["24.3","24.5","25.11","25.36","25.37"],"内联方式":["24.4"],"在每个":["24.4"],"语句中显式指定":["24.4"],"styles":["24.4"],"style":["24.4"],"这里是test":["24.5"],"安装依赖":["24.5","25.36"],"cli":["24.5"],"运行npx":["24.5"],"就可以看到控制台中输出了外面loader中的内容":["24.5"],"获取optios":["24.5"],"大家在使用":["24.5"],"的时候":["24.5"],"应该都配置过":["24.5"],"options":["24.5","24.9"],"吧":["24.5"],"那我们开发的时候怎么去接收跟定义这个options呢":["24.5"],"获取":["24.5"],"资源文件会被转化为":["24.6"],"utf":["24.6","25.33"],"字符串":["24.6"],"然后传给":["24.6"],"通过设置":["24.6"],"可以接收原始的":["24.6"],"buffer":["24.6"],"content是一个buffer数据":["24.6"],"emitfile":["24.7","24.10"],"产生一个文件":["24.7"],"entry":["24.8"],"output":["24.8"],"dirname":["24.8","25.26"],"dist":["24.8"],"filename":["24.8"],"exports":["24.9","24.14","25.5","25.6","25.11","25.14","25.17","25.38"],"content":["24.9","25.4","25.33"],"getoptions":["24.9"],"使用异步loader":["24.9"],"暴露出去":["24.10"],"给js引用":["24.10"],"记得加上":["24.10"],"join":["24.11"],"relativerequest是inline":["24.11"],"代表要处理的index":["24.11"],"css资源":["24.11"],"使用css":["24.11"],"loader处理":["24.11"],"代表禁用所有配置的loader":["24.11"],"只使用inline":["24.11"],"插件由以下组成":["24.13"],"javascript":["24.13","25.28"],"命名函数":["24.13"],"在插件函数的":["24.13"],"https":["24.14"],"github":["24.14"],"com":["24.14"],"master":["24.14"],"synchook":["24.14"],"require":["24.14"],"syncbailhook":["24.14"],"生命周期中植入不同的逻辑":["24.15"],"文档open":["24.15"],"对象代表一次资源的构建":["24.15"],"实例能够访问所有的模块和它们的依赖":["24.15"],"对象会对构建依赖图中所有模块":["24.15"],"进行编译":["24.15"],"在编译阶段":["24.15"],"启动调试":["24.16"],"通过调试查看":["24.16"],"对象数据情况":["24.16"],"assetpaths":["24.17"],"keys":["24.17"],"filter":["24.17"],"path":["24.17","25.25","25.26"],"splitted":["24.17"],"split":["24.17"],"removefiles":["24.18"],"执行成功err为undefined":["24.18"],"执行失败err就是错误原因":["24.18"],"try":["24.18"],"读取当前目录下所有文件":["24.18"],"二维数组中第一项值是key":["24.19"],"第二项值是value":["24.19"],"assets":["24.19","24.20"],"entries":["24.19"],"headtags":["24.20"],"getinlinetag":["24.20"],"bodytags":["24.20"],"afteremit":["24.20"],"ps":["25.0"],"当时心想":["25.0"],"这面试要凉了":["25.0"],"js中简单写一点代码":["25.1"],"我安装的版本":["25.2"],"指定":["25.3"],"从":["25.3"],"文件开始打包":["25.3"],"不但会打包":["25.3"],"http":["25.4","25.33"],"equiv":["25.4","25.33"],"x":["25.4"],"ua":["25.4","25.33"],"compatible":["25.4","25.33"],"ie":["25.4","25.15","25.33"],"edge":["25.4","25.33"],"viewport":["25.4","25.33"],"width":["25.4","25.33"],"device":["25.4","25.33"],"initial":["25.4","25.33"],"scale":["25.4","25.33"],"body":["25.4"],"修改配置文件":["25.5","25.6","25.8"],"module":["25.5","25.11","25.14","25.16","25.17","25.38"],"加载器":["25.5","25.14","25.34"],"rules":["25.5","25.6","25.14","25.17","25.24","25.25","25.29","25.34"],"处理css的loader":["25.5","25.14"],"正则匹配文件":["25.5","25.14"],"use":["25.5","25.26"],"处理图片资源":["25.6","25.34"],"dnd":["25.7"],"mode":["25.7","25.18"],"camera":["25.7"],"imgs":["25.9"],"hash":["25.9"],"ext":["25.9"],"字体":["25.9"],"图标":["25.9"],"视频":["25.9"],"preset":["25.11","25.30"],"env":["25.11"],"编译的预设":["25.11"],"预设中内置了许多es5实现es6语法的方法":["25.11"],"配置babel":["25.11"],"essential":["25.12"],"react":["25.12"],"app":["25.12"],"能解决大多数样式兼容性问题":["25.15"],"控制兼容性":["25.15"],"我们可以在":["25.15"],"文件中添加":["25.15"],"browserslist":["25.15"],"来控制样式的兼容性做到什么程度":["25.15"],"配置":["25.17","25.37"],"serve":["25.18"],"development":["25.18"],"prod":["25.18"],"现在要对这些配置做一些优化":["25.19"],"列如":["25.19"],"log1":["25.20"],"然后在控制台发现报错信息":["25.20"],"它不能清晰的反映该错误是在哪一个文件中":["25.20"],"开启hmr功能":["25.22"],"只能用于开发环境":["25.22"],"生产环境不需要了":["25.22"],"判断是否支持hmr功能":["25.22"],"剩下的就不匹配了":["25.23"],"使用方法很简单":["25.23"],"把loader全部放进":["25.23"],"oneof":["25.24","25.25","25.26","25.29","25.34"],"排除node":["25.24","25.25","25.26","25.29"],"exclude":["25.25","25.26","25.29"],"modules代码不编译":["25.25","25.26"],"include":["25.25","25.26","25.29"],"node":["25.26","25.29"],"modules":["25.26","25.29"],"也可以用包含":["25.26"],"中的没有使用上的代码":["25.28"],"注意":["25.28"],"modules下的文件":["25.29"],"其他文件都处理":["25.29"],"interlaced":["25.30"],"progressive":["25.30"],"optimizationlevel":["25.30"],"prefixids":["25.30"],"sortattrs":["25.30"],"params":["25.30"],"xmlnsorder":["25.30"],"alphabetical":["25.30"],"这里存在一个问题":["25.30"],"就是webpack给我们提供了一个存放压缩文件的配置项":["25.30"],"如果多入口文件中都引用了同一份代码":["25.32"],"我们不希望这份代码被打包到两个文件中":["25.32"],"导致代码重复":["25.32"],"体积更大":["25.32"],"我们需要提取多入口的重复代码":["25.32"],"只打包生成一个":["25.32"],"其他文件引用它就好":["25.32"],"修改配置":["25.32"],"charset":["25.33"],"动态导入输出资源命名方式":["25.34"],"assetmodulefilename":["25.34"],"media":["25.34"],"图片":["25.34"],"字体等资源命名方式":["25.34"],"注意用hash":["25.34"],"jpe":["25.34"],"g":["25.34"],"gif":["25.34"],"文件名发生了变化":["25.35"],"间接导致":["25.35"],"也发生了变化":["25.35"],"解决":["25.35"],"将":["25.35"],"plugin":["25.36"]},{"0":["2.3","9.13","9.16","9.17","15.5","17.5","20.26","24.16","25.2","25.32","25.33"],"1":["2.6","11.7","15.5","17.4","20.10"],"2":["2.4","5.5","10.4","11.7","22.9"],"3":["0.3","2.4","3.1","9.27","11.7","25.18"],"4":["0.3","24.6"],"5":["0.3","2.2","9.11","9.25","10.2","25.2"],"6":["24.16"],"7":["24.16"],"8":["7.11","25.15"],"9":["6.13"],"10":["2.2","17.2","24.16","25.34"],"13":["17.2"],"15":["9.14"],"17":["20.17","20.21","24.16"],"18":["11.1","11.4","20.18"],"20":["9.8"],"45":["9.17"],"50":["0.11"],"73":["25.2"],"100":["9.5","9.10"],"111":["11.7"],"120":["9.14"],"150":["9.2"],"180":["9.5"],"200":["9.5"],"250":["9.5"],"1000":["7.14","7.15","14.11"],"1024":["25.34"],"20000":["25.32"],"通过":["0.0","24.4"],"filereader对象":["0.0"],"触发":["0.2"],"事件":["0.2"],"读取被中断":["0.3"],"文件不可读":["0.3"],"编码错误":["0.3"],"对象的":["0.4"],"id":["0.6"],"dragleave":["0.7"],"离开时边框恢复":["0.7"],"进入边框变为红色":["0.7"],"点击上传":["0.8"],"txt":["0.9"],"javascript":["0.9","24.2"],"html":["0.9","13.5"],"css":["0.9","9.2","24.16"],"default":["0.9","22.6","25.22"],"split":["0.10"],"清空文件流数组":["0.10"],"fileblodarr":["0.10"],"top":["0.11"],"20px":["0.11"],"347aa5":["0.11"],"color":["0.11","22.20"],"red":["0.11","9.14","20.10","22.20"],"text":["0.11"],"align":["0.11"],"center":["0.11"],"line":["0.11"],"18px":["0.11"],"font":["0.11"],"weight":["0.11"],"bold":["0.11"],"size":["0.11"],"25px":["0.11"],"cursor":["0.11"],"file":["0.12","24.18","24.19"],"方法获取文件二进制流":["0.12"],"onload":["0.12","9.13"],"获取文件数据":["0.12"],"模拟a标签下载":["1.1"],"href":["1.2","1.4","1.5"],"test":["1.2","6.11","24.8","24.20","25.11","25.14","25.17"],"jpg":["1.2"],"点击下载":["1.2"],"默认文件名":["1.2"],"下载":["1.3"],"document":["1.4","1.5","3.1"],"createelement":["1.4","1.5","3.1"],"style":["1.4","1.5","1.8"],"display":["1.4","1.5","1.8"],"none":["1.4","1.5","1.8"],"a":["1.5","11.4","11.7"],"target":["1.5"],"url长度限制":["1.6"],"url编码":["1.6"],"浏览器可直接浏览的文件类型是不提供下载的":["1.6"],"如txt":["1.6"],"value":["1.7"],"name":["1.7","5.5","11.4","11.7","15.5","24.16"],"appendchild":["1.7"],"src":["1.8","25.24","25.25","25.29"],"望大家指出":["1.9","7.16","10.6","15.7","17.9","20.28"],"的意思":["2.0"],"b":["2.1","25.1"],"大家看着上面的代码会难受嘛":["2.1"],"本人有一丢丢的强迫症":["2.1"],"明明就是一个很简单的判断却需要写好几行代码才能实现":["2.1"],"求0":["2.2"],"n之间的整数的和":["2.2"],"sum":["2.2"],"function":["2.2","9.13","14.11","20.14","25.22"],"c":["2.4"],"d":["2.4","2.6","13.2","22.10","25.4","25.36"],"从上面的案列中可以明显看得出来":["2.5"],"使用对象配置比使用if":["2.5"],"else可读性更高":["2.5"],"后续如果需要添加用户折扣也只需要修改折扣对象就行":["2.5"],"对象配置不一定非要使用对象去管理我们键值对":["2.5"],"还可以使用":["2.5"],"map":["2.5"],"去管理":["2.5"],"以绩效":["2.6"],"部门的方式拼接键值存入":["2.6"],"博客主要记录一些学习的文章":["2.7","6.14"],"我觉得很有意思":["3.0"],"就开始了解和学习":["3.0"],"在这篇文章中":["3.0"],"png":["3.1","18.6","25.20"],"可以使用一个隐藏的iframe和window":["3.1"],"name属性在不同的窗口之间共享数据":["3.1"],"在子页面中":["3.1"],"将要传递给父页面的数据保存在":["3.1"],"属性中":["3.1"],"在父页面中":["3.1"],"创建一个隐藏的":["3.1"],"元素":["3.1"],"并且将其源设置为":["3.1"],"子页面的":["3.1"],"const":["3.1","7.15","11.9","13.6","13.10","14.5","16.5","22.20","25.18","25.36"],"九宫格抽奖的简单实现":["4.1"],"编辑奖品这些":["5.0"],"瞒着女朋友加的功能":["5.1"],"为了以后能吃到自己喜欢的东西":["5.1"],"转动速度的规则是":["5.1"],"true":["5.3","11.1","15.3","16.3","20.4","20.16","24.8","24.10","25.12","25.25","25.26"],"null":["5.4","15.3"],"中奖":["5.5"],"raffleitem":["5.5"],"清除定时器":["5.5"],"cleartimeout":["5.5"],"清除指定中奖项":["5.5"],"转动规则的方法":["5.5"],"转动速度分为4个阶段":["5.5"],"前面的":["5.5"],"加速转动":["5.5"],"我是中国人":["6.1"],"我爱中国":["6.1"],"reg":["6.1"],"join":["6.1"],"匹配一个换页符":["6.2"],"匹配一个换行符":["6.2"],"r":["6.2"],"匹配一个回车符":["6.2"],"s":["6.2","25.17"],"result":["6.7"],"abc123456":["6.7"],"返回结果为true":["6.7"],"只要找到第一个匹配然后返回":["6.9"],"缺点":["6.10","14.13"],"只能获得敏感词的内容":["6.10"],"敏感词":["6.11"],"console":["6.11","11.0","11.1","11.4","11.5","11.6","14.8","16.5","25.1"],"log":["6.11","11.0","11.1","11.4","11.5","11.6","13.10","14.8","16.5"],"遍历匹配":["6.12"],"可以获取字符串中所有匹配的字符串":["6.12"],"ig":["6.13"],"在这个位置之前或之后的字符满足条件才匹配成功":["6.14"],"该定时器在定时器到期后执行一个函数或指定的一段代码":["7.0"],"马上":["7.2"],"执行":["7.2"],"或者尽快执行":["7.2"],"不管是哪种情况":["7.2"],"实际的延迟时间可能会比期待的":["7.2"],"delay毫秒数":["7.2"],"值长":["7.2"],"arg1":["7.2"],"为了避免混淆":["7.3"],"不要混用取消定时函数":["7.3"],"在同一个对象上":["7.3"],"它返回一个时间间隔id":["7.4"],"该id唯一地标识时间间隔":["7.4"],"千分之一秒":["7.6"],"这个定时器会使指定方法或者代码段执行的时候进行时间延迟":["7.6"],"如果这个参数值小于10":["7.6"],"但是":["7.7"],"我们必须去匹配":["7.7"],"嵌套层级达到一定深度":["7.9"],"直到调用":["7.10"],"settimeout":["7.10","9.28"],"大约24":["7.11"],"每次定时器执行结束时间":["7.12"],"endtime":["7.12"],"setinterval":["7.14","7.15"],"当时间为0的时候清除定时器":["7.14"],"经过一段时间的":["8.0"],"百度":["8.0"],"思考":["8.0"],"得出下列的思路":["8.0"],"date":["8.1"],"now":["8.1"],"return":["8.1","22.9","25.22"],"上传到服务器":["8.1"],"httprequest":["8.1"],"axios":["8.1"],"method":["8.1"],"利用":["9.0"],"画出一块带水印文字的背景图":["9.0"],"它可以用来制作照片集或者制作简单":["9.1"],"也不是那么简单":["9.1"],"注意":["9.2"],"使用":["9.2","24.5"],"也可以设置":["9.2"],"请升级浏览器":["9.3"],"需要注意的是":["9.3"],"标签的结束标签":["9.3"],"所有元素的位置都相对于原点来定位":["9.4"],"所以图中矩形左上角的坐标为距离左边":["9.4"],"x":["9.4","25.22"],"轴":["9.4"],"像素":["9.4"],"距离上边":["9.4"],"y":["9.4","15.3","25.22"],"描述路径的行进":["9.5"],"closepath":["9.6"],"红线":["9.8","9.9"],"中心线":["9.8"],"stroke":["9.9"],"lineto":["9.10","9.25"],"实线长度":["9.11"],"间隙长度":["9.11"],"默认的字体是":["9.12"],"10px":["9.12"],"textalign":["9.12"],"文本对齐选项":["9.12"],"可选的值包括":["9.12"],"start":["9.12"],"end":["9.12"],"left":["9.12"],"right":["9.12"],"or":["9.12"],"img":["9.13"],"new":["9.13","20.22","25.14","25.16","25.38"],"创建img元素":["9.13"],"防止图片还未加载完成就绘制":["9.13"],"从而抛出异常":["9.13"],"在原有配置基础上对颜色做改变":["9.14"],"使用新的设置绘制一个矩形":["9.14"],"保存当前状态":["9.14"],"平移坐标原点":["9.16"],"strokerect":["9.16"],"旋转":["9.17"],"blue":["9.17","20.10"],"fillrect":["9.17"],"放大1":["9.18"],"5倍":["9.18"],"m21":["9.20"],"水平方向的倾斜偏移":["9.20"],"m22":["9.20"],"那么变形矩阵也必须被标记为无限大":["9.21"],"否则会抛出异常":["9.21"],"从根本上来说":["9.21"],"旧图形只绘制与新图形内容重叠的地方":["9.24"],"新图形正常绘制":["9.24"],"旧图形位于新图形上方":["9.24"],"lighter":["9.24"],"新老图像都显示":["9.24"],"moveto":["9.25"],"绘制动画图形":["9.27"],"animated":["9.27"],"shapes":["9.27"],"这一步才是重绘动画帧":["9.27"],"requestanimationframe":["9.28"],"贴一个时钟案例给大家看一下":["9.28"],"代码片段":["9.28"],"谢谢":["9.29","13.12","14.14","24.21"],"和":["10.0","20.12","24.4"],"nodejs的eventloop":["10.0"],"跟":["10.1"],"微任务队列":["10.1"],"microtask":["10.1"],"宏任务":["10.1"],"script":["10.1"],"取出":["10.2"],"中位于队首的任务":["10.2"],"放入":["10.2"],"执行全局同步代码":["10.4"],"顺序执行输出":["10.4"],"把promise的回调函数放入微任务队列":["10.4"],"等待执行":["10.4"],"把settimeout放入宏任务队列":["10.4"],"相信大家都答对了":["10.5"],"这里的关键在前面已经提过":["10.5"],"在执行微任务队列中任务的时候":["10.5"],"如果又产生了微任务":["10.5"],"那么会继续添加到队列的末尾":["10.5"],"也会在这个周期执行":["10.5"],"直到微任务队列为空":["10.5"],"还有一个关键点是":["10.5"],"array":["11.0"],"proto":["11.1"],"is":["11.2","11.3","13.5"],"i":["11.2","11.3","17.5","25.4"],"m":["11.2","11.3"],"come":["11.2","11.3"],"from":["11.2","11.3","22.5","24.11"],"测试":["11.4","11.5","11.6","11.7","11.9","14.5"],"tom":["11.4","13.6","20.18","20.19"],"age":["11.4"],"fn":["11.4","17.3"],"add":["11.4","22.8"],"hobby":["11.4"],"my":["11.4","20.7"],"task":["11.5","11.6"],"promise":["11.8","15.4"],"typeerror":["11.8","15.4"],"the":["11.8","13.5","15.4"],"and":["11.8","13.5","15.4"],"are":["11.8","13.5","15.4"],"same":["11.8","15.4"],"同我们原来的判断":["11.8","15.4"],"instanceof":["11.8","15.4"],"这里只是为了和promisea":["11.8","15.4"],"规范保持统一":["11.8","15.4"],"object":["11.8","15.4","24.5","24.20"],"给":["11.9","13.10"],"发送消息":["11.9","13.10"],"promise原理学习":["12.1"],"保证代码可靠性":["13.1"],"设计模式更加通俗的说它是一种思维方式":["13.1"],"类似单一职责原则":["13.2"],"这里更关注接口":["13.2"],"dependency":["13.2"],"inversion":["13.2"],"依赖倒转原则":["13.2"],"所有依赖于它的对象都将得到状态改变的通知":["13.4"],"传入的":["13.5"],"区分大小写":["13.5"],"若不一致":["13.5"],"有提示":["13.5"],"lowercaseevent":["13.5"],"tolowercase":["13.5"],"tip":["13.5"],"emitted":["13.5"],"in":["13.5"],"component":["13.5"],"formatcomponentname":["13.5"],"but":["13.5"],"registered":["13.5"],"note":["13.5"],"that":["13.5"],"attributes":["13.5"],"case":["13.5"],"insensitive":["13.5"],"you":["13.5"],"cannot":["13.5"],"use":["13.5","25.14","25.17","25.29"],"v":["13.5","20.27"],"to":["13.5"],"listen":["13.5"],"camelcase":["13.5"],"老师":["13.6"],"jim":["13.6"],"他以调度中心为连接来管理发布者跟订阅者":["13.8"],"keys":["13.9","24.20"],"简单的vue构造函数":["13.9"],"options":["13.9","25.25","25.26","25.29"],"data":["13.9","24.2","25.6"],"当第二次用相同的类创建实例的时候":["14.0"],"document对象也是单例模式":["14.1"],"es6新增的模块import":["14.1"],"返回不同的类":["14.3"],"history":["14.4"],"我是bclass":["14.5"],"允许按步骤构造一个复杂对象":["14.6"],"构建过程可以采用不同的表示":["14.6"],"在这个过程中":["14.7"],"为目标对象创建一个访问对象":["14.9"],"react":["14.10"],"renthouse":["14.11"],"不必每个都去实例化每一个对象":["14.12"],"不会影响到内部状态":["14.13"],"所以享元对象能够在不同的环境被共享":["14.13"],"失败态":["15.0"],"初始状态是":["15.0"],"状态置为失败的状态rejected":["15.1"],"现在我们在看以下效果":["15.2"],"let":["15.2","15.3","15.4","20.22","20.23","22.29"],"p":["15.2"],"called":["15.3"],"false":["15.3","16.7","24.5"],"call":["15.3"],"module":["15.5","24.3","24.10","25.7","25.8","25.37"],"exports":["15.5","24.10","25.8","25.16","25.20","25.37"],"最后在修改以下启动命令":["15.5"],"version":["15.5","24.16"],"description":["15.5"],"main":["15.5"],"的代码":["15.6"],"我自己实现的代码可以运行":["15.6"],"如有不足":["15.7","17.9","20.28"],"constructor":["16.0"],"也就是说function是它自己的实例":["16.2"],"people1":["16.4"],"lucy":["16.4"],"people2":["16.4"],"juli":["16.4"],"等同于":["16.8"],"块级作用域":["17.0"],"最外层定义的变量跟方法具有全局作用据":["17.1"],"not":["17.2"],"defined":["17.2"],"at":["17.2"],"anonymous":["17.2"],"代码解析":["17.2"],"a变量定义在最外层":["17.2"],"undefined":["17.3","17.4","20.12"],"不能在变量声明前使用变量":["17.3"],"uncaught":["17.3"],"bb":["17.4"],"for":["17.5"],"var":["17.5"],"当然只可能是局部变量":["17.6"],"全局变量的生命周期直至浏览器卸载页面才会结束":["17.6"],"局部变量只在函数的执行过程中存在":["17.6"],"而在这个过程中会为局部变量在栈或堆上分配相应的空间":["17.6"],"闭包":["17.7"],"而在此之后再被加上标记的变量将被视为准备删除的变量":["17.7"],"原因是环境中的变量已经无法访问到这些变量了":["17.7"],"最后":["17.7"],"垃圾回收器完成内存清除工作":["17.7"],"则这个值的引用次数减1":["17.8"],"当这个值的引用次数变成0时":["17.8"],"tag墙":["18.0"],"创建":["18.2"],"文件夹":["18.2"],"并在":["18.2"],"文件夹中创建readme":["18.2"],"md":["18.3"],"guide":["18.3"],"中使用":["18.4","24.3"],"组件":["18.4"],"同时可以使用":["18.4"],"来开发自定义主题":["18.4"],"高性能":["18.4"],"关于我":["18.5"],"account":["18.5"],"items":["18.5"],"个人信息":["18.5"],"about":["18.5"],"掘金":["18.5"],"https":["18.5"],"image":["18.6","22.4","25.20"],"的基础知识":["20.0"],"同时":["20.1"],"引入了太多的新概念":["20.2"],"类似泛型":["20.2"],"枚举等等":["20.2"],"不过好在ts":["20.2"],"是渐进式的":["20.2"],"就是你完全不会直接写":["20.2"],"tsc":["20.3"],"helloworld":["20.3"],"ts":["20.3","20.20"],"isboolean":["20.4"],"boolean":["20.4"],"binaryliteral":["20.6"],"word":["20.7","22.9"],"元素类型":["20.8"],"大小不匹配":["20.9"],"green":["20.10"],"string":["20.11","20.14","24.5"],"instead":["20.11"],"类型的变量只能为它赋予":["20.12"],"赋值给":["20.13"],"number":["20.13","20.26"],"类型的变量":["20.13"],"返回never的函数必须存在无法达到的终点":["20.14"],"error":["20.14"],"message":["20.14"],"hasdog":["20.16"],"如果函数没有返回值":["20.20"],"在":["20.20"],"里表示为返回":["20.20"],"我们可以通过下面的写法":["20.21"],"属性会在构造函数中自动分配":["20.21"],"我们类会更加简洁":["20.21"],"readonly":["20.21"],"person1":["20.22"],"换成":["20.24"],"也是一样的":["20.24"],"下面我们介绍一下一些常见泛型变量代表的意思":["20.24"],"type":["20.24","24.5","25.6","25.34"],"statement":["20.25"],"visa":["20.25"],"person2":["20.25"],"wingspan":["20.27"],"planeortrain":["20.27"],"getspeedratio":["20.27"],"现在的项目也没用上":["22.0"],"只能自己摸索学习啦":["22.0"],"的环境下":["22.3"],"这边我使用":["22.4"],"这里选择":["22.4"],"vuejsx":["22.5"],"resolvers":["22.6"],"iconsresolver":["22.6"],"resolver":["22.6"],"export":["22.6","25.22"],"defineconfig":["22.6"],"plugins":["22.6","25.14","25.16","25.26","25.38"],"自动引入api":["22.6"],"imports":["22.6"],"app":["22.7"],"yarn":["22.8"],"类似于vue2组件中的data":["22.9"],"用于存储全局状态数据":["22.9"],"但有两个要求":["22.9"],"必须是函数":["22.9"],"目的是为了在服务端渲染的时候避免交叉请求导致的数据状态污染":["22.9"],"必须是箭头函数":["22.9"],"这样是为了更好的":["22.9"],"类型推导":["22.9"],"state":["22.9","22.17"],"msg":["22.9"],"hello":["22.9","25.1"],"getters":["22.9"],"include":["22.10"],"tsx":["22.10"],"vue":["22.10"],"auto":["22.10"],"啦":["22.11"],"主要是学习一下":["22.11"],"时":["22.12"],"它将被更新":["22.12"],"因为":["22.12"],"你":["22.12"],"不能使用":["22.12"],"es6":["22.12"],"解构":["22.12"],"它会消除":["22.12"],"的响应性":["22.12"],"如果需要解构":["22.12"],"beforeunmount":["22.13"],"onbeforeunmount":["22.13"],"unmounted":["22.13"],"onunmounted":["22.13"],"errorcaptured":["22.13"],"转换为普通对象":["22.14"],"解构为单个响应式对象":["22.14"],"shallowref":["22.14"],"创建一个跟踪自身":["22.14"],"变化的":["22.14"],"但不会使其值也变成响应式的":["22.14"],"简单理解为创建一个和ref相同结构的非响应式变量":["22.14"],"返回":["22.15"],"代理的原始对象":["22.15"],"用于写入数据而避免触发更改":["22.15"],"markraw":["22.15"],"返回对象本身":["22.15"],"标记一个对象":["22.15"],"使其永远不会转换为":["22.15"],"侦听一个":["22.17"],"reactive":["22.17"],"vue3模板语法":["22.19"],"span":["22.19","22.29"],"双大括号":["22.20"],"div":["22.22","22.29","25.33"],"年龄":["22.24"],"prop":["22.24"],"item":["22.24"],"box2":["22.26","25.4","25.33"],"修饰符写法":["22.27"],"来使用插槽":["22.28"],"vslot":["22.28"],"slottem":["22.28"],"if":["22.29","24.20"],"children":["22.29"],"slots":["22.29"],"title":["22.29","25.33"],"sub":["22.29"],"转换为":["24.2"],"或将内联图像转换为":["24.2"],"模块导出为":["24.3"],"还可以在":["24.3"],"rules":["24.3","24.8","25.11"],"字段直接引用一个模块":["24.3"],"插件":["24.3","25.26","25.38"],"plugin":["24.3","25.4"],"modules":["24.4","24.15","24.16","25.11"],"含义":["24.4"],"处理":["24.4"],"文件":["24.4"],"将资源中的":["24.4"],"分开":["24.4"],"可以通过添加不同前缀":["24.4"],"跳过其他类型":["24.4"],"getoptios":["24.5"],"schema":["24.5"],"方法":["24.5","24.13"],"改方法接收一个参数":["24.5"],"就是这个options的":["24.5"],"校验规则":["24.5"],"如果不符合这个规则就会报错":["24.5"],"校验规则是一个":["24.5"],"格式的文件":["24.5"],"如下":["24.5"],"规定了是什么类型":["24.5"],"properties":["24.5"],"表明其中有哪些属性":["24.5"],"使用未定义的属性也会报错":["24.5"],"下面的含义为接收一个对象":["24.5"],"对象中有一个字符串类型的属性":["24.5"],"author":["24.5","24.16"],"additionalproperties":["24.5"],"开启":["24.6"],"pitching":["24.6"],"pitch":["24.6"],"utils":["24.7"],"contextify":["24.7"],"返回一个相对路径":["24.7"],"context":["24.7"],"loaders":["24.8"],"callback":["24.9"],"async":["24.9"],"使用babel对js代码进行编译":["24.9"],"transform":["24.9"],"err":["24.9"],"解决的是二进制的内容":["24.10"],"图片是":["24.10"],"buffer":["24.10"],"数据":["24.10"],"raw":["24.10"],"也就是外面我们style":["24.11"],"loader和css":["24.11"],"它们被禁用了":["24.11"],"只是用我们指定的inline":["24.11"],"也就是css":["24.11"],"import":["24.11","25.7"],"引入css":["24.11"],"loader处理后的css文件":["24.11"],"为什么需要css":["24.11"],"loader处理css文件":["24.11"],"不是我们直接读取css文件使用呢":["24.11"],"因为可能存在":["24.11"],"import导入css语法":["24.11"],"这些语法就要通过css":["24.11"],"loader解析才能变成一个css文件":["24.11"],"否则我们引入的css资源会缺少":["24.11"],"prototype":["24.13"],"上定义一个":["24.13"],"apply":["24.13"],"指定一个绑定到":["24.13"],"syncwaterfallhook":["24.14"],"syncloophook":["24.14"],"asyncparallelhook":["24.14"],"asyncparallelbailhook":["24.14"],"模块会被加载":["24.15"],"load":["24.15"],"封存":["24.15"],"seal":["24.15"],"优化":["24.15"],"optimize":["24.15"],"分块":["24.15"],"chunk":["24.15"],"哈希":["24.15"],"hash":["24.15"],"和重新创建":["24.15"],"restore":["24.15"],"可以访问所有模块":["24.15"],"配置指令":["24.16"],"source":["24.16"],"scripts":["24.16"],"debug":["24.16"],"node":["24.16","25.11","25.12"],"inspect":["24.16"],"brk":["24.16"],"webpack":["24.16","25.7"],"cli":["24.16"],"bin":["24.16"],"keywords":["24.16"],"xiongjian":["24.16"],"license":["24.16"],"isc":["24.16"],"devdependencies":["24.16"],"babel":["24.16","25.26"],"core":["24.16"],"preset":["24.16"],"env":["24.16","25.12"],"loader":["24.16","25.24"],"includes":["24.17"],"length":["24.17"],"foreach":["24.17","24.18","24.19","24.20"],"assetpath":["24.17"],"asset":["24.17","25.34"],"readdirsync":["24.18"],"遍历文件":["24.18"],"删除":["24.18"],"获取文件完整路径":["24.18"],"filepath":["24.18"],"分析文件":["24.18"],"filestat":["24.18"],"分析打包资源大小":["24.19"],"n":["24.19"],"名称":["24.19"],"大小":["24.19"],"filename":["24.19"],"inlinechunkhtmlplugin":["24.20"],"assetname":["24.20"],"some":["24.20"],"match":["24.20"],"delete":["24.20"],"后面果然如此":["25.0"],"最后就诞生了这篇文章":["25.0"],"为了更好的搭建自己的webpack知识体系":["25.0"],"还会将其依赖也一起打包进来":["25.3"],"xxx":["25.3"],"指定模式":["25.3"],"环境":["25.3"],"box1":["25.4","25.33"],"box3":["25.4","25.33"],"安装处理":["25.4"],"资源的插件":["25.4"],"npm":["25.4"],"安装":["25.4"],"devserve":["25.4"],"查看效果":["25.5"],"发现页面上我们写的样式并没有生效":["25.5"],"这是因为":["25.5"],"只能把css文件编译成webpack能够处理的文件":["25.5"],"但是不能把样式引入到页面上":["25.5"],"jpe":["25.6"],"g":["25.6"],"gif":["25.6"],"运行看效果":["25.6","25.20"],"优化图片资源":["25.6"],"将小于某个大小的图片转化成":["25.6"],"uri":["25.6"],"形式":["25.6"],"base64":["25.6"],"config":["25.7","25.18","25.37"],"ttf":["25.9"],"woff2":["25.9"],"mp4":["25.9"],"avi":["25.9"],"resource":["25.9"],"加载器":["25.11"],"exclude":["25.11"],"排除node":["25.11"],"modules代码不编译":["25.11","25.24"],"babel的配置有两种方法":["25.11"],"一种是在webpack的loader中配置":["25.11"],"还有一种是单独的配置文件配置":["25.11"],"在webpack中配置":["25.11"],"继承":["25.12"],"规则":["25.12"],"extends":["25.12"],"启用node中全局变量":["25.12"],"browser":["25.12"],"提取css成单独文件":["25.14"],"想要知道更多的":["25.15"],"查看browserslist":["25.15"],"文档":["25.15"],"以上为了测试兼容性所以设置兼容浏览器":["25.15"],"ie8":["25.15"],"以上":["25.15"],"实际开发中我们一般不考虑旧版本浏览器了":["25.15"],"css压缩":["25.16"],"处理sass":["25.17"],"ac":["25.17"],"ss":["25.17"],"minicssextractplugin":["25.17"],"production":["25.18"],"在配置文件":["25.18"],"中获取环境变量":["25.18"],"isproduction":["25.18"],"process":["25.18"],"提升打包构建速度":["25.19"],"因为我们打包后的文件都输出在main":["25.20"],"js中":["25.20"],"配置devtool":["25.20"],"中就可以了":["25.23"],"js":["25.23"],"path":["25.24","25.29"],"resolve":["25.24","25.25","25.29"],"dirname":["25.24","25.25","25.29"],"也可以用包含":["25.24","25.25"],"cachedirectory":["25.25","25.26"],"开启多进程":["25.26","25.29"],"workers":["25.26"],"数量":["25.26"],"开启babel编译缓存":["25.26"],"它依赖":["25.28"],"es":["25.28"],"只处理src下的文件":["25.29"],"其他文件不处理":["25.29"],"thread":["25.29"],"optimization":["25.30","25.32"],"我们前面使用了css压缩":["25.30"],"js压缩":["25.30"],"图片压缩这些":["25.30"],"我们需要把他提取到":["25.30"],"中去":["25.30"],"这样我们的配置文件才能更加的清晰":["25.30"],"这个配置比较简单":["25.30"],"主要是把插件中关于压缩文件的都放进去就行了":["25.30"],"记得把插件中的调用删除奥":["25.30"],"压缩配置":["25.30"],"minimize":["25.30"],"开启最小化":["25.30"],"css压缩也可以写到optimization":["25.30"],"clean":["25.32"],"代码分割配置":["25.32"],"splitchunks":["25.32"],"chunks":["25.32"],"all":["25.32"],"对所有模块都进行分割":["25.32"],"以下是默认值":["25.32"],"minsize":["25.32"],"分割代码最小的大小":["25.32"],"minremainingsize":["25.32"],"类似于minsize":["25.32"],"最后确保提取的文件大小不能为0":["25.32"],"minchunks":["25.32"],"至少被引用的次数":["25.32"],"body":["25.33"],"class":["25.33"],"webp":["25.34"],"parser":["25.34"],"dataurlcondition":["25.34"],"maxsize":["25.34"],"小于10kb的图片会被base64处理":["25.34"],"generator":["25.34"],"将图片文件输出到":["25.34"],"imgs":["25.34"],"目录中":["25.34"],"将图片文件命名":["25.34"],"query":["25.34"],"hash值取8位":["25.34"],"使用之前的文件扩展名":["25.34"],"值单独保管在一个":["25.35"],"runtime":["25.35"],"文件中":["25.35"],"我们最终输出三个文件":["25.35"],"当":["25.35"],"文件发送变化":["25.35"],"变化的是":["25.35"],"配置":["25.36"],"preloadwebpackplugin":["25.36"],"require":["25.36"],"预设":["25.37"],"presets":["25.37"],"generatesw":["25.38"]},{"0":["2.4","2.6","6.11","7.14"],"1":["0.9","5.0","20.23","25.15"],"2":["0.9","2.2","17.3","25.20"],"3":["0.9","8.0","10.4"],"4":["9.27","17.4","24.16","25.2"],"5":["9.22"],"6":["10.2","25.12"],"8":["17.4"],"9":["2.6","24.16"],"10":["17.5","25.32"],"12":["17.4"],"18":["16.5"],"20":["20.25","25.32"],"30":["9.14","25.32"],"45":["9.14"],"50":["9.11"],"72":["24.16"],"90":["9.14"],"100":["11.5","11.6"],"128":["9.22"],"150":["9.10"],"200":["9.6","9.8","9.10","9.13"],"220":["9.16"],"253":["9.13"],"255":["9.22"],"300":["5.5","9.9","9.13"],"50000":["25.32"],"86176":["24.16"],"824605453":["9.13"],"878308716":["9.13"],"filelist对象":["0.0"],"读取文件的文件流数据":["0.0"],"每几百毫秒触发一次":["0.2"],"当一个被拖动的元素或者被选择的文本离开一个有效的拖放目标时":["0.2"],"将会触发":["0.2"],"default":["0.3","2.4","22.5","22.9"],"文件读取失败":["0.3"],"onprogress":["0.3","0.12"],"该事件在开始读取文件时每5毫秒触发一次":["0.3"],"可以使用该方法获取文件读取的进度":["0.3"],"返回值":["0.3"],"loaded":["0.3"],"为当前已读取的大小":["0.3"],"total":["0.3","5.5"],"为文件总大小":["0.3"],"属性":["0.4"],"是存储文件数据的一个对象":["0.4"],"box":["0.6","22.28"],"red":["0.7","9.5"],"拖拽事件绑定":["0.7"],"addeventlistener":["0.7"],"dragenter":["0.7"],"dragover":["0.7"],"单击事件":["0.8"],"通过js触发input事件":["0.8"],"function":["0.8","17.5","20.26"],"upload":["0.8"],"other":["0.9"],"组合单个文件并放入dom中":["0.9"],"appendchild":["0.9","1.4","1.5","1.8","3.1","24.11"],"droptarget":["0.9"],"文件读取失败的提示":["0.9"],"onerror":["0.9","0.12"],"error":["0.9","20.19"],"code":["0.9","7.1","7.5","24.9"],"alert":["0.9"],"未找到文件":["0.9"],"安全错误":["0.9"],"读取被中断":["0.9"],"重新生成文件上传盒子":["0.10"],"map":["0.10","24.5","24.20"],"item":["0.10"],"filestoblod":["0.10"],"最终的效果如下":["0.10"],"pointer":["0.11"],"文件名":["0.11"],"p":["0.11","15.1","22.22","22.28"],"ellipsis":["0.11"],"white":["0.11"],"space":["0.11"],"nowrap":["0.11"],"提示文字":["0.11"],"result":["0.12","24.9"],"事件监听文件读取的时候发生的错误":["0.12"],"事件监听文件读取的进度":["0.12"],"本质上都是一样的":["1.1"],"只是实现方式不一致而已":["1.1"],"只不过是为了方便整理才起的这个标题名":["1.3"],"download":["1.4","1.5"],"body":["1.4","1.5","1.7","1.8","3.1"],"click":["1.4","1.5"],"png":["1.6","22.4","24.10"],"jpg":["1.6"],"gif等":["1.6"],"不能添加header":["1.6"],"发送请求":["1.7"],"submit":["1.7"],"清除form表单":["1.7"],"异步删除iframe标签":["1.8"],"settimeout":["1.8","10.1","17.5"],"谢谢":["1.9","7.16","10.6","15.7","17.9","20.28"],"的好用都知道":["2.0"],"这个时候我们就可以用短路运算去简化我们的代码啦":["2.1"],"add":["2.2"],"n":["2.2","24.17"],"break":["2.3"],"console":["2.4","7.12","11.7","17.5","20.22","24.6","25.18"],"log":["2.4","7.12","11.7","20.22","24.6","25.1","25.18"],"new":["2.5","15.1","15.2","16.5","20.14","24.8","25.4","25.24","25.25","25.26","25.36"],"f":["2.6"],"如有不足":["2.7","6.14","16.9","18.6"],"望大家指出":["2.7","6.14","18.6"],"我将分享我所学到的内容":["3.0"],"希望对大家有所帮助":["3.0"],"接下来我们就一起来学习一下关于":["3.0"],"style":["3.1","22.20"],"display":["3.1"],"none":["3.1"],"等待":["3.1"],"加载完成后":["3.1"],"通过访问":["3.1"],"contentwindow":["3.1"],"属性来获取子页面中保存的数据":["3.1"],"onload":["3.1"],"正则表达式的一些知识":["4.1"],"gif":["5.0","24.10"],"加速":["5.1"],"匀速":["5.1"],"减速":["5.1"],"selectitem":["5.3"],"name":["5.3"],"button":["5.3","25.33"],"中间的":["5.5"],"是匀速转动":["5.5"],"后面的":["5.5"],"是减速转动":["5.5"],"最后的":["5.5"],"个速度降低到":["5.5"],"转动":["5.5"],"经过计算":["5.5"],"在圈数的分为内":["5.5"],"最后的减速转动":["5.5"],"不能把速度减少到":["5.5"],"之上":["5.5"],"所以不会出现最后":["5.5"],"个加速转动的情况":["5.5"],"先加速在匀速最后减速":["5.5"],"剩余最后9个中奖时的时候速度降低到300":["5.5"],"错误的方法":["6.1"],"匹配任何空白字符":["6.2"],"匹配任何非空白字符":["6.2"],"t":["6.2"],"匹配一个制表符":["6.2"],"v":["6.2","20.24","22.29"],"reg1":["6.7"],"如果字符串没有匹配":["6.9"],"则返回null":["6.9"],"不能获得敏感词的位置":["6.10"],"敏感词的内容":["6.11"],"敏感词的位置":["6.11"],"返回一个列表":["6.12"],"arr":["6.13"],"match":["6.13"],"结果":["6.13"],"argn":["7.2","7.6"],"附加参数":["7.2"],"一旦定时器到期":["7.2"],"它们会作为参数传递给":["7.2"],"备注":["7.2"],"一个window或者worker":["7.3"],"或者":["7.3"],"因此您可以稍后通过调用":["7.4"],"clearinterval":["7.4","7.14"],"则默认使用值为10":["7.6"],"arg1":["7.6"],"可选":["7.6"],"对应的":["7.7"],"id":["7.7","25.33"],"以":["7.7","25.4"],"或者是由于已经执行的setinterval的回调函数阻塞导致的":["7.9"],"的主线程执行完其他任务之后":["7.10"],"回调函数和代码段才能被执行":["7.10"],"天":["7.11"],"时就会溢出":["7.11"],"setinterval执行的差值时间":["7.12"],"time2":["7.12"],"if":["7.14","24.18"],"无法清除定时器的原因":["7.15"],"在以上函数中":["7.15"],"每次调用函数都会创建一个新的定时器":["7.15"],"只关闭了其中一个setinterval":["7.15"],"将base64格式的图片处理为blob对象":["8.0"],"将blob对象添加到formdata对象中":["8.0"],"http请求头设置为context":["8.0"],"post":["8.1"],"url":["8.1","24.2"],"xxxxx":["8.1"],"你的文件服务器地址":["8.1"],"data":["8.1","24.6"],"timeout":["8.1"],"headers":["8.1"],"content":["8.1"],"multipart":["8.1"],"然后在需要的地方使用就行":["9.0"],"很简单吧":["9.0"],"不过这个不是重点":["9.0"],"的动画":["9.1"],"甚至可以进行实时视频处理和渲染":["9.1"],"标签的宽高属性":["9.2"],"不过我们不推荐使用":["9.2"],"设置宽高属性":["9.2"],"是不可省略的":["9.3"],"如果省略的话":["9.3"],"文档的其它内容就会被当成":["9.3"],"绘制矩形的三种api":["9.4"],"width":["9.4"],"height":["9.4"],"绘制一个填充的矩形":["9.4"],"strokerect":["9.4","9.11"],"封闭路径":["9.5"],"closepath会自动封闭路径":["9.5"],"描边颜色":["9.5"],"strokestyle":["9.5","9.8"],"描边":["9.5"],"stroke不会自动closepath":["9.5"],"填充颜色":["9.5"],"fillstyle":["9.5","9.22"],"moveto":["9.6"],"参数1":["9.6"],"控制点1坐标":["9.6"],"参数3":["9.6"],"控制点2坐标":["9.6"],"参数4":["9.6"],"起始偏移量为5":["9.11"],"center":["9.12"],"默认值是":["9.12"],"textbaseline":["9.12"],"基线对齐选项":["9.12"],"top":["9.12"],"hanging":["9.12"],"middle":["9.12"],"alphabetic":["9.12"],"ideographic":["9.12"],"bottom":["9.12"],"src":["9.13","22.6","24.20"],"https":["9.13"],"img0":["9.13"],"baidu":["9.13"],"com":["9.13"],"it":["9.13","20.19"],"u":["9.13"],"fm":["9.13"],"fff":["9.14"],"再次改变颜色配置":["9.14"],"使用新的配置绘制一个矩形":["9.14"],"重新加载之前的颜色状态":["9.14"],"restore":["9.16","9.17","9.18","9.25"],"恢复到最初状态":["9.16"],"恢复到之前的状态":["9.17"],"blue":["9.18"],"回退到初始状态":["9.18"],"竖直方向的缩放":["9.20"],"dx":["9.20"],"水平方向的移动":["9.20"],"该方法是取消了当前变形":["9.21"],"然后设置为指定的变形":["9.21"],"rgba":["9.22"],"两个重叠图形的颜色是通过颜色值相加来确定的":["9.24"],"darken":["9.24"],"保留重叠部分最黑的像素":["9.24"],"每个颜色位进行比较":["9.24"],"得到最小的":["9.24"],"0000ff":["9.24"],"ff0000":["9.24"],"lighten":["9.24"],"保证重叠部分最亮的像素":["9.24"],"得到最大的":["9.24"],"closepath":["9.25"],"e8e8e8":["9.25"],"fill":["9.25"],"首先":["9.25"],"我画了一个黑色方形作为背景":["9.25"],"然后移动原点至中心点":["9.25"],"然后用":["9.25"],"方法创建一个弧形的裁切路径":["9.25"],"裁切路径也属于":["9.25"],"恢复":["9.27"],"如果已经保存了":["9.27"],"今天的文章就到这里啦":["9.28"],"如果需要后续更加深入的":["9.28"],"知识":["9.28"],"这篇文章主要记录":["10.0"],"全部代码":["10.1"],"setinterval":["10.1"],"ui渲染":["10.1"],"微任务":["10.1"],"promise":["10.1"],"中执行":["10.2"],"当前":["10.2"],"宏任务":["10.2"],"存在微任务队列":["10.4"],"执行微任务":["10.4"],"顺序执行微任务输出":["10.4"],"把宏任务队列的第一个宏任务":["10.4"],"即第一个定时器":["10.4"],"放入调用栈执行":["10.4"],"输出":["10.4","17.2"],"因为当前宏任务没有产生微任务":["10.4"],"所以把下一个宏任务":["10.4"],"第二个定时器":["10.4"],"在底层转换成了":["10.5"],"和":["10.5","20.18","25.35"],"回调函数":["10.5"],"是":["10.5"],"的语法糖":["10.5"],"在使用":["10.5"],"object":["11.0","16.4"],"instanceof":["11.1"],"pepol":["11.1"],"like":["11.2","11.3","11.4"],"playing":["11.2","11.3","11.4"],"america":["11.2","11.3"],"basketball":["11.2","11.3"],"i":["11.4"],"m":["11.4"],"come":["11.4"],"from":["11.4"],"fnbind":["11.4"],"滚动":["11.5","11.6"],"const":["11.5","11.6"],"debouncetask":["11.5"],"throttletask":["11.6"],"b":["11.7"],"c":["11.7","24.16"],"h":["11.7"],"false":["11.7","11.8","15.4","16.9","20.5","20.11","25.25"],"let":["11.8","15.1","20.12"],"called":["11.8","15.4"],"call":["11.8","15.4"],"y":["11.8","15.4"],"true":["11.8","15.4","16.0","16.4"],"r":["11.8","15.3","15.4"],"老师":["11.9","13.10"],"tom":["11.9","13.10","16.5","20.25"],"jim":["11.9","13.10"],"原型与原型链":["12.1"],"作用域跟作用域链":["12.1"],"一种解决问题的方案":["13.1"],"当我们在合适的场景或者特定的问题":["13.1"],"面向接口编程":["13.2"],"依赖于抽象而不依赖于具体":["13.2"],"使用方只关注接口而不关注具体类的实现":["13.2"],"这里提一下我为什么要先学习观察者模式跟发布订阅者这两个模式":["13.2"],"我的理解中这两个设计模式的思想其实是一致的":["13.2"],"可以理解为":["13.2"],"同样的思想":["13.2"],"when":["13.5"],"dom":["13.5"],"templates":["13.5"],"should":["13.5"],"probably":["13.5"],"hyphenate":["13.5"],"toarray":["13.5"],"只取回调函数":["13.5"],"不取":["13.5"],"args":["13.5"],"try":["13.5"],"今天下午放学留下来背书":["13.6"],"老师给tom发送消息":["13.6"],"发布者跟订阅者都不需要知道彼此的存在":["13.8"],"test":["13.9","15.5","24.10","25.7","25.32"],"触发":["13.9"],"得到的应该跟第一次创建的类一模一样的实例":["14.0"],"export导出的也是一个单例":["14.1"],"其它地方更改了模块中的某些值":["14.1"],"张三":["14.2"],"李四":["14.2"],"分离对象的实现与对象的创建":["14.3"],"hash等模式的创建":["14.4"],"也是基于工厂模式的思想":["14.4"],"工厂模式的优点":["14.5"],"解耦了类的实现与创建":["14.5"],"将一个复杂对象的构造层与表示层分离":["14.6"],"装配的人员不需要知道各个部件是怎么产生的":["14.7"],"他只需要按照要求组合不同的部件即可":["14.7"],"建造者模式的优点":["14.8"],"使用建造者模式可以":["14.8"],"使产品的构建流程和产品的表现分离":["14.8"],"访问者不必知道产品部件实现的细节":["14.8"],"扩展方便":["14.8"],"更好的复用性":["14.8"],"建造者模式将产品的创建算法和产品组成的实现分离":["14.8"],"从而控制对象的访问":["14.9"],"router路由跳转的拦截器":["14.10"],"前端框架的数据响应式":["14.10"],"else":["14.11","22.29","24.18"],"房租较低":["14.11"],"没有合适的房源":["14.11"],"这样来精简内存资源":["14.12"],"提升性能和效率":["14.12"],"引入了共享对象":["14.13"],"使对象结构变得复杂":["14.13"],"共享对象的创建":["14.13"],"状态一旦改变":["15.0"],"失败的回调":["15.1"],"我相信这点简单的代码大家都可以写出来":["15.1"],"那我们就来运行测试以下效果":["15.1"],"成功啦":["15.1"],"失败啦":["15.1"],"mypromise":["15.2"],"测试一下":["15.3"],"index":["15.5","24.8","25.4","25.14"],"scripts":["15.5"],"keywords":["15.5"],"author":["15.5","24.17"],"license":["15.5"],"isc":["15.5"],"devdependencies":["15.5"],"但是跑测试案例的时候会出现部分案例测试不通过":["15.6"],"最后借鉴别人的代码":["15.6"],"constructor存在于function的显式原型":["16.2"],"保存了指向function的一个引用":["16.2"],"ƒ":["16.2"],"那它也是function的实例":["16.3"],"也指向function的prototype":["16.3"],"object的隐式原型":["16.4"],"person1":["16.5"],"只要某个对象存在原型上":["16.7"],"proto":["16.8"],"博客主要记录一些学习的文章":["16.9","18.6"],"es6的let":["17.0"],"const出现才实现了块级作用域":["17.0"],"所有未定义直接赋值的变量拥有全局作用域":["17.1"],"拥有全局作用域":["17.2"],"所以在函数fn里面可以访问到a":["17.2"],"所以执行函数时":["17.2"],"b变量的定义在函数fn的作用域下":["17.2"],"在作用域外时不能访问到b的":["17.2"],"cannot":["17.3","20.19"],"access":["17.3"],"before":["17.3"],"initialization":["17.3"],"var":["17.3","25.12"],"如果重复声明同名变量会报错":["17.3"],"sum":["17.4"],"j":["17.5"],"以存储它们的值":["17.6"],"然后在函数中使用这些变量":["17.6"],"直至函数结束":["17.6"],"闭包中由于内部函数的原因":["17.6"],"销毁那些带标记的值并回收它们所占用的内存空间":["17.7"],"到目前为止":["17.7"],"ie9":["17.7"],"firefox":["17.7"],"opera":["17.7"],"则说明没有办法再访问这个值了":["17.8"],"因而就可以将其占用的内存空间回收回来":["17.8"],"时间轴等等功能":["18.0"],"以下就是我自己部署博客的一些心得":["18.0"],"md文档":["18.2"],"hello":["18.2"],"运行":["18.2","18.4","24.8","25.14"],"run":["18.2","24.16"],"package":["18.3"],"json":["18.3"],"主要注意这两个文件":["18.3"],"首页":["18.3"],"vuepress":["18.4"],"为每个页面预渲染生成静态的":["18.4"],"html":["18.4"],"同时在页面被加载的时候":["18.4"],"将作为":["18.4"],"spa":["18.4"],"footer":["18.4"],"juejin":["18.5"],"cn":["18.5"],"user":["18.5"],"3281394147006381":["18.5"],"auto标识自动生成":["18.5"],"每个文档都会根据标题生成目录":["18.5"],"也可以自己配置":["18.5"],"sidebar":["18.5"],"auto":["18.5"],"如果有什么不对的地方":["20.0"],"欢迎大家指出来":["20.0"],"还可以提供最新的和不断发展的javascript特性":["20.1"],"包括那些来自2015年的ecmascript和未来的提案中的特性":["20.1"],"比如异步功能和decorators":["20.1"],"js":["20.2"],"代码也是完全没有问题的":["20.2"],"后面学习一个就可以用一个":["20.2"],"不适用于小型项目":["20.2"],"有可能会增加开发成本":["20.2"],"因为在开发时会有很多的类型声明":["20.2"],"官方还提供了一个在线的学习网站":["20.3"],"unit":["20.4"],"声明变量而不赋值":["20.4"],"0b1010":["20.6"],"octalliteral":["20.6"],"is":["20.7"],"strarr":["20.8"],"string":["20.8"],"a":["20.8"],"字符串枚举":["20.10"],"应该尽量避免使用":["20.11"],"null":["20.12"],"unusable":["20.12"],"然而":["20.13"],"当你指定了":["20.13"],"strictnullchecks":["20.13"],"标记":["20.13"],"throw":["20.14"],"两种形式是等价的":["20.15"],"boolean":["20.16"],"我们定义了两个类型":["20.18"],"然后使用":["20.18"],"assign":["20.19"],"to":["20.19"],"because":["20.19"],"void":["20.20"],"你也不需要显式声明":["20.20"],"一样可以进行类型推断":["20.20"],"msg":["20.20"],"private":["20.21"],"protected":["20.21"],"email":["20.21"],"public":["20.21","24.8","25.4"],"conardli":["20.22"],"admin123":["20.22"],"表示一个":["20.24"],"typescript":["20.24"],"类型":["20.24"],"k":["20.24"],"key":["20.24"],"表示对象中的键类型":["20.24"],"如果不是":["20.27"],"就知道它是":["20.27"],"学习":["22.0"],"学个屁":["22.0"],"vite":["22.3"],"才能正常运行":["22.3"],"因为我们需要集成ts所以这里选择":["22.4"],"ts":["22.4"],"安装依赖":["22.4"],"export":["22.5"],"defineconfig":["22.5"],"plugins":["22.5","24.8","25.17","25.24","25.25","25.36"],"自动导入图标组件":["22.6"],"prefix":["22.6"],"icon":["22.6","25.33"],"dts":["22.6"],"自动引入组件":["22.6"],"dirs":["22.6"],"自动注册图标组件":["22.6"],"enabledcollections":["22.6"],"use":["22.7","25.11"],"mount":["22.7"],"到这里路由的基础配置已经完成了":["22.7"],"更多配置信息可以查看":["22.7"],"官方文档":["22.7"],"router4":["22.7"],"d":["22.8"],"actions":["22.9"],"store的基本使用":["22.9"],"views":["22.9"],"home":["22.9"],"tsx":["22.9"],"definecomponent":["22.9"],"setup":["22.9"],"imports":["22.10"],"components":["22.10"],"exclude":["22.10"],"modules":["22.10","25.32"],"references":["22.10"],"新特性composition":["22.11"],"可以使用":["22.12"],"torefs":["22.12"],"函数来完成此操作":["22.12"],"如果结构中存在没有的":["22.12"],"将不会为":["22.12"],"title":["22.12"],"创建一个":["22.12","22.15"],"ref":["22.12"],"import":["22.12"],"onerrorcaptured":["22.13"],"rendertracked":["22.13"],"onrendertracked":["22.13"],"rendertriggered":["22.13"],"onrendertriggered":["22.13"],"activated":["22.13"],"triggerref":["22.14"],"手动执行与":["22.14"],"关联的任何作用":["22.14"],"effect":["22.14"],"可以理解为强制更新dom":["22.14"],"customref":["22.14"],"创建一个自定义的":["22.14"],"proxy":["22.15"],"shallowreactive":["22.15"],"使其自身的":["22.15"],"转换":["22.15"],"响应性":["22.15"],"但不执行嵌套对象的深度":["22.15"],"val":["22.16"],"prevcount":["22.17"],"直接侦听一个":["22.17"],"element":["22.20"],"sapn":["22.20"],"我是v":["22.22"],"我是三目1":["22.22"],"我是box2":["22.26"],"box3":["22.26"],"trim":["22.27"],"class":["22.28"],"child":["22.29"],"甚至允许你直接在":["24.2"],"模块中":["24.2"],"可以为":["24.3"],"带来更多特性":["24.3"],"能够产生额外的任意文件":["24.3"],"的预处理函数":["24.3"],"为":["24.3"],"跳过":["24.4"],"改造上述loader":["24.5"],"xiaoming":["24.5"],"optios":["24.5"],"remainingrequest":["24.6"],"precedingrequest":["24.6"],"do":["24.6"],"somethings":["24.6"],"webpack":["24.6","25.14","25.28"],"会先从左到右执行":["24.6"],"链中的每个":["24.6"],"上的":["24.6"],"方法":["24.6"],"如果有":["24.6"],"然后再从右到左执行":["24.6"],"上的普通":["24.6"],"request":["24.7"],"absolutify":["24.7"],"返回一个绝对路径":["24.7"],"template":["24.8"],"mode":["24.8","25.33"],"development":["24.8"],"配置":["24.10"],"jpe":["24.10"],"g":["24.10"],"styleel":["24.11"],"document":["24.11"],"createelement":["24.11"],"动态创建style标签":["24.11"],"innerhtml":["24.11"],"将style标签内容设置为处理后的css代码":["24.11"],"head":["24.11"],"添加到head中生效":["24.11"],"script":["24.11","24.20"],"自身的事件钩子":["24.13"],"处理":["24.13"],"内部实例的特定数据":["24.13"],"asyncserieshook":["24.14"],"asyncseriesbailhook":["24.14"],"asyncseriesloophook":["24.14"],"asyncserieswaterfallhook":["24.14"],"hookmap":["24.14"],"打包的每一个文件都是一个模块":["24.15"],"chunks":["24.15"],"即是多个":["24.15"],"组成而来的一个代码块":["24.15"],"入口文件引入的资源组成一个":["24.15"],"通过代码分割的模块又是另外的":["24.15"],"assets":["24.15"],"可以访问本次打包生成所有文件的结果":["24.15"],"utils":["24.16"],"运行指令":["24.16"],"npm":["24.16"],"此时控制台输出以下内容":["24.16"],"ps":["24.16"],"users":["24.16"],"desktop":["24.16"],"source":["24.17"],"覆盖资源":["24.17"],"资源内容":["24.17"],"statsync":["24.18"],"判断是否是文件夹":["24.18"],"isdirectory":["24.18"],"是文件夹需要递归遍历删除下面所有文件":["24.18"],"不是文件夹就是文件":["24.18"],"直接删除":["24.18"],"size":["24.19"],"添加资源":["24.19"],"tags":["24.20"],"return":["24.20"],"tag":["24.20"],"tagname":["24.20"],"scriptname":["24.20"],"attributes":["24.20"],"我画了一个大概的图":["25.0"],"如下":["25.0"],"image":["25.0"],"下面配置文件":["25.1"],"babel":["25.1","25.24"],"直接运行":["25.3"],"dev":["25.4"],"server":["25.4"],"修改配置文件":["25.4"],"htmlwebpackplugin":["25.4"],"为模板创建文件":["25.4"],"新的html文件有两个特点":["25.4"],"把样式引入到页面中":["25.5"],"配置文件修改":["25.5"],"格式":["25.6"],"优点":["25.6"],"减少请求数量":["25.6"],"缺点":["25.6"],"体积变得更大":["25.6"],"exports":["25.7","25.23","25.36"],"加载器":["25.7","25.23"],"rules":["25.7","25.12"],"字体":["25.7","25.34"],"ttf":["25.7","25.34"],"woff2":["25.7","25.34"],"output":["25.8"],"命名规则":["25.9"],"hash值的前8位":["25.9"],"不然文件名太长了":["25.9"],"使用之前的文件扩展名":["25.9"],"options":["25.11","25.17"],"预设":["25.11"],"presets":["25.11","25.29"],"启用浏览器中全局变量":["25.12"],"parseroptions":["25.12"],"ecmaversion":["25.12"],"sourcetype":["25.12"],"no":["25.12"],"不能使用":["25.12"],"定义变量":["25.12"],"定义输出文件名和目录":["25.14"],"filename":["25.14"],"static":["25.14"],"npx":["25.14"],"打包":["25.14"],"所以我们可以这样设置":["25.15"],"last":["25.15"],"version":["25.15"],"not":["25.15"],"dead":["25.15"],"查看效果":["25.15"],"在":["25.15"],"查看优化":["25.16"],"因为有图片转为":["25.16"],"base64":["25.16"],"格式了":["25.16"],"css":["25.17"],"postcss":["25.17"],"postcssoptions":["25.17"],"打印环境变量":["25.18"],"减少代码体积等":["25.19"],"它清晰的提示了在":["25.20"],"中的第二行中出现了错误":["25.20"],"主要用于生产模式":["25.20"],"包含行":["25.20"],"列映射":["25.20"],"随便改变一下sum":["25.22"],"js中的值":["25.22"],"在控制台可以看到页面没有全部刷新":["25.22"],"只更新了":["25.22"],"module":["25.23","25.28","25.35","25.36"],"插件":["25.24","25.25","25.36"],"eslintwebpackplugin":["25.24","25.25"],"指定检查文件的根目录":["25.24"],"context":["25.24","25.26"],"开启babel编译缓存":["25.25"],"cachecompression":["25.25"],"缓存文件不要压缩":["25.25"],"开启缓存":["25.25","25.26"],"eslintplugin":["25.26"],"检测哪些文件":["25.26"],"默认值":["25.26"],"cache":["25.26"],"cachelocation":["25.26"],"已经默认开启了这个功能":["25.28"],"works":["25.29"],"threads":["25.29","25.30"],"进程数量":["25.29"],"preset":["25.29","25.37"],"env":["25.29","25.37"],"cachedirectory":["25.29"],"minimizer里面":["25.30"],"效果一样的":["25.30"],"cssminimizerplugin":["25.30"],"当生产模式会默认开启terserplugin":["25.30"],"但是我们需要进行其他配置":["25.30"],"就要重新写了":["25.30"],"terserplugin":["25.30"],"parallel":["25.30"],"开启多进程":["25.30"],"满足条件才会代码分割":["25.32"],"maxasyncrequests":["25.32"],"按需加载时并行加载的文件的最大数量":["25.32"],"maxinitialrequests":["25.32"],"入口js文件最大并行请求数量":["25.32"],"enforcesizethreshold":["25.32"],"超过50kb一定会单独打包":["25.32"],"此时会忽略minremainingsize":["25.32"],"cachegroups":["25.32"],"组":["25.32"],"哪些模块要打包到一个组":["25.32"],"defaultvendors":["25.32"],"组名":["25.32"],"node":["25.32"],"需要打包到一起的模块":["25.32"],"priority":["25.32"],"权重":["25.32"],"越大越高":["25.32"],"reuseexistingchunk":["25.32"],"如果当前":["25.32"],"chunk":["25.32"],"包含已从主":["25.32"],"bundle":["25.32"],"中拆分出的模块":["25.32"],"则它将被重用":["25.32"],"而不是生成新的模块":["25.32"],"其他没有写的配置会使用上面的默认值":["25.32"],"这里的minchunks权重更大":["25.32"],"iconfont":["25.33"],"bluetoothoff":["25.33"],"dnd":["25.33"],"camera":["25.33"],"添加之前的query参数":["25.34"],"图标":["25.34"],"视频":["25.34"],"mp4":["25.34"],"avi":["25.34"],"resource":["25.34"],"不变":["25.35"],"文件只保存文件的":["25.35"],"值和它们与文件关系":["25.35"],"整个文件体积就比较小":["25.35"],"所以变化重新请求的代价也小":["25.35"],"rel":["25.36"],"按需加载core":["25.37"],"js的polyfill":["25.37"],"usebuiltins":["25.37"],"usage":["25.37"],"这些选项帮助快速启用":["25.38"],"serviceworkers":["25.38"],"不允许遗留任何":["25.38"],"旧的":["25.38"]},{"0":["22.16"],"1":["9.9"],"2":["9.8","15.5","20.9"],"3":["0.11","20.23"],"4":["3.1","10.4","25.18"],"5":["0.9","1.8","17.3","20.4"],"6":["17.4","25.33"],"9":["17.4"],"10":["11.7","25.2","25.6"],"19":["17.4"],"20":["20.27"],"50":["5.5","9.17","9.18","9.22"],"55":["2.2"],"60":["1.8","9.14"],"100":["9.6","9.11","20.27"],"127":["24.16"],"138":["9.13"],"200":["9.18"],"250":["9.10"],"300":["9.6"],"500":["9.13"],"800":["9.13"],"1000":["1.8","7.12","17.5"],"1024":["25.6"],"1111":["15.3"],"2018":["18.4"],"2222":["15.3"],"2268":["0.9"],"3000":["25.4"],"3333":["15.3"],"4011":["24.16"],"9229":["24.16"],"72000":["2.6"],"更多的":["0.3"],"的事件可以查看":["0.3"],"mdn文档":["0.3"],"效果如下":["0.6","0.7","0.9"],"image":["0.6","9.5","9.6","9.8","9.9","9.10","9.11","9.18","9.22","9.25","13.2","15.1","15.3","15.5","22.6","24.6","24.8","24.15","24.16","25.3","25.9","25.14","25.15","25.16","25.18","25.22"],"png":["0.6","1.7","9.5","9.6","9.8","9.9","9.10","9.11","9.18","9.22","9.25","13.2","15.1","15.3","15.5","16.0","16.2","16.3","16.4","22.6","24.6","24.8","24.15","24.16","25.0","25.3","25.11","25.14","25.15","25.16","25.18","25.22"],"gif":["0.7","0.9","0.10","25.33"],"click":["0.8","5.3"],"至此":["0.8","22.10"],"文件拖拽跟input选取文件的事件都做好了":["0.8"],"下一步就是实现选中的文件预览以及读取文件":["0.8"],"文件不可读":["0.9"],"编码错误":["0.9"],"文件读取失败":["0.9"],"文件读取的进度":["0.9"],"因为是本地读取所以进度很快":["0.9"],"基本看不出来":["0.9"],"所以选择打印查看":["0.9"],"onprogress":["0.9"],"event":["0.9"],"console":["0.9","15.3"],"log":["0.9","15.3","17.5"],"loaded":["0.9"],"total":["0.9"],"gif动图做的比较粗糙":["0.9"],"大家可以自己实现看一下":["0.9"],"7b439738":["0.9"],"41fa":["0.9"],"935f":["0.9"],"24481fefbcb4":["0.9"],"32e82b10":["0.10"],"135e":["0.10"],"444f":["0.10"],"bc5b":["0.10"],"53b139225262":["0.10"],"50px":["0.11"],"200px":["0.11"],"opacity":["0.11"],"点击上传字体":["0.11"],"span":["0.11"],"博客主要记录一些学习的文章":["0.12","3.1","11.9","22.29"],"如有不足":["0.12","3.1","11.9","22.29"],"望大家指出":["0.12","3.1","11.9","16.9","22.29"],"谢谢":["0.12","2.7","3.1","6.14","11.9","16.9","18.6","22.29"],"指定文件名1":["1.2"],"removechild":["1.4","1.5","1.7"],"释放之前创建的url":["1.4"],"对象":["1.4","10.5"],"revokeobjecturl":["1.4"],"注意":["1.5","1.7","3.1"],"在":["1.5"],"api":["1.5","22.11"],"返回":["1.5"],"的时候需要在请求头中设置":["1.5"],"responsetype":["1.5"],"为":["1.5"],"也就不能进行鉴权":["1.6"],"无法知道下载的进度等问题":["1.6"],"浏览器可直接浏览的文件类型如txt":["1.7"],"jpg":["1.7"],"gif等不能通过此方法下载":["1.7"],"remove":["1.8"],"这里只是在某些特定场景为大家额外提供一种思路":["2.0"],"增加我们代码的可读性":["2.0"],"这样看起来是不是就简洁了很多":["2.1"],"result":["2.2"],"default":["2.3"],"接下来用几个例子让大家更加熟悉一点":["2.4"],"get":["2.5","22.14"],"department":["2.6"],"通信的相关知识吧":["3.0"],"childdata":["3.1"],"onsole":["3.1"],"输出":["3.1"],"进行跨域":["3.1"],"通信存在安全性问题":["3.1"],"因为所有具有相同名称的窗口都可以访问和修改":["3.1"],"服务器端转发":["3.1"],"可以将消息从一个iframe发送到服务器":["3.1"],"然后再由服务器将其转发到另一个iframe":["3.1"],"关于定时器的一些知识":["4.1"],"代码实现用了":["5.1"],"vue3":["5.1","22.10"],"startraffle":["5.3"],"开始抽奖":["5.3"],"value":["5.4","20.24","22.12"],"前3":["5.5"],"1加速转动":["5.5"],"最后的3":["5.5"],"1减速每次":["5.5"],"剩余的中间匀速":["5.5"],"replace":["6.1"],"匹配一个垂直制表符":["6.2"],"w":["6.2","9.13"],"匹配包括下划线的任何单词字符":["6.2"],"匹配任何非单词字符":["6.2"],"返回结果为false":["6.7"],"index":["6.11","25.15"],"while":["6.11","20.14"],"null":["6.11","13.9","16.4"],"需要注意的是":["7.2","9.5"],"ie9":["7.2"],"及更早的":["7.2"],"ie":["7.2"],"浏览器不支持向回调函数传递额外参数":["7.2"],"第一种语法":["7.2"],"在后续的调用不会重用同一个定时器编号":["7.3"],"但是不同的对象使用独立的编号池":["7.3"],"来删除它":["7.4"],"当定时器过期的时候":["7.6"],"将被传递给func指定函数的附加参数":["7.6"],"避免代码杂乱无章":["7.7"],"增强代码的可维护性":["7.7"],"导致定时器将会被立即执行":["7.11"],"time1":["7.12"],"没执行一次执行次数自增":["7.12"],"调用倒计时函数":["7.14"],"id":["7.15"],"剩下的setinterval":["7.15"],"id还会启动setinterval":["7.15"],"type":["8.0","24.9","24.10","25.7"],"multipart":["8.0"],"form":["8.0","8.1"],"data上送到文件服务器":["8.0"],"请求头要设置为":["8.1"],"cache":["8.1"],"control":["8.1"],"no":["8.1"],"不得不说":["8.1"],"活到老学到老":["8.1"],"每次接触新知识都是满满的动力":["8.1"],"这次我们的重点是":["9.0"],"因为当":["9.2"],"设置的宽高属性与初始比例不一致时会出现扭曲":["9.2"],"备选文案":["9.3"],"而不会显示出来":["9.3"],"️":["9.3"],"绘制一个矩形的边框":["9.4"],"clearrect":["9.4"],"widh":["9.4"],"清除指定的矩形区域":["9.4"],"然后这块区域会变得完全透明":["9.4"],"blue":["9.5"],"fill会自动closepath":["9.5"],"在绘制路径的时候选择不关闭路径":["9.5"],"这个时候会实现自封闭现象":["9.5"],"只针对fill":["9.5"],"stroke不生效":["9.5"],"圆弧半径":["9.6"],"居然还能画贝塞尔曲线":["9.6"],"不对不能画":["9.6"],"其实是我不想学":["9.6"],"想了解的去官网看文档啊":["9.6"],"red":["9.8","9.9"],"strokestyle":["9.9"],"stroke":["9.10"],"direction":["9.12"],"文本方向":["9.12"],"可能的值包括":["9.12"],"ltr":["9.12"],"rtl":["9.12"],"inherit":["9.12"],"fmt":["9.13"],"auto":["9.13","24.10"],"app":["9.13"],"f":["9.13"],"jpeg":["9.13"],"h":["9.13"],"设置图片源地址":["9.13"],"使用上一次的配置绘制一个矩形":["9.14"],"加载默认颜色配置":["9.14"],"使用加载的配置绘制一个矩形":["9.14"],"fillrect":["9.16"],"font":["9.18"],"48px":["9.18"],"serif":["9.18"],"filltext":["9.18"],"dy":["9.20"],"竖直方向的移动":["9.20"],"一步完成":["9.21"],"xor":["9.24"],"重叠部分会变成透明":["9.24"],"copy":["9.24"],"只有新图像会被保留":["9.24"],"其余的全部被清除":["9.24"],"变透明":["9.24"],"状态的一部分":["9.25"],"可以被保存起来":["9.25"],"如果我们在创建新裁切路径时想保留原来的裁切路径":["9.25"],"我们需要做的就是保存一下":["9.25"],"的状态":["9.25","9.27"],"裁切路径创建之后所有出现在它里面的东西才会画出来":["9.25"],"然后会绘制出":["9.25"],"颗随机位置分布":["9.25"],"经过缩放":["9.25"],"的三角形":["9.25"],"当然也只有在裁切路径里面的三角形才会绘制出来":["9.25"],"可以先恢复它":["9.27"],"然后重绘下一帧":["9.27"],"大家可以评论":["9.28"],"我在去总结":["9.28"],"的学习":["10.0","22.10"],"process":["10.1"],"nexttick":["10.1"],"object":["10.1","24.9"],"observe":["10.1"],"废弃":["10.1"],"mutationobserver":["10.1"],"重复3":["10.2"],"6步骤":["10.2"],"直至":["10.2"],"中的任务全部执行完毕":["10.2"],"第二个宏任务执行":["10.4"],"把promise的回调放入微任务队列":["10.4"],"的时候":["10.5"],"解释器都会先创建一个":["10.5"],"然后把剩下的":["10.5"],"函数中的操作放到":["10.5"],"回调函数中":["10.5"],"jim":["11.1"],"返回对象实例":["11.1"],"america":["11.4"],"basketball":["11.4"],"window":["11.5","11.6","25.22"],"addeventlistener":["11.5","11.6"],"scroll":["11.5","11.6"],"proto":["11.7"],"true":["11.7","18.5","20.14","22.6","24.9","24.20","25.4","25.29","25.37","25.38"],"静态resolve方法":["11.8","15.4"],"static":["11.8","15.4"],"常规resolve处理":["11.8","15.4"],"静态reject方法":["11.8","15.4"],"今天下午放学留下来背书":["11.9","13.10"],"老师给tom发送消息":["11.9","13.10"],"老师给jim发送消息":["11.9","13.6","13.10"],"vuepress部署博客":["12.1"],"会自然的想到使用这种方式解决是最优雅的":["13.1"],"但是实现或者使用的场景不同":["13.2"],"这两个设计模式最大的区别就在于需不需要第三方来辅助完成当前工作":["13.2"],"大家可以通过以下图片来看一下它们之间的区别":["13.2"],"catch":["13.5","24.18"],"e":["13.5","17.4","20.24","24.18"],"handleerror":["13.5"],"convert":["13.5"],"an":["13.5"],"like":["13.5"],"real":["13.5"],"list":["13.5"],"start":["13.5"],"ret":["13.5"],"new":["13.5","25.22","25.34"],"o":["13.9"],"init":["13.9"],"hello":["13.9"],"world":["13.9"],"变更后触发":["13.9"],"那么你再次获取就是更改后的值":["14.1"],"王五":["14.2"],"单列模式的优点":["14.2"],"一个类只存在一个实例":["14.2"],"减少内存的占用":["14.2"],"节约资源":["14.2"],"减少垃圾回收机制的压力":["14.2"],"缺点":["14.2","14.5","14.8","14.11"],"扩展性不好":["14.2"],"不需要直到类是怎么实现的":["14.5"],"只需要关心类的创建":["14.5"],"扩展性较好":["14.5"],"隔离了创建与实现的流程":["14.5"],"代码结构清晰":["14.5"],"增加了代码量":["14.5"],"系统的复杂性":["14.5"],"需要酌情使用":["14.5"],"所以产品创建的算法可以复用":["14.8"],"产品部件的实现也可以复用":["14.8"],"带来很大的灵活性":["14.8"],"产品之间的差异较大时复用性会大大降低":["14.8"],"产品之间的粒度较小时":["14.8"],"会额外增加一些不必要的结构":["14.8"],"这个价格你可以看一下其它的":["14.11"],"代理模式的优点":["14.11"],"保护目标对象":["14.11"],"扩展目标对象的功能":["14.11"],"使用不当增加了系统的复杂度":["14.11"],"需要考虑场景来使用":["14.11"],"销毁等需要维护":["14.13"],"带来额外的复杂度":["14.13"],"就不会再变":["15.0"],"p1":["15.1"],"失败啦111":["15.1"],"成功啦111":["15.1"],"结果":["15.1","15.3"],"报错了":["15.2"],"输出结果":["15.2"],"失败的回调":["15.2"],"我是promise":["15.3"],"最后执行npm":["15.5"],"run":["15.5","25.18","25.33"],"才最终实现":["15.6"],"关系图":["16.0","16.2","16.3","16.4"],"截图":["16.0","16.2","16.3","16.4"],"所以在外层访问b变量就会报错":["17.2"],"c变量没有定义直接赋值":["17.2"],"所以c变量变成了全局作用域下的变量":["17.2"],"所以在外部可以直接使用":["17.2"],"syntaxerror":["17.3"],"identifier":["17.3"],"has":["17.3","20.9"],"already":["17.3"],"been":["17.3"],"declared":["17.3"],"d":["17.4"],"外部函数的变量被内部函数引用":["17.6"],"如果不手动清除则无法释放":["17.6"],"从而会造成内存泄漏":["17.6"],"chrome":["17.7","24.16"],"safari的js实现使用的都是标记清除的垃圾回收策略或类似的策略":["17.7"],"只不过垃圾收集的时间间隔互不相同":["17.7"],"命令":["18.2"],"就可以通过本地访问我们的第一篇文档":["18.2"],"readme":["18.2"],"md":["18.2"],"配置文件":["18.3"],"mit":["18.4"],"licensed":["18.4"],"copyright":["18.4"],"present":["18.4"],"evan":["18.4"],"you":["18.4"],"timer":["18.5"],"评论插件的配置":["18.5"],"valineconfig":["18.5"],"appid":["18.5"],"your":["18.5"],"appkey":["18.5"],"网站logo":["18.5"],"是否开启搜索":["18.5"],"search":["18.5"],"以帮助建立健壮的组件":["20.1"],"需要编译":["20.2"],"项目越大消耗时间越长":["20.2"],"但是":["20.2"],"编译花费的那点时间跟后期排错的时间比起来不值一提":["20.2"],"playground":["20.3"],"来学习新的语法或新特性":["20.3"],"0o744":["20.6"],"b":["20.8"],"c":["20.8"],"source":["20.9","24.20"],"element":["20.9","20.24"],"s":["20.9"],"but":["20.9"],"target":["20.9"],"requires":["20.9"],"因为它会让我们的类型变得不确定":["20.11"],"不利于后期的维护":["20.11"],"只能赋值给":["20.13"],"void":["20.13"],"和它们各自":["20.13"],"infiniteloop":["20.14"],"至于使用哪个大多数情况下是凭个人喜好":["20.15"],"然而":["20.15"],"当你在typescript里使用jsx时":["20.15"],"只有":["20.15"],"语法断言是被允许的":["20.15"],"yes":["20.16"],"error":["20.16"],"创建了交叉类型":["20.18"],"这个类型同时拥有前两个类型的所有特性":["20.18"],"is":["20.19"],"a":["20.19"],"read":["20.19"],"only":["20.19"],"property":["20.19"],"string":["20.20"],"打印一些内容":["20.20"],"如果我们省略访问修饰符":["20.21"],"默认情况下属性都是":["20.21"],"和":["20.21","22.14","24.3","24.6"],"类也是可以":["20.21"],"extends":["20.21"],"的":["20.21"],"表示对象中的值类型":["20.24"],"表示元素类型":["20.24"],"p45":["20.25"],"return":["20.26","24.18","24.19"],"let":["20.27"],"bigtrain":["20.27"],"运行项目":["22.4"],"dev":["22.4","25.33"],"就可以看到这个界面啦":["22.4"],"配置完就可以在项目中使用":["22.5"],"ep":["22.6"],"include":["22.6"],"tsx":["22.6"],"autoinstall":["22.6"],"配置完":["22.6"],"大家应该可以看到根目录下新增了两个文件":["22.6"],"为了解决":["22.6"],"中的错误":["22.6"],"我们需要在":["22.6"],"tsconfig":["22.6"],"json":["22.6"],"中配置":["22.6"],"x":["22.7"],"支持":["22.7"],"typescript":["22.7"],"配置路由的类型是":["22.7"],"这里":["22.7"],"meta":["22.7"],"可以让我们有更多的发挥空间":["22.7"],"比如控制路由权限":["22.7"],"添加路由标题等等":["22.7"],"div":["22.9"],"p":["22.9"],"过多深入的使用":["22.9"],"推荐大家自己去pinia":["22.9"],"中文文档中查看":["22.9"],"我们的项目就建好了":["22.10"],"我们可以":["22.10"],"开心":["22.10"],"了":["22.10"],"from":["22.12"],"vue":["22.12","25.22"],"const":["22.12"],"onactivated":["22.13"],"deactivated":["22.13"],"ondeactivated":["22.13"],"js":["22.13"],"并对其依赖项跟踪和更新触发进行显式控制":["22.14"],"提供":["22.14"],"set":["22.14"],"可以自己定义":["22.14"],"的响应式操作":["22.14"],"shallowreadonly":["22.15"],"为只读":["22.15"],"但不执行嵌套对象的深度只读转换":["22.15"],"侦听多个源":["22.17"],"侦听器还可以使用数组以同时侦听多个源":["22.17"],"fooref":["22.17"],"barref":["22.17"],"foo":["22.17"],"bar":["22.17"],"prevfoo":["22.17"],"prevbar":["22.17"],"fontsize":["22.20"],"16px":["22.20"],"我是三目2":["22.22"],"stop":["22.26"],"我是box3":["22.26"],"我是title插槽":["22.28"],"我是default插槽":["22.28"],"onclick":["22.29"],"css":["24.2"],"文件":["24.2"],"生态系统提供更多能力":["24.3"],"用户现在可以更加灵活地引入细粒度逻辑":["24.3"],"例如":["24.3"],"压缩":["24.3"],"打包":["24.3","25.3","25.9"],"语言转译":["24.3"],"或编译":["24.3"],"更多其他特性":["24.3"],"getoptions":["24.5"],"npx":["24.5","24.8","25.4","25.9","25.11"],"查看效果":["24.5"],"在这个过程中如果任何":["24.6"],"有返回值":["24.6"],"则":["24.6"],"链被阻断":["24.6"],"会跳过后面所有的的":["24.6"],"直接进入上一个":["24.6"],"更多文档":["24.7"],"请查阅":["24.7"],"webpack":["24.7","25.9","25.11"],"官方":["24.7"],"文档":["24.7"],"可以在打包输出的文件中看到":["24.8"],"我们main":["24.8"],"js中的console":["24.8"],"已经清楚了":["24.8"],"properties":["24.9"],"presets":["24.9"],"array":["24.9"],"additionalproperties":["24.9"],"javascript":["24.10"],"解决图片重复打包问题":["24.10"],"loader是第一个loader":["24.11"],"由于return导致熔断":["24.11"],"所以其他loader不执行了":["24.11"],"不管是normal还是pitch":["24.11"],"module":["24.11","24.17","24.18","24.19","24.20"],"exports":["24.11","24.17","24.18","24.19","24.20","25.35"],"功能完成后调用":["24.13"],"提供的回调":["24.13"],"multihook":["24.14"],"还统一暴露了三个方法给插件":["24.14"],"用于注入不同类型的自定义构建行为":["24.14"],"tap":["24.14"],"可以注册同步钩子和异步钩子":["24.14"],"tapasync":["24.14"],"回调方式注册异步钩子":["24.14"],"tappromise":["24.14"],"promise":["24.14"],"方式注册异步钩子":["24.14"],"用于在":["24.15"],"编译模块阶段进行逻辑添加以及修改":["24.15"],"生命周期简图":["24.15"],"debugger":["24.16"],"listening":["24.16"],"on":["24.16"],"ws":["24.16"],"629ea097":["24.16"],"7b52":["24.16"],"93a7":["24.16"],"02f83c75c797":["24.16"],"for":["24.16"],"help":["24.16"],"see":["24.16"],"https":["24.16"],"nodejs":["24.16"],"org":["24.16"],"en":["24.16"],"docs":["24.16"],"inspecto":["24.16"],"打开":["24.16"],"浏览器":["24.16"],"f12":["24.16"],"打开浏览器调试控制台":["24.16"],"此时控制台会显示一个绿色的图标":["24.16"],"点击绿色的图标进入调试模式":["24.16"],"在需要调试代码处用":["24.16"],"打断点":["24.16"],"代码就会停止运行":["24.16"],"从而调试查看数据情况":["24.16"],"资源大小":["24.17"],"size":["24.17"],"unlinksync":["24.18"],"最后删除当前目录":["24.18"],"rmdirsync":["24.18"],"将产生的错误返回出去":["24.18"],"length":["24.19"],"innerhtml":["24.20"],"closetag":["24.20"],"eslint":["25.1"],"webpack等":["25.1"],"都是建立在项目根目录下":["25.1"],"没有报错就表示打包成功":["25.3"],"打包后的文件默认输出到dist目录下面":["25.3"],"内容和源文件一致":["25.4"],"自动引入打包生成的js等资源":["25.4"],"template":["25.4"],"开发服务器":["25.4"],"devserver":["25.4"],"host":["25.4"],"localhost":["25.4"],"启动服务器域名":["25.4"],"port":["25.4"],"启动服务器端口号":["25.4"],"open":["25.4"],"是否自动打开浏览器":["25.4"],"至此运行命令变为":["25.4"],"serve":["25.4"],"数组里面":["25.5"],"执行顺序是从右到左":["25.5"],"再次运行就能看到效果了":["25.5"],"parser":["25.6"],"dataurlcondition":["25.6"],"maxsize":["25.6"],"小于10kb的图片会被base64处理":["25.6"],"重启devserve":["25.6"],"就可以看到":["25.6"],"小于10kb的图片已经转为":["25.6"],"格式了":["25.6"],"mp4":["25.7"],"avi":["25.7"],"asset":["25.7"],"resource":["25.7"],"刷新页面就可以看到图标了":["25.7"],"添加之前的query参数":["25.9"],"运行":["25.9","25.32","25.33"],"查看输出的文件夹dist":["25.9"],"可以看到":["25.9"],"文件预期的按照我们设置的方式输出":["25.9"],"单独提取出来配置":["25.11"],"config":["25.11"],"再次运行":["25.11"],"经过babel转化后":["25.11"],"输出的文件":["25.11"],"把es6的语法都转化成了es6之前的语法了":["25.11"],"如果你是使用vs":["25.12"],"code的话":["25.12"],"可以配合vs":["25.12"],"code的eslint插件":["25.12"],"在没有编译之前就看到错误":["25.12"],"因为默认是检查所有的文件":["25.12"],"所以我们打包后的dist目录下的文件就会报错":["25.12"],"这时我们就需要配置":["25.12"],"eslintignore":["25.12"],"文件来忽略检查dist目录":["25.12"],"忽略dist目录下所有文件":["25.12"],"dist":["25.12"],"查看dist":["25.14"],"不难看出":["25.14"],"我们的css文件已经被打包成单独的文件了":["25.14"],"并且在打包输出的":["25.14"],"html":["25.14","25.15"],"中":["25.14"],"css文件也被使用link标签加载了":["25.14"],"中写一些存在兼容性的样式":["25.15"],"比如":["25.15","25.22"],"display":["25.15"],"flex":["25.15"],"打包看输出文件":["25.15"],"所以css文件看起来很多":["25.16"],"preset":["25.17"],"env":["25.17"],"能解决大多数样式兼容性问题":["25.17"],"测试一下":["25.18"],"打包编译速度更慢":["25.20"],"isproduction":["25.20"],"这一个文件":["25.22"],"这样的方式只能自己一个一个的添加":["25.22"],"十分的麻烦":["25.22"],"所以在实际项目中":["25.22"],"我们一般都是使用其它loader来实现的":["25.22"],"loaderopen":["25.22"],"in":["25.22"],"react":["25.22"],"rules":["25.23"],"默认值":["25.24"],"缓存目录":["25.25"],"cachelocation":["25.25"],"eslintcache":["25.25","25.26"],"开启多进程和设置进程数量":["25.26"],"parallel":["25.26"],"无需其他配置":["25.28"],"开启babel缓存":["25.29"],"cachecompression":["25.29"],"false":["25.29"],"关闭缓存文件压缩":["25.29"],"plugins":["25.29","25.34"],"减少代码体积":["25.29"],"我们定义的文件体积太小了":["25.32"],"所以要改打包的最小文件体积":["25.32"],"此时我们会发现生成":["25.32"],"个":["25.32"],"其中有一个就是提取的公共模块":["25.32"],"单入口代码分割":["25.32"],"回到我们之前的项目中进行配置":["25.32"],"其实一般使用的都是默认值":["25.32"],"压缩配置":["25.32","25.35"],"其他内容用默认配置即可":["25.32"],"减法计算":["25.33"],"就可以在开发服务器上测试了":["25.33"],"第一次点击按钮才回去加载":["25.33"],"插件":["25.34"],"提取css成单独文件":["25.34"],"minicssextractplugin":["25.34"],"定义输出文件名和目录":["25.34"],"optimization":["25.35"],"提取runtime文件":["25.35"],"runtimechunk":["25.35"],"name":["25.35"],"entrypoint":["25.35"],"runtime文件命名规则":["25.35"],"preload兼容性更好":["25.36"],"as":["25.36"],"script":["25.36"],"prefetch兼容性更差":["25.36"],"corejs":["25.37"],"version":["25.37"],"proposals":["25.37"],"clientsclaim":["25.38"],"skipwaiting":["25.38"]}]'},t={"0.0":{t:"实现思路",p:`1、利用H5的拖拽事件，获取到拖进我们特定区域的文件数据（或者通过input元素获取文件）。
2、通过FileReader对 ...`,l:"blogs/html/h5-drop.html",a:"实现思路"},"0.1":{t:"基础知识",p:"",l:"blogs/html/h5-drop.html#基础知识",a:"基础知识"},"0.2":{t:"1、拖拽事件",p:`主要用到的事件有：drop、dragenter、dragover、dragleave四个事件。

drop：当一个元素或是选 ...`,l:"blogs/html/h5-drop.html#_1、拖拽事件",a:"_1、拖拽事件"},"0.3":{t:"2、FileReader对象",p:"FileReader 对象允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用 File 或  ...",l:"blogs/html/h5-drop.html#_2、filereader对象",a:"_2、filereader对象"},"0.4":{t:"3、FileList对象",p:"FileList对象通常来自于&lt;input&gt;元素的files属性或者拖拽操作的元素的dataTransfer对象 ...",l:"blogs/html/h5-drop.html#_3、filelist对象",a:"_3、filelist对象"},"0.5":{t:"具体实现",p:"",l:"blogs/html/h5-drop.html#具体实现",a:"具体实现"},"0.6":{t:"1、定义拖拽文件的特定区域",p:`
样式文件放在最后

&lt;div class=&quot;main&quot;&gt;
  &lt;p class=&q ...`,l:"blogs/html/h5-drop.html#_1、定义拖拽文件的特定区域",a:"_1、定义拖拽文件的特定区域"},"0.7":{t:"2、拖拽文件事件-文件获取",p:`
这里有一个要点，就是拖拽事件需要阻止它的默认行为，不然不会触发后续的事件。

// 获取dom元素
let droptar ...`,l:"blogs/html/h5-drop.html#_2、拖拽文件事件-文件获取",a:"_2、拖拽文件事件-文件获取"},"0.8":{t:"3、还有点击上传（`input`）上传事件",p:`// 获取input元素
let fileInput = document.getElementById('fileInpu ...`,l:"blogs/html/h5-drop.html#_3、还有点击上传-input-上传事件",a:"_3、还有点击上传-input-上传事件"},"0.9":{t:"4、读取文件并实现上传文件预览",p:`
通过FileReader读取文件数据，把文件跟文件流分别保存在不同的数组中（方便预览文件删除），并且根据文件数组的下标给每 ...`,l:"blogs/html/h5-drop.html#_4、读取文件并实现上传文件预览",a:"_4、读取文件并实现上传文件预览"},"0.10":{t:"5、删除文件",p:`
利用事件委托的方法，给整个盒子添加click事件，通过对id的检验识别出当前需要删除的文件，目前因为是根据删除按钮的id判 ...`,l:"blogs/html/h5-drop.html#_5、删除文件",a:"_5、删除文件"},"0.11":{t:"css文件",p:`* {
  margin: 0px;
  padding: 0px;
}
/* 整体盒子 */
.main {
  widt ...`,l:"blogs/html/h5-drop.html#css文件",a:"css文件"},"0.12":{t:"总结",p:`

拖拽事件: dragenter、dragover、dragleave 和drop,在做文件拖拽上传的时候需要将drago ...`,l:"blogs/html/h5-drop.html#总结",a:"总结"},"1.0":{t:"前言〽️",p:"前端文件下载应该是一个老生常谈的问题了😆，这次主要是结合自己最近在项目中的实践和百度来的一些下载方式，如果有遗漏或者错误的 ...",l:"blogs/informal-essay/download.html",a:"前言〽️"},"1.1":{t:"1、a标签🥇",p:`a标签下载应该是目前大家用的最多的下载文件的方式了吧，毕竟它简单明了。
a标签分两种：直接a标签点击下载（download属 ...`,l:"blogs/informal-essay/download.html#_1、a标签🥇",a:"_1、a标签🥇"},"1.2":{t:"1.1、a标签的download✨✨✨",p:"download 属性是HTML5新增的属性，主要解决不能直接下载浏览器可以打开预览的文件的问题，例如：txt、png、jp ...",l:"blogs/informal-essay/download.html#_1-1、a标签的download✨✨✨",a:"_1-1、a标签的download✨✨✨"},"1.3":{t:"2、模拟a标签下载✨✨✨✨✨",p:`这里也没什么特别的，就是我们熟知的文件流转 blob/base64下载，只不过是为了方便整理才起的这个标题名🙇。
`,l:"blogs/informal-essay/download.html#_2、模拟a标签下载✨✨✨✨✨",a:"_2、模拟a标签下载✨✨✨✨✨"},"1.4":{t:"2.1、利用blob（URL.createObjectURL）👍",p:`利用 URL对象 的 createObjectURL 方法去读取文件流，然后通过 js 去模拟 a 标签点击来下载文件。
兼 ...`,l:"blogs/informal-essay/download.html#_2-1、利用blob-url-createobjecturl-👍",a:"_2-1、利用blob-url-createobjecturl-👍"},"1.5":{t:"2.2、使用base64（FileReader.readAsDataURL）👍",p:"readAsDataURL() 方法会异步读取指定的 Blob 或 File 对象，并在读取完成时，通过 onload 回调 ...",l:"blogs/informal-essay/download.html#_2-2、使用base64-filereader-readasdataurl-👍",a:"_2-2、使用base64-filereader-readasdataurl-👍"},"1.6":{t:"3、open/location.href✨",p:`应该是最简单直接的下载了吧，不过大部分时间都不能满足我们的需求，所以现在用的比较少了。
用法
window.open('do ...`,l:"blogs/informal-essay/download.html#_3、open-location-href✨",a:"_3、open-location-href✨"},"1.7":{t:"4、form表单✨✨",p:`应该是最传统的文件下载方式了吧，很多新特性都是在H5才出的，兼容性应该也是最好的。
实现方式也很简单，通过js动态创建for ...`,l:"blogs/informal-essay/download.html#_4、form表单✨✨",a:"_4、form表单✨✨"},"1.8":{t:"4、通过iframe下载✨✨✨",p:`iframe 下载文件跟 a 标签下载文件基本一致，同样不能下载浏览器可以浏览的文件。
说实话，iframe接触的比较少，如 ...`,l:"blogs/informal-essay/download.html#_4、通过iframe下载✨✨✨",a:"_4、通过iframe下载✨✨✨"},"1.9":{t:"结尾🔚",p:`本文主要是总结自己知道/用过的下载文件的方法，如果有什么不足或者错误之处，请大家及时指正🙏。

博客主要记录一些学习的文章 ...`,l:"blogs/informal-essay/download.html#结尾🔚",a:"结尾🔚"},"2.0":{t:"前言💁‍♂️",p:"相信大家或多或少都接触过拥有庞大 if else 的项目代码吧，多重嵌套的 if else 在维护的时候真的让人很恼火😡， ...",l:"blogs/informal-essay/if-else.html",a:"前言💁‍♂️"},"2.1":{t:"短路运算💻",p:`Javascript 的逻辑或 || 的短路运算有时候可以用来代替一些比较简单的 if else

逻辑或 || 的短路运算 ...`,l:"blogs/informal-essay/if-else.html#短路运算💻",a:"短路运算💻"},"2.2":{t:"三元运算符🎶",p:"三元运算符我觉得大家应该都很熟悉吧，很多时候简单的一些判断我们都可以使用三元运算符去替代 if else，这里只推荐 一层  ...",l:"blogs/informal-essay/if-else.html#三元运算符🎶",a:"三元运算符🎶"},"2.3":{t:"switch case🖥️",p:`上述的两种方式：短路运算跟三元运算虽然很好用，代码也很简洁，不过都只能用于简单的判断，遇到多重条件判断就不能使用了😭。
对 ...`,l:"blogs/informal-essay/if-else.html#switch-case🖥️",a:"switch-case🖥️"},"2.4":{t:"对象配置/策略模式📑",p:`对象配置看起来跟 策略模式 差不多，都是根据不同得参数使用不同得数据/算法/函数。😺
策略模式就是将一系列算法封装起来，并 ...`,l:"blogs/informal-essay/if-else.html#对象配置-策略模式📑",a:"对象配置-策略模式📑"},"2.5":{t:"案例1 商场促销价🙋",p:`根据不同的用户使用不同的折扣，如：普通用户不打折，普通会员用户9折，年费会员8.5折，超级会员8折。
使用if else实现 ...`,l:"blogs/informal-essay/if-else.html#案例1-商场促销价🙋",a:"案例1-商场促销价🙋"},"2.6":{t:"案例2 年终奖🏆",p:"公司的年终奖根据员工的工资基数和绩效等级来发放的。例如，绩效为A的人年终奖有4倍工资，绩效为B的有3倍，绩效为C的只有2倍。 ...",l:"blogs/informal-essay/if-else.html#案例2-年终奖🏆",a:"案例2-年终奖🏆"},"2.7":{t:"结尾🔚",p:`本文主要是向大家传递一种思想，我们有很多的方法去优化我们的代码，提高我们代码的可读性。
对if else并没有歧视的意思，只 ...`,l:"blogs/informal-essay/if-else.html#结尾🔚",a:"结尾🔚"},"3.0":{t:"前言",p:"iframe 想必大家都挺熟悉的了，就不多说了👍👍。写这篇文章的初衷主要是丰富自己的知识和解决遇到的问题。因为我基本上没 ...",l:"blogs/informal-essay/iframe.html",a:"前言"},"3.1":{t:"iframe通信的几种方式😶‍🌫️😶‍🌫️",p:`
URL 传参：父窗口可以通过在 iframe 的 src 属性后添加参数来向子窗口传递数据，子窗口可以通过 locatio ...`,l:"blogs/informal-essay/iframe.html#iframe通信的几种方式😶‍🌫️😶‍🌫️",a:"iframe通信的几种方式😶‍🌫️😶‍🌫️"},"4.0":{t:"# javascript",p:"",l:"blogs/informal-essay/index.html",a:"javascript"},"4.1":{t:"目录",p:`
关于前端下载的一些问题
减少if-else，提高代码可读性
iframe之间的通信
九宫格抽奖的简单实现
正则表达式的一些 ...`,l:"blogs/informal-essay/index.html#目录",a:"目录"},"5.0":{t:"前言",p:`对象说晚饭吃什么太难选择，问我能不能做一个九宫格抽奖来决定我们晚上吃什么，emmm😿。
既然对象都开口了，不做也不行啊，最 ...`,l:"blogs/informal-essay/luckyDraw9.html",a:"前言"},"5.1":{t:"前期构思",p:"首先是布局，这个比较简单，用弹性布局（flex）就足够了，抽奖盒子固定宽高，奖品项为盒子的1/3，超过换行就行，转动方向是这 ...",l:"blogs/informal-essay/luckyDraw9.html#前期构思",a:"前期构思"},"5.2":{t:"具体实现",p:"",l:"blogs/informal-essay/luckyDraw9.html#具体实现",a:"具体实现"},"5.3":{t:"1、布局📈",p:"布局采用弹性布局，利用 vue 的 v-for 动态生成九个 item ，select 样式是用来控制转动的时候当前选中的  ...",l:"blogs/informal-essay/luckyDraw9.html#_1、布局📈",a:"_1、布局📈"},"5.4":{t:"2、指定奖品🏆",p:`为每一个 item 添加单机事件 appoint(index)，传入参数为当前的索引值。

做成点击事件指定奖品主要是为了不 ...`,l:"blogs/informal-essay/luckyDraw9.html#_2、指定奖品🏆",a:"_2、指定奖品🏆"},"5.5":{t:"3、抽奖😳",p:`抽奖的具体实现：

利用定时器 setTimeout 控制转动速度speed
转动速度（speed）的规则为，通过圈数跟中奖 ...`,l:"blogs/informal-essay/luckyDraw9.html#_3、抽奖😳",a:"_3、抽奖😳"},"5.6":{t:"最终效果",p:`代码片段

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/informal-essay/luckyDraw9.html#最终效果",a:"最终效果"},"6.0":{t:" 1、什么是正则表达式",p:`正则表达式就是专门规定一个字符串中字符出现的规律的一套规则。
`,l:"blogs/informal-essay/regularExpression.html",a:"_1、什么是正则表达式"},"6.1":{t:"2、创建正则表达式的2种方法",p:`1.标准写法：使用new关键字创建 --- var 变量 = new RegExp('正则表达式', 'ig');
2.简写 ...`,l:"blogs/informal-essay/regularExpression.html#_2、创建正则表达式的2种方法",a:"_2、创建正则表达式的2种方法"},"6.2":{t:"3、正则表达式的基本语法",p:`


字符
描述




' \\ '
转义特殊字符


' ^ '
匹配字符串的开头


' $ '
匹配字符串的结尾


 ...`,l:"blogs/informal-essay/regularExpression.html#_3、正则表达式的基本语法",a:"_3、正则表达式的基本语法"},"6.3":{t:"4、何时使用正则表达式",p:"",l:"blogs/informal-essay/regularExpression.html#_4、何时使用正则表达式",a:"_4、何时使用正则表达式"},"6.4":{t:"1.验证字符串格式 --- 手机号验证、邮箱验证等。",p:"",l:"blogs/informal-essay/regularExpression.html#_1-验证字符串格式-手机号验证、邮箱验证等。",a:"_1-验证字符串格式-手机号验证、邮箱验证等。"},"6.5":{t:"2.查找敏感词 --- 弹幕敏感词等。",p:"",l:"blogs/informal-essay/regularExpression.html#_2-查找敏感词-弹幕敏感词等。",a:"_2-查找敏感词-弹幕敏感词等。"},"6.6":{t:"2.1 验证字符串",p:`
以下用reg表示正则表达式

`,l:"blogs/informal-essay/regularExpression.html#_2-1-验证字符串",a:"_2-1-验证字符串"},"6.7":{t:"2.1.1 res.test('字符串'); ",p:`（1）只要字符串格式满足正则表达式的规则就会返回true，否则返回false。
（2）缺点：只要字符串中含有符合规则的内容， ...`,l:"blogs/informal-essay/regularExpression.html#_2-1-1-res-test-字符串",a:"_2-1-1-res-test-字符串"},"6.8":{t:"2.2 查找敏感词",p:`
以下reg表示正则表达式

`,l:"blogs/informal-essay/regularExpression.html#_2-2-查找敏感词",a:"_2-2-查找敏感词"},"6.9":{t:"2.2.1 reg.search('敏感词');",p:`查找模式匹配,只要找到第一个匹配然后返回，如果字符串没有匹配，则返回null。
`,l:"blogs/informal-essay/regularExpression.html#_2-2-1-reg-search-敏感词",a:"_2-2-1-reg-search-敏感词"},"6.10":{t:"2.2.2 reg.match('敏感词')",p:`缺点：只能获得敏感词的内容，不能获得敏感词的位置。
`,l:"blogs/informal-essay/regularExpression.html#_2-2-2-reg-match-敏感词",a:"_2-2-2-reg-match-敏感词"},"6.11":{t:"2.2.3 reg.exec('字符串');",p:`缺点：如果只调用一次exec()函数，即使正则表达式后加了' g '，也只会获得第一个敏感词的内容和位置。
解决：如果想要获 ...`,l:"blogs/informal-essay/regularExpression.html#_2-2-3-reg-exec-字符串",a:"_2-2-3-reg-exec-字符串"},"6.12":{t:"2.2.4 reg.findall('敏感词');",p:`遍历匹配，可以获取字符串中所有匹配的字符串，返回一个列表。
`,l:"blogs/informal-essay/regularExpression.html#_2-2-4-reg-findall-敏感词",a:"_2-2-4-reg-findall-敏感词"},"6.13":{t:"2.3 零宽断言",p:`给指定位置添加一个限定条件，用来规定此位置之前或之后的字符必须满足限定条件才可以使正则表达式匹配成功。
// 示例1：数字三 ...`,l:"blogs/informal-essay/regularExpression.html#_2-3-零宽断言",a:"_2-3-零宽断言"},"6.14":{t:"总结",p:`
创建正则表达式有两种方法：new关键字创建跟字面量方法
验证字符串的方法是test()
查找字符串的方法有多个：searc ...`,l:"blogs/informal-essay/regularExpression.html#总结",a:"总结"},"7.0":{t:"1.window.setTimeout",p:`**setTimeout()**方法设置一个定时器，该定时器在定时器到期后执行一个函数或指定的一段代码。
`,l:"blogs/informal-essay/timer.html",a:"_1-window-settimeout"},"7.1":{t:"语法",p:"var timeoutID = setTimeout(function[, delay, arg1, arg2, ...]) ...",l:"blogs/informal-essay/timer.html#语法",a:"语法"},"7.2":{t:"参数",p:`

function
function是你想要在到期时间(delay毫秒)之后执行的函数。


code
这是一个可选语法， ...`,l:"blogs/informal-essay/timer.html#参数",a:"参数"},"7.3":{t:"返回值",p:`返回值timeoutID是一个正整数，表示定时器的编号。这个值可以传递给clearTimeout()来取消该定时器。
需要注 ...`,l:"blogs/informal-essay/timer.html#返回值",a:"返回值"},"7.4":{t:"2.window.setInterval",p:`setInterval() 方法重复调用一个函数或执行一个代码段，在每次调用之间具有固定的时间延迟。
**setInterv ...`,l:"blogs/informal-essay/timer.html#_2-window-setinterval",a:"_2-window-setinterval"},"7.5":{t:"语法",p:`var intervalID = setInterval(func, delay, [arg1, arg2, ...]);
 ...`,l:"blogs/informal-essay/timer.html#语法",a:"语法"},"7.6":{t:"参数",p:`

func
要重复调用的函数。 每经过指定 延迟 毫秒后执行的函数 。


code
这个语法是可选的，你可以传递一个字符 ...`,l:"blogs/informal-essay/timer.html#参数",a:"参数"},"7.7":{t:"返回值",p:"此返回值intervalID是一个非零数值，用来标识通过setInterval()创建的计时器，这个值可以用来作为clear ...",l:"blogs/informal-essay/timer.html#返回值",a:"返回值"},"7.8":{t:"3.实际延时比设定值更久的原因：",p:"",l:"blogs/informal-essay/timer.html#_3-实际延时比设定值更久的原因",a:"_3-实际延时比设定值更久的原因"},"7.9":{t:"最小延迟时间",p:"在浏览器中，setTimeout()/``setInterval()的每调用一次定时器的最小间隔是4ms，这通常是由于函数嵌 ...",l:"blogs/informal-essay/timer.html#最小延迟时间",a:"最小延迟时间"},"7.10":{t:"超时延迟",p:"除了&quot;最小延时&quot;之外，定时器仍然有可能因为当前页面（或者操作系统/浏览器本身）被其他任务占用导致延时。  ...",l:"blogs/informal-essay/timer.html#超时延迟",a:"超时延迟"},"7.11":{t:"最大延时值",p:"包括 IE, Chrome, Safari, Firefox 在内的浏览器其内部以32位带符号整数存储延时。这就会导致如果一 ...",l:"blogs/informal-essay/timer.html#最大延时值",a:"最大延时值"},"7.12":{t:"4.定时器的可靠性",p:"虽说定时器在大部分的情况下都是趋于稳定的，但是定时器在使用的时候也存在着一些误差，可以使用下列代码多测试几次，就会发现，每次 ...",l:"blogs/informal-essay/timer.html#_4-定时器的可靠性",a:"_4-定时器的可靠性"},"7.13":{t:"5.遇到的关于无法清除定时器的问题",p:"",l:"blogs/informal-essay/timer.html#_5-遇到的关于无法清除定时器的问题",a:"_5-遇到的关于无法清除定时器的问题"},"7.14":{t:"错误示范：",p:`// 定义时间
let time = 11
// 定义一个函数，实现倒计时功能
function countDown(){
 ...`,l:"blogs/informal-essay/timer.html#错误示范",a:"错误示范"},"7.15":{t:"改变过后的正确示范：",p:`// 定义时间
let time = 11
// 定义一个函数，实现倒计时功能
function countDown(){
 ...`,l:"blogs/informal-essay/timer.html#改变过后的正确示范",a:"改变过后的正确示范"},"7.16":{t:"参考链接",p:`js的执行机制
事件循环
MDN定时器

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/informal-essay/timer.html#参考链接",a:"参考链接"},"8.0":{t:"前言",p:`前几天在项目中遇到一个以前都没有接触过的问题，觉得很有意思记录一下
场景是这样的
我们项目中有一个语音上传（用的elment ...`,l:"blogs/javascript/base64ToFormData.html",a:"前言"},"8.1":{t:"实现",p:`
/*base64文件流*/
const base64String

// 处理base64文件流
function(bas ...`,l:"blogs/javascript/base64ToFormData.html#实现",a:"实现"},"9.0":{t:"前言",p:"怎么突然提到 canvas 呢❓其实是因为工作中有一个小需求，就是给特定的区域做水印😤，思来想去😎就选择使用 canva ...",l:"blogs/javascript/canvas.html",a:"前言"},"9.1":{t:"1、canvas 简介",p:"canvas 即画布的意思，是 HTML5 新增的元素🆕，主要用来绘制图形。它可以用来制作照片集或者制作简单(也不是那么简 ...",l:"blogs/javascript/canvas.html#_1、canvas-简介",a:"_1、canvas-简介"},"9.2":{t:"2、canvas的基本使用",p:"&lt;canvas id=&quot;canvas&quot; width=&quot;300&quot; height= ...",l:"blogs/javascript/canvas.html#_2、canvas的基本使用",a:"_2、canvas的基本使用"},"9.3":{t:"兼容性",p:"可以看得出来，现在流行的浏览器基本都支持 canvas 标签，只有 IE9 （IE应该没有人在用了吧🤢）之下的浏览器不支持 ...",l:"blogs/javascript/canvas.html#兼容性",a:"兼容性"},"9.4":{t:"使用canvas画一个简单的矩形",p:"&lt;canvas&gt; 会创建一个固定大小的画布，同时会公开一个或多个画笔(渲染上下文)，使用画笔来绘制和处理要展示的 ...",l:"blogs/javascript/canvas.html#使用canvas画一个简单的矩形",a:"使用canvas画一个简单的矩形"},"9.5":{t:"3、绘制路径（path）",p:`&lt;canvas&gt; 只支持一种原生的图形绘制：矩形。所有其他图形都至少需要生成一种路径 (path)🙀。

图形 ...`,l:"blogs/javascript/canvas.html#_3、绘制路径-path",a:"_3、绘制路径-path"},"9.6":{t:"4、绘制圆弧",p:`有两个方法可以绘制圆弧：
1、arc(x, y, r, startAngle, endAngle, anticlockwis ...`,l:"blogs/javascript/canvas.html#_4、绘制圆弧",a:"_4、绘制圆弧"},"9.7":{t:"5、线条",p:`线条有4个属性😲：
`,l:"blogs/javascript/canvas.html#_5、线条",a:"_5、线条"},"9.8":{t:"1、lineWidth（线宽）🤷‍♂️",p:`只能是正值，默认是 1.0。起始点和终点的连线为中心，上下各占线宽的一半。
let canvas = document.ge ...`,l:"blogs/javascript/canvas.html#_1、linewidth-线宽-🤷‍♂️",a:"_1、linewidth-线宽-🤷‍♂️"},"9.9":{t:"2、lineCap（线条末端样式）🤖",p:`
butt：线段末端以方形结束
round：线段末端以圆形结束
square：线段末端以方形结束，但是增加了一个宽度和线段相 ...`,l:"blogs/javascript/canvas.html#_2、linecap-线条末端样式-🤖",a:"_2、linecap-线条末端样式-🤖"},"9.10":{t:"3、lineJoin（线条与线条间接合处的样式）📚",p:`
round 通过填充一个额外的，圆心在相连部分末端的扇形，绘制拐角的形状。 圆角的半径是线段的宽度。
bevel 在相连部 ...`,l:"blogs/javascript/canvas.html#_3、linejoin-线条与线条间接合处的样式-📚",a:"_3、linejoin-线条与线条间接合处的样式-📚"},"9.11":{t:"4、虚线🫥",p:`用 setLineDash 方法和 lineDashOffset 属性来制定虚线样式。

setLineDash 方法接受一 ...`,l:"blogs/javascript/canvas.html#_4、虚线🫥",a:"_4、虚线🫥"},"9.12":{t:"6、文本绘制",p:`我为了做个水印学了这么多东西！！！🙀🙀
绘制文本的两种方法

fillText(text, x, y [, maxWid ...`,l:"blogs/javascript/canvas.html#_6、文本绘制",a:"_6、文本绘制"},"9.13":{t:"7、图片绘制📌",p:`其实这个我是不喜欢学的，但是想了下以后自己可以画一些😳...
绘制图片使用的是 drawImage() 方法，这个方法有九 ...`,l:"blogs/javascript/canvas.html#_7、图片绘制📌",a:"_7、图片绘制📌"},"9.14":{t:"8、状态",p:`Canvas 的状态就是当前画面应用的所有样式和变形的一个快照📷。
save 和 restore 方法是用来保存和恢复 c ...`,l:"blogs/javascript/canvas.html#_8、状态",a:"_8、状态"},"9.15":{t:"9、变形",p:"",l:"blogs/javascript/canvas.html#_9、变形",a:"_9、变形"},"9.16":{t:"9.1、translate",p:`用来移动 canvas 的原点到指定的位置。
translate(x, y)：接受两个参数。x 是左右偏移量，y 是上下偏移 ...`,l:"blogs/javascript/canvas.html#_9-1、translate",a:"_9-1、translate"},"9.17":{t:"9.2、rotate",p:`旋转坐标轴。
rotate(angle)：只接受一个参数：旋转的角度(angle)，它是顺时针方向的，以弧度为单位的值。

 ...`,l:"blogs/javascript/canvas.html#_9-2、rotate",a:"_9-2、rotate"},"9.18":{t:"9.3、scale",p:`增减图形在 canvas 中的像素数目，对形状，位图进行缩小或者放大。
scale(x, y)：x,y 分别是横轴和纵轴的缩 ...`,l:"blogs/javascript/canvas.html#_9-3、scale",a:"_9-3、scale"},"9.19":{t:"9.4、transform (变形矩阵)",p:"",l:"blogs/javascript/canvas.html#_9-4、transform-变形矩阵",a:"_9-4、transform-变形矩阵"},"9.20":{t:"`transform(a, b, c, d, e, f)`😳",p:`这个方法是将当前的变形矩阵乘上一个基于自身参数的矩阵，如下面的矩阵所示：
!image.png
如果任意一个参数是 Infi ...`,l:"blogs/javascript/canvas.html#transform-a-b-c-d-e-f-😳",a:"transform-a-b-c-d-e-f-😳"},"9.21":{t:"`setTransform(a, b, c, d, e, f)`😮",p:"这个方法会将当前的变形矩阵重置为单位矩阵，然后用相同的参数调用 transform方法。如果任意一个参数是无限大，那么变形矩 ...",l:"blogs/javascript/canvas.html#settransform-a-b-c-d-e-f-😮",a:"settransform-a-b-c-d-e-f-😮"},"9.22":{t:"`resetTransform()`🔃",p:`重置当前变形为单位矩阵，它和调用以下语句是一样的：ctx.setTransform(1, 0, 0, 1, 0, 0);
一 ...`,l:"blogs/javascript/canvas.html#resettransform-🔃",a:"resettransform-🔃"},"9.23":{t:"10、组合与裁剪",p:"",l:"blogs/javascript/canvas.html#_10、组合与裁剪",a:"_10、组合与裁剪"},"9.24":{t:"10.1、组合",p:"globalCompositeOperation = type 这个属性设定了在画新图形时采用的遮盖策略，其值是一个标识 1 ...",l:"blogs/javascript/canvas.html#_10-1、组合",a:"_10-1、组合"},"9.25":{t:"10.2、裁切路径",p:`裁切路径和普通的 canvas 图形差不多，不同的是它的作用是遮罩，用来隐藏不需要的部分。
clip() 将当前正在构建的路 ...`,l:"blogs/javascript/canvas.html#_10-2、裁切路径",a:"_10-2、裁切路径"},"9.26":{t:"10、动画",p:"",l:"blogs/javascript/canvas.html#_10、动画",a:"_10、动画"},"9.27":{t:"10.1、动画的基本步骤：",p:`你可以通过以下的步骤来画出一帧：

清空 canvas 除非接下来要画的内容会完全充满 canvas（例如背景图），否则你需 ...`,l:"blogs/javascript/canvas.html#_10-1、动画的基本步骤",a:"_10-1、动画的基本步骤"},"9.28":{t:"10.2、控制动画🦍",p:"在 canvas 上绘制内容是用 canvas 提供的或者自定义的方法，而通常，我们仅仅在脚本执行结束后才能看见结果，比如说 ...",l:"blogs/javascript/canvas.html#_10-2、控制动画🦍",a:"_10-2、控制动画🦍"},"9.29":{t:"参考",p:`MDN：canvas教程

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/javascript/canvas.html#参考",a:"参考"},"10.0":{t:"1、什么是EventLoop？",p:`
EvnetLoop是js的运行机制，也就是事件循环，我个人的理解就是为了使单线程的js在执行的时候不发生阻塞。
Event ...`,l:"blogs/javascript/event-loop.html",a:"_1、什么是eventloop"},"10.1":{t:"2、学习EventLoop前需要知道的一些知识",p:`

同步任务：在主线程上排队执行的任务。只有前一个任务执行完毕，才能执行后一个任务。


异步任务：不进入主线程、而进入任务 ...`,l:"blogs/javascript/event-loop.html#_2、学习eventloop前需要知道的一些知识",a:"_2、学习eventloop前需要知道的一些知识"},"10.2":{t:"3、EventLoop（事件循环）执行过程",p:`!image.png

具体过程可以理解为：



1、主线程执行全局同步代码，该过程可能产生一系列异步任务，这些异步任务分 ...`,l:"blogs/javascript/event-loop.html#_3、eventloop-事件循环-执行过程",a:"_3、eventloop-事件循环-执行过程"},"10.3":{t:"4、概念性的东西都说完了，做几个题目校验一下学习成果",p:"",l:"blogs/javascript/event-loop.html#_4、概念性的东西都说完了-做几个题目校验一下学习成果",a:"_4、概念性的东西都说完了-做几个题目校验一下学习成果"},"10.4":{t:"第一题",p:`console.log('javaScript start')

setTimeout(() =&gt; {
    con ...`,l:"blogs/javascript/event-loop.html#第一题",a:"第一题"},"10.5":{t:"第二题",p:`console.log('javaScript start')

async function fn1() {
    co ...`,l:"blogs/javascript/event-loop.html#第二题",a:"第二题"},"10.6":{t:"参考链接",p:`带你彻底弄懂EventLoop
看完一定懂的 Event Loop

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢 ...`,l:"blogs/javascript/event-loop.html#参考链接",a:"参考链接"},"11.0":{t:"1、手写instanceof",p:`
instanceof主要判断一个实例是否属于某种类型；
实现原理就是只要右边类型的prototype在左边实例的原型链上即 ...`,l:"blogs/javascript/handwrittenCode.html",a:"_1、手写instanceof"},"11.1":{t:"2、手写new关键词",p:`使用new关键词执行构造函数，主要过程为：

1、创建一个新对象；
2、将第一步的空对象链接到另一个对象（new操作符后面跟 ...`,l:"blogs/javascript/handwrittenCode.html#_2、手写new关键词",a:"_2、手写new关键词"},"11.2":{t:"3、手写call",p:`
改变函数的this指向
第一个参数为this要指向的对象，如果没有或者参数为undefined/null则默认指向wind ...`,l:"blogs/javascript/handwrittenCode.html#_3、手写call",a:"_3、手写call"},"11.3":{t:"4、手写apply",p:`
跟call基本是一样的，只是call的剩余参数是参数列表（call的参数需要一个一个在后面列举出来），而apply的第二个 ...`,l:"blogs/javascript/handwrittenCode.html#_4、手写apply",a:"_4、手写apply"},"11.4":{t:"5、手写bind",p:`
bind函数也改变this的指向
传入的函数不会立即执行，而是返回一个永久改变this指向的函数
参数传递跟call一样使 ...`,l:"blogs/javascript/handwrittenCode.html#_5、手写bind",a:"_5、手写bind"},"11.5":{t:"6、防抖",p:`
在事件触发的一段时间后执行该事件，如果这期间再次触发事件，则重新计时

function debounce(fn, del ...`,l:"blogs/javascript/handwrittenCode.html#_6、防抖",a:"_6、防抖"},"11.6":{t:"7、节流",p:`
事件在一定时间内只能触发一次

function throttle(fn, delay) {

    // 保存time ...`,l:"blogs/javascript/handwrittenCode.html#_7、节流",a:"_7、节流"},"11.7":{t:"8、深克隆",p:`

创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改到原对象；


使用JSON.stringify和JS ...`,l:"blogs/javascript/handwrittenCode.html#_8、深克隆",a:"_8、深克隆"},"11.8":{t:"9、手写promise",p:`

promise的出现是为了解决回调地狱、是一种异步编程的解决方案。


promise有三种状态:pending(等待态 ...`,l:"blogs/javascript/handwrittenCode.html#_9、手写promise",a:"_9、手写promise"},"11.9":{t:"10、发布订阅",p:`一种对象间一对多的依赖关系，当一个对象的状态发送改变时，所有依赖于它的对象都将得到状态改变的通知。
// 调度中心
clas ...`,l:"blogs/javascript/handwrittenCode.html#_10、发布订阅",a:"_10、发布订阅"},"12.0":{t:"# javascript",p:"",l:"blogs/javascript/index.html",a:"javascript"},"12.1":{t:"目录",p:`
上传文件base64流转formData
canvas基础
Event-Loop 一些手写的源码解析
观察者模式跟发布订阅 ...`,l:"blogs/javascript/index.html#目录",a:"目录"},"13.0":{t:"设计模式的概念",p:"",l:"blogs/javascript/observer-mode.html",a:"设计模式的概念"},"13.1":{t:"1、什么是设计模式",p:`
设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是 ...`,l:"blogs/javascript/observer-mode.html#_1、什么是设计模式",a:"_1、什么是设计模式"},"13.2":{t:"2、设计模式的原则",p:`

S – Single Responsibility Principle 单一职责原则

一个程序只做好一件事
如果功能过 ...`,l:"blogs/javascript/observer-mode.html#_2、设计模式的原则",a:"_2、设计模式的原则"},"13.3":{t:"观察者者模式",p:"",l:"blogs/javascript/observer-mode.html#观察者者模式",a:"观察者者模式"},"13.4":{t:"1、概念",p:`
发布-订阅模式其实是一种对象间一对多的依赖关系，当一个对象的状态发送改变时，所有依赖于它的对象都将得到状态改变的通知。

`,l:"blogs/javascript/observer-mode.html#_1、概念",a:"_1、概念"},"13.5":{t:"2、列子",p:`想必大家应该都经常会接触到这个模式，比如：

我们使用原生DOM事件绑定的时候

window.addEventListen ...`,l:"blogs/javascript/observer-mode.html#_2、列子",a:"_2、列子"},"13.6":{t:"3、自己实现一个简化版的evenetBus",p:`// 被观察者
class EventBus {
  constructor(topic) {
    this.topic ...`,l:"blogs/javascript/observer-mode.html#_3、自己实现一个简化版的evenetbus",a:"_3、自己实现一个简化版的evenetbus"},"13.7":{t:"发布-订阅模式",p:"",l:"blogs/javascript/observer-mode.html#发布-订阅模式",a:"发布-订阅模式"},"13.8":{t:"1、概念",p:`
相对于观察者模式，发布-订阅模式相对于观察者模式是面向调度中心编程的，他以调度中心为连接来管理发布者跟订阅者，发布者跟订阅 ...`,l:"blogs/javascript/observer-mode.html#_1、概念",a:"_1、概念"},"13.9":{t:"2、列子",p:`
Vue 响应式原理

class Dep {
  constructor() {
    // 观察者列表
    thi ...`,l:"blogs/javascript/observer-mode.html#_2、列子",a:"_2、列子"},"13.10":{t:"3、改写EventBus简化版，添加调度中心后",p:`// 调度中心
class PubSub {
  constructor() {
    this.subscribers  ...`,l:"blogs/javascript/observer-mode.html#_3、改写eventbus简化版-添加调度中心后",a:"_3、改写eventbus简化版-添加调度中心后"},"13.11":{t:"总结",p:`
观察者模式跟发布订阅者模式，都是为了实现一对多的依赖关系，都是为了实现一个状态的改变触发回调函数进行通知。
发布订阅者模式 ...`,l:"blogs/javascript/observer-mode.html#总结",a:"总结"},"13.12":{t:"参考资料",p:`
JavaScript设计模式与开发实践
设计模式


博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/javascript/observer-mode.html#参考资料",a:"参考资料"},"14.0":{t:"1、单例模式（Singleton Pattern）",p:`

又称为单体模式，顾名思义一个类只能存在一个实例。


当第二次用相同的类创建实例的时候，得到的应该跟第一次创建的类一模一 ...`,l:"blogs/javascript/observer-mode1.html",a:"_1、单例模式-singleton-pattern"},"14.1":{t:"1.1、列子",p:`

在项目中的全局loading其实就是单例模式，永远只会存在一个loading效果，而不会重复出现；


浏览器的wind ...`,l:"blogs/javascript/observer-mode1.html#_1-1、列子",a:"_1-1、列子"},"14.2":{t:"1.2、实现",p:`
普通单例模式实现

const SingleCase = (function() {

    // 存储单例
    l ...`,l:"blogs/javascript/observer-mode1.html#_1-2、实现",a:"_1-2、实现"},"14.3":{t:"2、工厂模式（Factory Pattern）",p:`
根据不同的输入值，返回不同的类；
分离对象的实现与对象的创建；

`,l:"blogs/javascript/observer-mode1.html#_2、工厂模式-factory-pattern",a:"_2、工厂模式-factory-pattern"},"14.4":{t:"2.1、列子",p:`
使用document.createElement创建DOM元素，就是使用工厂模式的思想实现的
vue-router的几种模 ...`,l:"blogs/javascript/observer-mode1.html#_2-1、列子",a:"_2-1、列子"},"14.5":{t:"2.2、实现",p:`class FactoryMode {

    constructor(type) {
        // 返回实例
  ...`,l:"blogs/javascript/observer-mode1.html#_2-2、实现",a:"_2-2、实现"},"14.6":{t:"3、建造者模式（Builder Pattern）",p:`

又称生成器模式，分步创建一个对象，允许按步骤构造一个复杂对象


构建过程可以采用不同的表示，将一个复杂对象的构造层与表 ...`,l:"blogs/javascript/observer-mode1.html#_3、建造者模式-builder-pattern",a:"_3、建造者模式-builder-pattern"},"14.7":{t:"3.1、例子",p:`
电脑工厂、汽车工厂类似与这种由多个部件组成的，各个部件由代理商或者外包给其它人员进行生产，最后自己来装配形成完整的产品，在 ...`,l:"blogs/javascript/observer-mode1.html#_3-1、例子",a:"_3-1、例子"},"14.8":{t:"3.2、实现",p:`
创建一个学生的对象，包含姓名、年龄、地址等信息，允许按步骤构造这个对象

// 建造者
class CarBuilder  ...`,l:"blogs/javascript/observer-mode1.html#_3-2、实现",a:"_3-2、实现"},"14.9":{t:"4、代理模式（Proxy Pattern）",p:`
又称委托模式，为目标对象创建一个访问对象，从而控制对象的访问

`,l:"blogs/javascript/observer-mode1.html#_4、代理模式-proxy-pattern",a:"_4、代理模式-proxy-pattern"},"14.10":{t:"4.1、列子",p:`

HTTP 相关的拦截器、vue-router、react-router路由跳转的拦截器


前端框架的数据响应式


`,l:"blogs/javascript/observer-mode1.html#_4-1、列子",a:"_4-1、列子"},"14.11":{t:"4.2、实现",p:`
一个房东有多套房子，他一个人想要租出去花费的时间跟精力会很大，于是他找了中介帮他把房子租出去，这个中介就相当于房东的代理
 ...`,l:"blogs/javascript/observer-mode1.html#_4-2、实现",a:"_4-2、实现"},"14.12":{t:"5、享元模式（Flyweight Pattern）",p:`

运用共享技术来有效地支持大量细粒度对象的复用，以减少创建的对象的数量；


如果系统中存在多个相同的对象，那么只需共享一 ...`,l:"blogs/javascript/observer-mode1.html#_5、享元模式-flyweight-pattern",a:"_5、享元模式-flyweight-pattern"},"14.13":{t:"5.1、列子",p:`

线程池、连接池


高考考场、驾校驾考车等，资源可以共享、共同使用的



优点：

减少了系统中的对象数量，提高了程序 ...`,l:"blogs/javascript/observer-mode1.html#_5-1、列子",a:"_5-1、列子"},"14.14":{t:"参考资料",p:`
JavaScript设计模式与开发实践
设计模式


博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/javascript/observer-mode1.html#参考资料",a:"参考资料"},"15.0":{t:"前言",p:`

学习promise原理以及自己实现一个promise的目的主要是为了更好的使用promise（ps：我是不会承认主要目的 ...`,l:"blogs/javascript/promise.html",a:"前言"},"15.1":{t:"1、实现promise对象(resolve， reject)",p:"promise是一个对象，对象里面有一系列变量跟方法，列如：状态（PromiseState）、执行后的值（PromiseRe ...",l:"blogs/javascript/promise.html#_1、实现promise对象-resolve-reject",a:"_1、实现promise对象-resolve-reject"},"15.2":{t:"2、如果使用过程中有throw怎么办",p:"如果在Promise中出现了throw的话，那就相当于执行了rejecte，这样我们就需要用到try-catch在执行回调的 ...",l:"blogs/javascript/promise.html#_2、如果使用过程中有throw怎么办",a:"_2、如果使用过程中有throw怎么办"},"15.3":{t:"3、实现then方法",p:`

then方法接受两个可选的参数，这两个参数必须是函数，两个参数分别代表两个回调函数：成功的回调跟失败的回调


当Pro ...`,l:"blogs/javascript/promise.html#_3、实现then方法",a:"_3、实现then方法"},"15.4":{t:"4、完整的代码",p:`class MyPromise {
  constructor(executor) {
    // 捕获执行器的代码错误
 ...`,l:"blogs/javascript/promise.html#_4、完整的代码",a:"_4、完整的代码"},"15.5":{t:"5、通过Promises/A+规范测试我们手写的promise",p:`
Promise是有多种规范的，除了 Promise A、promise A+ 还有 Promise/B，Promise/D ...`,l:"blogs/javascript/promise.html#_5、通过promises-a-规范测试我们手写的promise",a:"_5、通过promises-a-规范测试我们手写的promise"},"15.6":{t:"总结",p:`
promise的中文翻译是承诺，它就像它的名字一样，承诺它过一段时间会给你一个结果。
目前我们使用promise都是基于P ...`,l:"blogs/javascript/promise.html#总结",a:"总结"},"15.7":{t:"参考资料",p:`
Promises/A+规范
面试官：能说下promise实现异步的原理吗？


博客主要记录一些学习的文章，如有不足，望大 ...`,l:"blogs/javascript/promise.html#参考资料",a:"参考资料"},"16.0":{t:"1、什么是原型？",p:`
原型分为显式原型（prototype）和隐式原型（__proto__）；
显式原型（prototype）也称作构造函数的原 ...`,l:"blogs/javascript/prototype.html",a:"_1、什么是原型"},"16.1":{t:"2、函数与对象",p:"",l:"blogs/javascript/prototype.html#_2、函数与对象",a:"_2、函数与对象"},"16.2":{t:"1、函数",p:`
创建函数的两种方法：字面量跟new Function()，字面量方法的本质其实还是new Function()， 也就是说 ...`,l:"blogs/javascript/prototype.html#_1、函数",a:"_1、函数"},"16.3":{t:"2、对象",p:`
对象的创建方法：字面量、new Object、Object.create()、构造函数创建，跟函数一样，字面量方法的本质是 ...`,l:"blogs/javascript/prototype.html#_2、对象",a:"_2、对象"},"16.4":{t:"3、什么是原型链？",p:`
通俗的说原型链就是多个__proto__相连形成的一个有层级的 ' 依赖关系 ' ；
构造函数的原型对象（prototyp ...`,l:"blogs/javascript/prototype.html#_3、什么是原型链",a:"_3、什么是原型链"},"16.5":{t:"4、原型继承",p:`
实例可以使用来自构造函数的属性与方法，也就是继承了构造函数的属性与方法；
实例本身没有这个属性或者方法，那js会沿着原型链 ...`,l:"blogs/javascript/prototype.html#_4、原型继承",a:"_4、原型继承"},"16.6":{t:"5、原型相关的方法",p:"",l:"blogs/javascript/prototype.html#_5、原型相关的方法",a:"_5、原型相关的方法"},"16.7":{t:"1. Object.prtotype.isPrototype()方法",p:`判断一个对象是否是另外一个对象的原型，但是需要注意只要某个对象存在原型链上，就会返回true
function Person ...`,l:"blogs/javascript/prototype.html#_1-object-prtotype-isprototype-方法",a:"_1-object-prtotype-isprototype-方法"},"16.8":{t:"2. Object.setPrototypeOf()方法",p:`该方法接收两个参数，第一个是现有对象，第二个是新设置的原型对象，为现有对象设置原型，返回一个新对象。
var a = {x: ...`,l:"blogs/javascript/prototype.html#_2-object-setprototypeof-方法",a:"_2-object-setprototypeof-方法"},"16.9":{t:"3. instanceof方法",p:`判断一个对象是否在另一个对象的原型链上
function Person() {}
const person1 = new P ...`,l:"blogs/javascript/prototype.html#_3-instanceof方法",a:"_3-instanceof方法"},"17.0":{t:"1、什么是作用域？",p:`

作用域就是代码执行的环境，在程序运行时代码中的某些特定部分中变量、函数和对象的可访问性。


作用域分为全局作用域跟函数 ...`,l:"blogs/javascript/scope.html",a:"_1、什么是作用域"},"17.1":{t:"1.1 全局作用域",p:`

在任何地方都能访问到的对象称之为全局作用域；


window对象下的所有属性和方法都有全局作用域；


最外层定义的变 ...`,l:"blogs/javascript/scope.html#_1-1-全局作用域",a:"_1-1-全局作用域"},"17.2":{t:"1.2 函数作用域",p:`

定义函数时的花括号{}为函数作用域；


在函数作用域定义的变量、方法，在函数作用域外部无法访问；


var a =  ...`,l:"blogs/javascript/scope.html#_1-2-函数作用域",a:"_1-2-函数作用域"},"17.3":{t:"1.3 块级作用域",p:`

在 {}中的内容就被认为块级作用域；


只有使用let声明的变量、方法才具备块级作用域；


if块、while块、f ...`,l:"blogs/javascript/scope.html#_1-3-块级作用域",a:"_1-3-块级作用域"},"17.4":{t:"2、作用域链",p:`

各个作用域访问变量和方法的顺序；


当我们使用一个变量时，js会顺着作用域链一层一层的像上查找，直到最顶层的全局作用域 ...`,l:"blogs/javascript/scope.html#_2、作用域链",a:"_2、作用域链"},"17.5":{t:"3、闭包",p:"一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围）， 这样的 ...",l:"blogs/javascript/scope.html#_3、闭包",a:"_3、闭包"},"17.6":{t:"4、垃圾回收机制",p:`

浏览器的 Javascript 具有自动垃圾回收机制(GC:Garbage Collecation)，也就是说，执行环境 ...`,l:"blogs/javascript/scope.html#_4、垃圾回收机制",a:"_4、垃圾回收机制"},"17.7":{t:"1、标记清除",p:`

js中最常用的垃圾回收方式就是标记清除。当变量进入环境时，例如，在函数中声明一个变量，就将这个变量标记为“进入环境”。从 ...`,l:"blogs/javascript/scope.html#_1、标记清除",a:"_1、标记清除"},"17.8":{t:"2、引用计数",p:`
引用计数的含义是跟踪记录每个值被引用的次数。当声明了一个变量并将一个引用类型值赋给该变量时，则这个值的引用次数就是1。如果 ...`,l:"blogs/javascript/scope.html#_2、引用计数",a:"_2、引用计数"},"17.9":{t:"参考资料",p:`JavaScript高级程序设计（第4版） (豆瓣) (douban.com)

博客主要记录一些学习的文章，如有不足，望大 ...`,l:"blogs/javascript/scope.html#参考资料",a:"参考资料"},"18.0":{t:"前言",p:`作为一个前端怎么能没有属于自己的博客呢，但是平常忙于工作中，难以抽出很多时间去搭建自己的博客。
不知道大家有没有听说过vue ...`,l:"blogs/javascript/vuepressDeploy.html",a:"前言"},"18.1":{t:"预览",p:`个人博客的搭建主要是vuepress + reco主题

个人博客预览地址
vuepress官方文档
reco主题文档

`,l:"blogs/javascript/vuepressDeploy.html#预览",a:"预览"},"18.2":{t:"初始化",p:`
创建项目文件夹blog，并进行初始化

npm init -y


安装Vuepress

npm install -D  ...`,l:"blogs/javascript/vuepressDeploy.html#初始化",a:"初始化"},"18.3":{t:"目录结构",p:`官方推荐的目录结构，大家可以按照这个结构去构建
.
├── docs
│   ├── .vuepress (可选的)
│   ...`,l:"blogs/javascript/vuepressDeploy.html#目录结构",a:"目录结构"},"18.4":{t:"首页",p:`复制下面内容至docs/README.md文件下，home标识是否开启首页，也可以给标题、副标题设置null来禁用。
--- ...`,l:"blogs/javascript/vuepressDeploy.html#首页",a:"首页"},"18.5":{t:"配置文件",p:`docs/.vuepress/config.js，配置主题的导航栏、侧边栏、搜索、logo... 
可以参考下列文件的配置
 ...`,l:"blogs/javascript/vuepressDeploy.html#配置文件",a:"配置文件"},"18.6":{t:"部署",p:`
新建一个git仓库blog（仓库需要是public，不然pages需要收费）
在仓库的setting中找到pages，开启 ...`,l:"blogs/javascript/vuepressDeploy.html#部署",a:"部署"},"19.0":{t:"# typescript",p:"",l:"blogs/typeScript/index.html",a:"typescript"},"19.1":{t:"目录",p:`
typeScript基础学习

`,l:"blogs/typeScript/index.html#目录",a:"目录"},"20.0":{t:"前言",p:"都2022年了😎，我才开始学习 TypeScript，也不知道还能不能跟上时代的脚步，看来是舒适的工作环境让我逐渐失去了前 ...",l:"blogs/typeScript/ts.html",a:"前言"},"20.1":{t:"一、Typescript 简介",p:"从官网的描述来看，TypeScript 是 JavaScript 的超集，也就是说TypeScript拥有 JavaScri ...",l:"blogs/typeScript/ts.html#一、typescript-简介",a:"一、typescript-简介"},"20.2":{t:"1、Typescript 值得学吗？",p:`我想很多人都跟我一样存在这样的疑问吧，下面我列举几个我们需要学习 TypeScript 的理由📚

更好的开发体验，可以清 ...`,l:"blogs/typeScript/ts.html#_1、typescript-值得学吗",a:"_1、typescript-值得学吗"},"20.3":{t:"2、获取 TypeScript",p:`命令行的 TypeScript 编译器可以使用 Node.js 包来安装。
1.安装 TypeScript
npm inst ...`,l:"blogs/typeScript/ts.html#_2、获取-typescript",a:"_2、获取-typescript"},"20.4":{t:"二、TypeScript 中的基础类型",p:"在 TypeScript 中，我们可以在声明一个变量之后设置我们想要添加的类型 :type 🤖(我们一般称之为“类型注释” ...",l:"blogs/typeScript/ts.html#二、typescript-中的基础类型",a:"二、typescript-中的基础类型"},"20.5":{t:"1、布尔值（boolean）",p:`let isBoolean: boolean = false

`,l:"blogs/typeScript/ts.html#_1、布尔值-boolean",a:"_1、布尔值-boolean"},"20.6":{t:"2、数字（number）",p:`除了支持十进制和十六进制字面量，TypeScript还支持ECMAScript 2015中引入的二进制和八进制字面量。
le ...`,l:"blogs/typeScript/ts.html#_2、数字-number",a:"_2、数字-number"},"20.7":{t:"3、字符串(string)",p:`跟JavaScript一样，可以使用双引号（ &quot;）或单引号（'）表示字符串，也可以使用 模板字符串 。
let n ...`,l:"blogs/typeScript/ts.html#_3、字符串-string",a:"_3、字符串-string"},"20.8":{t:"4、数组(Array)",p:`TypeScript定义数组类型有两种方式

在元素类型后面接上 []，表示由此类型元素组成的一个数组

let numAr ...`,l:"blogs/typeScript/ts.html#_4、数组-array",a:"_4、数组-array"},"20.9":{t:"5、元组 Tuple",p:"元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。也就是初始化的时候类型和大小以及确定的，如果后续赋值类型 ...",l:"blogs/typeScript/ts.html#_5、元组-tuple",a:"_5、元组-tuple"},"20.10":{t:"6、枚举类型(enum)",p:"它是一种可以将多个常量分组为一个并附加一系列值的类型，使用枚举定义的常量称为枚举器列表，默认情况下，枚举器从零开始按顺序编号 ...",l:"blogs/typeScript/ts.html#_6、枚举类型-enum",a:"_6、枚举类型-enum"},"20.11":{t:"7、Any类型",p:"any类型可以是任意的一种类型。在不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查就可以使用any类型进行标 ...",l:"blogs/typeScript/ts.html#_7、any类型",a:"_7、any类型"},"20.12":{t:"8、Void类型",p:`void类型表示没有任何类型。 通常当一个函数没有返回值时，它的返回值类型是 void：
function warnUser ...`,l:"blogs/typeScript/ts.html#_8、void类型",a:"_8、void类型"},"20.13":{t:"9、Null 和 Undefined",p:`TypeScript里，undefined和null两者各自有自己的类型分别叫做undefined和null。
let u: ...`,l:"blogs/typeScript/ts.html#_9、null-和-undefined",a:"_9、null-和-undefined"},"20.14":{t:"10、Never",p:"never类型表示的是那些永不存在的值的类型。 例如， never类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或 ...",l:"blogs/typeScript/ts.html#_10、never",a:"_10、never"},"20.15":{t:"三、类型断言",p:"有时候你会遇到这样的情况，你会比TypeScript更了解某个值的详细信息。 通常这会发生在你清楚地知道一个实体具有比它现有 ...",l:"blogs/typeScript/ts.html#三、类型断言",a:"三、类型断言"},"20.16":{t:"四、类型推断",p:`如果变量有默认值的话，一般我们也不需要显式声明类型，TypeScript  会自动推断变量的类型（类型推断）：
let id ...`,l:"blogs/typeScript/ts.html#四、类型推断",a:"四、类型推断"},"20.17":{t:"五、 联合类型",p:`我们还可以将变量设置为联合类型（联合类型是可以分配多个类型的变量）：
let age: string | number;
a ...`,l:"blogs/typeScript/ts.html#五、-联合类型",a:"五、-联合类型"},"20.18":{t:"六、交叉类型",p:`交叉类型是将多个类型合并为一个类型。 这让我们可以把现有的多种类型叠加到一起成为一种类型，它包含了所需的所有类型的特性。
i ...`,l:"blogs/typeScript/ts.html#六、交叉类型",a:"六、交叉类型"},"20.19":{t:"七、TypeScript 中的接口",p:`接口定义了对象的外观：
interface Person {
  name: string;
  age: number;
 ...`,l:"blogs/typeScript/ts.html#七、typescript-中的接口",a:"七、typescript-中的接口"},"20.20":{t:"八、TypeScript 中的函数",p:`我们可以定义函数参数和返回值的类型：
// 定义一个名为 add 的函数，它接受两个类型为 number 的变量，并返回一个 ...`,l:"blogs/typeScript/ts.html#八、typescript-中的函数",a:"八、typescript-中的函数"},"20.21":{t:"九、TypeScript 中的类",p:`跟 JavaScript 一样，我们可以使用 class 关键字创建对象，并且可以定义类中每条数据的类型。
class Pe ...`,l:"blogs/typeScript/ts.html#九、typescript-中的类",a:"九、typescript-中的类"},"20.22":{t:"1、类的 interface",p:`可以通过接口来规定一个类它必须包含某些属性和方法：
interface HasFormatter {
  format(): ...`,l:"blogs/typeScript/ts.html#_1、类的-interface",a:"_1、类的-interface"},"20.23":{t:"2、把类当做接口使用",p:`类定义会创建两个东西：类的实例类型和一个构造函数。
class Point { 
    x: number;
    y: ...`,l:"blogs/typeScript/ts.html#_2、把类当做接口使用",a:"_2、把类当做接口使用"},"20.24":{t:"十、泛型",p:`泛型指的是在定义函数/接口/类型时，不预先指定具体的类型，而是在使用的时候在指定类型限制的一种特性。
function id ...`,l:"blogs/typeScript/ts.html#十、泛型",a:"十、泛型"},"20.25":{t:"1、泛型接口",p:`当我们不知道对象中的某个值是什么类型时，可以使用泛型来传递该类型：
interface Person&lt;T&gt; {
 ...`,l:"blogs/typeScript/ts.html#_1、泛型接口",a:"_1、泛型接口"},"20.26":{t:"2、泛型类",p:`泛型类看上去与泛型接口差不多。 泛型类使用（ &lt;&gt;）括起泛型类型，跟在类名后面。
class GenericNu ...`,l:"blogs/typeScript/ts.html#_2、泛型类",a:"_2、泛型类"},"20.27":{t:"十一、TypeScript 中的类型收窄",p:`在 TypeScript 中，变量可以从不太精确的类型转移到更精确的类型，这个过程称为类型收窄。
下面是一个简单的例子，展示 ...`,l:"blogs/typeScript/ts.html#十一、typescript-中的类型收窄",a:"十一、typescript-中的类型收窄"},"20.28":{t:"参考",p:`
https://www.typescriptlang.org/docs/


博客主要记录一些学习的文章，如有不足，望大家 ...`,l:"blogs/typeScript/ts.html#参考",a:"参考"},"21.0":{t:"# Vue",p:"",l:"blogs/vue/index.html",a:"vue"},"21.1":{t:"目录",p:`
vue3（tsx）-从搭建到实践

`,l:"blogs/vue/index.html#目录",a:"目录"},"22.0":{t:"!1.webp",p:"记得第一次写Vue3是在2021年了，一直没有很好静下心来好好梳理一下Vue3的知识。现在的项目也没用上，只能自己摸索学习啦 ...",l:"blogs/vue/vue3Tsx.html",a:"_1-webp"},"22.1":{t:"演示地址",p:`项目demo
git仓库
`,l:"blogs/vue/vue3Tsx.html#演示地址",a:"演示地址"},"22.2":{t:"学习前的准备",p:`一点点的Ts基础，一点点vue基础
`,l:"blogs/vue/vue3Tsx.html#学习前的准备",a:"学习前的准备"},"22.3":{t:"1、搭建项目",p:`
注意：在 Node.js版本 &gt;= 12 的环境下 vite 才能正常运行

`,l:"blogs/vue/vue3Tsx.html#_1、搭建项目",a:"_1、搭建项目"},"22.4":{t:"1.1、创建项目",p:`# npm 6.x
npm init vite@latest my-vue-app --template

# npm 7+ ...`,l:"blogs/vue/vue3Tsx.html#_1-1、创建项目",a:"_1-1、创建项目"},"22.5":{t:"1.2、安装vueJsx",p:`vite官方现在提供了官方的插件来支持在vue3中使用jsx/tsx啦，直接安装就行。
yarn add @vitejs/p ...`,l:"blogs/vue/vue3Tsx.html#_1-2、安装vuejsx",a:"_1-2、安装vuejsx"},"22.6":{t:"1.3、安装`Element Plus`",p:`# NPM
npm install element-plus --save

# Yarn
yarn add element ...`,l:"blogs/vue/vue3Tsx.html#_1-3、安装-element-plus",a:"_1-3、安装-element-plus"},"22.7":{t:"1.4、配置路由",p:`# 安装路由 yarn add vue-router@4

在 src 文件下新增 router 文件夹 =&gt; ind ...`,l:"blogs/vue/vue3Tsx.html#_1-4、配置路由",a:"_1-4、配置路由"},"22.8":{t:"1.5、安装sass",p:`这里我比较习惯用scss，所以安装一下sass
yarn add sass -D

`,l:"blogs/vue/vue3Tsx.html#_1-5、安装sass",a:"_1-5、安装sass"},"22.9":{t:"1.6、安装pinia",p:"如果你之前使用过 vuex 进行状态管理的话，那么 pinia 就是一个类似的插件。它是最新一代的轻量级状态管理插件。按照尤 ...",l:"blogs/vue/vue3Tsx.html#_1-6、安装pinia",a:"_1-6、安装pinia"},"22.10":{t:"1.7、vite的一些基础配置",p:`配置文件别名
// vite.config.ts

import path from 'path'
export defau ...`,l:"blogs/vue/vue3Tsx.html#_1-7、vite的一些基础配置",a:"_1-7、vite的一些基础配置"},"22.11":{t:"2、Vue3新特性",p:`对于Vue3的学习，我大部分都是看官方文档学习的，不得不说vue 的官方文档真的太 nice 啦。
主要是学习一下vue3新 ...`,l:"blogs/vue/vue3Tsx.html#_2、vue3新特性",a:"_2、vue3新特性"},"22.12":{t:"2.1、setup",p:`
setup() 函数是 vue3 的 Composition API 新特性的入口
setup 函数会在 beforeCr ...`,l:"blogs/vue/vue3Tsx.html#_2-1、setup",a:"_2-1、setup"},"22.13":{t:"2.2、生命周期",p:`你可以通过在生命周期钩子前面加上 “on” 来访问组件的生命周期钩子。
下表包含如何在 setup () 内部调用生命周期钩 ...`,l:"blogs/vue/vue3Tsx.html#_2-2、生命周期",a:"_2-2、生命周期"},"22.14":{t:"2.3、ref",p:`
接受一个内部值并返回一个响应式且可变的 ref 对象。ref 对象仅有一个 .value property，指向该内部值。 ...`,l:"blogs/vue/vue3Tsx.html#_2-3、ref",a:"_2-3、ref"},"22.15":{t:"2.4、reactive",p:`
返回对象的响应式副本
影响所有嵌套 property，将每个 property 都转换成proxy对象
直接解构的话会丢失 ...`,l:"blogs/vue/vue3Tsx.html#_2-4、reactive",a:"_2-4、reactive"},"22.16":{t:"2.5、computed",p:`
作用跟vue2无差异
接受一个 getter 函数，并根据 getter 的返回值返回一个不可变的响应式 ref 对象。
 ...`,l:"blogs/vue/vue3Tsx.html#_2-5、computed",a:"_2-5、computed"},"22.17":{t:"2.6、watchEffect，watch",p:`watchEffect

立即执行传入的一个函数，同时响应式追踪其依赖，并在其依赖变更时重新运行该函数。
自动收集依赖源，当 ...`,l:"blogs/vue/vue3Tsx.html#_2-6、watcheffect-watch",a:"_2-6、watcheffect-watch"},"22.18":{t:"3、jsx/tsx在 vue3 中的应用",p:"",l:"blogs/vue/vue3Tsx.html#_3、jsx-tsx在-vue3-中的应用",a:"_3、jsx-tsx在-vue3-中的应用"},"22.19":{t:"3.1、插值",p:"jsx/tsx 的插值与 vue 模板语法中的插值一样，支持有效的 Javascript表达式，比如：a + b, a || ...",l:"blogs/vue/vue3Tsx.html#_3-1、插值",a:"_3-1、插值"},"22.20":{t:"3.2、class与style 绑定",p:`class类名绑定有两种方式，使用模板字符串或者使用数组。

使用模板字符串两个类名之间使用空格隔开

// 模板字符串
& ...`,l:"blogs/vue/vue3Tsx.html#_3-2、class与style-绑定",a:"_3-2、class与style-绑定"},"22.21":{t:" ",p:"",l:"blogs/vue/vue3Tsx.html#",a:""},"22.22":{t:"3.3、条件渲染",p:`
jsx/tsx中只保留了 v-show指令，没有 v-if指令
使用 if/else和三目表达式都可以实现

   set ...`,l:"blogs/vue/vue3Tsx.html#_3-3、条件渲染",a:"_3-3、条件渲染"},"22.23":{t:" ",p:"",l:"blogs/vue/vue3Tsx.html#",a:""},"22.24":{t:"3.4、列表渲染",p:`同样，jsx/tsx 中也没有 v-for指令，需要渲染列表我们只需要使用Js 的数组方法 map 就可以了
setup() ...`,l:"blogs/vue/vue3Tsx.html#_3-4、列表渲染",a:"_3-4、列表渲染"},"22.25":{t:" ",p:"",l:"blogs/vue/vue3Tsx.html#",a:""},"22.26":{t:"3.5、事件处理",p:`

绑定事件使用的也是 单大括号 {}，不过事件绑定不是以 @为前缀了，而是改成了 on，例如：click 事件是 onCl ...`,l:"blogs/vue/vue3Tsx.html#_3-5、事件处理",a:"_3-5、事件处理"},"22.27":{t:"3.6、v-model",p:`jsx/tsx是支持v-model语法的
// 正常写法
&lt;input v-model=&quot;value&quo ...`,l:"blogs/vue/vue3Tsx.html#_3-6、v-model",a:"_3-6、v-model"},"22.28":{t:"3.7、slot插槽",p:`定义插槽
jsx/tsx中是没有 slot 标签的，定义插槽需要使用{}或者使用renderSlot函数
setup 函数默 ...`,l:"blogs/vue/vue3Tsx.html#_3-7、slot插槽",a:"_3-7、slot插槽"},"22.29":{t:"4、使用tsx实现递归组件-菜单",p:`主要功能就是根据路由信息自动取生成菜单
效果如下
!image.png
代码如下，如果需要控制权限啥的，自己在路由信息的me ...`,l:"blogs/vue/vue3Tsx.html#_4、使用tsx实现递归组件-菜单",a:"_4、使用tsx实现递归组件-菜单"},"23.0":{t:"# Webpack",p:"",l:"blogs/webpack/index.html",a:"webpack"},"23.1":{t:"目录",p:`
webpack5-基础配置优化篇
webpack5-原理篇

`,l:"blogs/webpack/index.html#目录",a:"目录"},"24.0":{t:"前言",p:`接上回，上一篇文章把webpack的基本配置跟一些优化都说过了，这篇文章就讲一下原理。
`,l:"blogs/webpack/webpack-principle.html",a:"前言"},"24.1":{t:"1、Loader",p:"",l:"blogs/webpack/webpack-principle.html#_1、loader",a:"_1、loader"},"24.2":{t:"1.1、 概念",p:"loader 用于对模块的源代码进行转换。loader 可以使你在 import 或 &quot;load(加载)&quot ...",l:"blogs/webpack/webpack-principle.html#_1-1、-概念",a:"_1-1、-概念"},"24.3":{t:"1.2、 loader的特性",p:`

loader 支持链式调用。链中的每个 loader 会将转换应用在已处理过的资源上。一组链式的 loader 将按照相 ...`,l:"blogs/webpack/webpack-principle.html#_1-2、-loader的特性",a:"_1-2、-loader的特性"},"24.4":{t:"1.3、 loader 执行顺序",p:`
根据配置文件中的enforce参数分类


pre： 前置 loader
normal： 普通 loader
inline ...`,l:"blogs/webpack/webpack-principle.html#_1-3、-loader-执行顺序",a:"_1-3、-loader-执行顺序"},"24.5":{t:"1.4、loader接收的参数",p:"loader 是导出为一个函数的 node 模块。该函数在 loader 转换资源的时候调用。给定的函数将调用 Loader ...",l:"blogs/webpack/webpack-principle.html#_1-4、loader接收的参数",a:"_1-4、loader接收的参数"},"24.6":{t:"1.5、loader分类",p:`
同步 loader

module.exports = function (content, map, meta) {
  ...`,l:"blogs/webpack/webpack-principle.html#_1-5、loader分类",a:"_1-5、loader分类"},"24.7":{t:"1.6、一些常用的loader API",p:`


方法名
含义
用法




this.async
异步回调 loader。返回 this.callback
const ...`,l:"blogs/webpack/webpack-principle.html#_1-6、一些常用的loader-api",a:"_1-6、一些常用的loader-api"},"24.8":{t:"1.7、clean-log-loader",p:`清楚js文件中的console.log(xxx)
clean-log-loader.js
module.exports =  ...`,l:"blogs/webpack/webpack-principle.html#_1-7、clean-log-loader",a:"_1-7、clean-log-loader"},"24.9":{t:"1.8、babel-loader",p:`作用：编译 js 代码，将 ES6+语法编译成 ES5-语法。

下载依赖

npm i @babel/core @babe ...`,l:"blogs/webpack/webpack-principle.html#_1-8、babel-loader",a:"_1-8、babel-loader"},"24.10":{t:"1.9、 手写 file-loader",p:`作用：将文件原封不动输出出去

下载包

npm i loader-utils -D


loaders/file-load ...`,l:"blogs/webpack/webpack-principle.html#_1-9、-手写-file-loader",a:"_1-9、-手写-file-loader"},"24.11":{t:"1.10、手写 style-loader",p:`作用：动态创建 style 标签，插入 js 中的样式代码，使样式生效。

loaders/style-loader.js
 ...`,l:"blogs/webpack/webpack-principle.html#_1-10、手写-style-loader",a:"_1-10、手写-style-loader"},"24.12":{t:"2、plugin",p:"",l:"blogs/webpack/webpack-principle.html#_2、plugin",a:"_2、plugin"},"24.13":{t:"2.1、概念",p:`插件是 webpack 的支柱功能。webpack 自身也是构建于，你在 webpack 配置中用到的相同的插件系统之上！
 ...`,l:"blogs/webpack/webpack-principle.html#_2-1、概念",a:"_2-1、概念"},"24.14":{t:"2.2、Plugin 工作原理",p:`
webpack 就像一条生产线，要经过一系列处理流程后才能将源文件转换成输出结果。 这条生产线上的每个处理流程的职责都是单 ...`,l:"blogs/webpack/webpack-principle.html#_2-2、plugin-工作原理",a:"_2-2、plugin-工作原理"},"24.15":{t:"2.4、Plugin 构建对象",p:`
Compiler

Compiler 模块是 webpack 的主要引擎，它通过 CLI 或者 Node API 传递的所 ...`,l:"blogs/webpack/webpack-principle.html#_2-4、plugin-构建对象",a:"_2-4、plugin-构建对象"},"24.16":{t:"2.5、开发一个插件",p:`最简单的插件

plugins/test-plugin.js

class TestPlugin {
  construct ...`,l:"blogs/webpack/webpack-principle.html#_2-5、开发一个插件",a:"_2-5、开发一个插件"},"24.17":{t:"2.6、BannerWebpackPlugin",p:`
作用：给打包输出文件添加注释。
开发思路:


需要打包输出前添加注释：需要使用 compiler.hooks.emit  ...`,l:"blogs/webpack/webpack-principle.html#_2-6、bannerwebpackplugin",a:"_2-6、bannerwebpackplugin"},"24.18":{t:"2.7、CleanWebpackPlugin",p:`
作用：在 webpack 打包输出前将上次打包内容清空。
开发思路：



如何在打包输出前执行？需要使用 compile ...`,l:"blogs/webpack/webpack-principle.html#_2-7、cleanwebpackplugin",a:"_2-7、cleanwebpackplugin"},"24.19":{t:"2.8、AnalyzeWebpackPlugin",p:`
作用：分析 webpack 打包资源大小，并输出分析文件。
开发思路:


在哪做? compiler.hooks.emi ...`,l:"blogs/webpack/webpack-principle.html#_2-8、analyzewebpackplugin",a:"_2-8、analyzewebpackplugin"},"24.20":{t:"2.8、InlineChunkWebpackPlugin",p:`
作用：webpack 打包生成的 runtime 文件太小了，额外发送请求性能不好，所以需要将其内联到 js 中，从而减少 ...`,l:"blogs/webpack/webpack-principle.html#_2-8、inlinechunkwebpackplugin",a:"_2-8、inlinechunkwebpackplugin"},"24.21":{t:"系列文章",p:`从0开始构建自己的webpack5知识体系（长篇文章）

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/webpack/webpack-principle.html#系列文章",a:"系列文章"},"25.0":{t:"1、前言",p:`不知道大家面试的时候有没有遇到过这种情况：
面试官问你：了解过webpack嘛，之前有没有做过webpack的配置或者优化？ ...`,l:"blogs/webpack/webpack5-basics.html",a:"_1、前言"},"25.1":{t:"2、基本配置",p:`首先初始化一下项目，并建立一下文件
现在的文件目录结构
my-webpack
    ├── src
    │   └── ...`,l:"blogs/webpack/webpack5-basics.html#_2、基本配置",a:"_2、基本配置"},"25.2":{t:"2.1、安装依赖",p:`在本地安装webpack跟webpack-cli

 npm i webpack webpack-cli -D
 
 //  ...`,l:"blogs/webpack/webpack5-basics.html#_2-1、安装依赖",a:"_2-1、安装依赖"},"25.3":{t:"2.2、使用webpack",p:`
开发模式

npx webpack ./src/main.js --mode=development


生产模式

np ...`,l:"blogs/webpack/webpack5-basics.html#_2-2、使用webpack",a:"_2-2、使用webpack"},"25.4":{t:"2.3、配置文件",p:`**在使用webpack之前先认识一下webpack的一些基本概念（五大核心概念）1.  entry（入口）
指示 Webp ...`,l:"blogs/webpack/webpack5-basics.html#_2-3、配置文件",a:"_2-3、配置文件"},"25.5":{t:"2.4、处理样式资源",p:"在src中新建一个style文件夹，然后新增一个index.css文件，随便在里面写一点样式，并在main.js中引用这个文 ...",l:"blogs/webpack/webpack5-basics.html#_2-4、处理样式资源",a:"_2-4、处理样式资源"},"25.6":{t:"2.5、处理图片、字体等资源",p:`过去在 Webpack4 时，我们处理图片资源通过 file-loader 和 url-loader 进行处理
现在 Web ...`,l:"blogs/webpack/webpack5-basics.html#_2-5、处理图片、字体等资源",a:"_2-5、处理图片、字体等资源"},"25.7":{t:"2.6、处理字体、视频、音频等资源",p:`1.添加字体、图标

在打开阿里巴巴矢量图标库open in new window下载喜欢的图标到本地
把字体文件放入fon ...`,l:"blogs/webpack/webpack5-basics.html#_2-6、处理字体、视频、音频等资源",a:"_2-6、处理字体、视频、音频等资源"},"25.8":{t:"2.7、自动清空打包目录",p:`只需要在输出配置clean: true就可以实现
修改配置文件
module.exports = {
    // ...
 ...`,l:"blogs/webpack/webpack5-basics.html#_2-7、自动清空打包目录",a:"_2-7、自动清空打包目录"},"25.9":{t:"2.8、修改输出资源的名称跟路径",p:`

现在的打包文件都是全部放在dist根目录下面的，看起来比较杂乱


我们需要把文件根据文件属性放到不同的目录下面


修 ...`,l:"blogs/webpack/webpack5-basics.html#_2-8、修改输出资源的名称跟路径",a:"_2-8、修改输出资源的名称跟路径"},"25.10":{t:"2.9、处理js（兼容性跟静态检查）",p:"",l:"blogs/webpack/webpack5-basics.html#_2-9、处理js-兼容性跟静态检查",a:"_2-9、处理js-兼容性跟静态检查"},"25.11":{t:"2.9.1、js兼容性处理",p:"浏览器对JavaScript的一些ES6语法兼容性不太好，所以我们需要借助Babel（JavaScript 编译器）来将ES ...",l:"blogs/webpack/webpack5-basics.html#_2-9-1、js兼容性处理",a:"_2-9-1、js兼容性处理"},"25.12":{t:"2.9.2、js的静态检查",p:`静态检查是为了统一代码风格，减少bug，节约开发时间。
安装Eslint
npm i eslint-webpack-plug ...`,l:"blogs/webpack/webpack5-basics.html#_2-9-2、js的静态检查",a:"_2-9-2、js的静态检查"},"25.13":{t:"2.10、处理css资源",p:"",l:"blogs/webpack/webpack5-basics.html#_2-10、处理css资源",a:"_2-10、处理css资源"},"25.14":{t:"2.10.1、提取css文件",p:`之前我们都是使用style-loader来处理css，它把css
打包到js中，在js文件加载的时候，创建一个style标签 ...`,l:"blogs/webpack/webpack5-basics.html#_2-10-1、提取css文件",a:"_2-10-1、提取css文件"},"25.15":{t:"2.10.2、css兼容性处理",p:`CSS3的一些新特性在有的浏览器中不兼容，需要添加后缀或者前缀才能生效。
下载依赖
npm i postcss-loader ...`,l:"blogs/webpack/webpack5-basics.html#_2-10-2、css兼容性处理",a:"_2-10-2、css兼容性处理"},"25.16":{t:"2.10.3、压缩CSS",p:`安装依赖
npm i css-minimizer-webpack-plugin -D

配置文件
const CssMini ...`,l:"blogs/webpack/webpack5-basics.html#_2-10-3、压缩css",a:"_2-10-3、压缩css"},"25.17":{t:"2.10.4、引入less或者sass",p:`less跟sass跟css一样不能被webpack识别，需要借助loader来编译
less比起sass要简单许多，只需要配 ...`,l:"blogs/webpack/webpack5-basics.html#_2-10-4、引入less或者sass",a:"_2-10-4、引入less或者sass"},"25.18":{t:"2.11、区分环境",p:`本地开发和部署线上，各自所看重的点是不一样的
本地环境：

不需要有输出文件，打包文件都在内存中
需要打印 debug 信息 ...`,l:"blogs/webpack/webpack5-basics.html#_2-11、区分环境",a:"_2-11、区分环境"},"25.19":{t:"3、优化配置",p:`在前面，我们已经把基本配置都配置好了，现在要对这些配置做一些优化，列如：提升打包构建速度、减少代码体积等
`,l:"blogs/webpack/webpack5-basics.html#_3、优化配置",a:"_3、优化配置"},"25.20":{t:"3.1、SourceMap",p:`SourceMap（源代码映射）是一个用来生成源代码与构建后代码一一映射的文件的方案。
它会生成一个 xxx.map 文件， ...`,l:"blogs/webpack/webpack5-basics.html#_3-1、sourcemap",a:"_3-1、sourcemap"},"25.21":{t:"3.2、提升打包构建速度",p:"",l:"blogs/webpack/webpack5-basics.html#_3-2、提升打包构建速度",a:"_3-2、提升打包构建速度"},"25.22":{t:"3.2.1、HotModuleReplacement（HMR/热模块替换）",p:"HotModuleReplacement（HMR/热模块替换）：在程序运行中，替换、添加或删除模块，而无需重新加载整个页面。 ...",l:"blogs/webpack/webpack5-basics.html#_3-2-1、hotmodulereplacement-hmr-热模块替换",a:"_3-2-1、hotmodulereplacement-hmr-热模块替换"},"25.23":{t:"3.2.2、OneOf",p:`打包时每个文件都会经过所有 loader 处理，虽然因为 test 正则原因实际没有处理上，但是都要过一遍。比较慢。
顾名思 ...`,l:"blogs/webpack/webpack5-basics.html#_3-2-2、oneof",a:"_3-2-2、oneof"},"25.24":{t:"3.2.3、Include/Exclude",p:"开发时我们需要使用第三方的库或插件，所有文件都下载到 node_modules 中了。而这些文件是不需要编译可以直接使用的。 ...",l:"blogs/webpack/webpack5-basics.html#_3-2-3、include-exclude",a:"_3-2-3、include-exclude"},"25.25":{t:"3.2.4、缓存（Cache）",p:`Cache，利用缓存可以大幅度提高构建速度，
每次打包时 js 文件都要经过 Eslint 检查 和 Babel 编译，速度 ...`,l:"blogs/webpack/webpack5-basics.html#_3-2-4、缓存-cache",a:"_3-2-4、缓存-cache"},"25.26":{t:"3.2.5、多进程（Thread）",p:`
如果项目规模较小或者打包速度还可以的话，不建议配置多进程，因为每一个进程开启和通信都需要耗费一定的时间（每个进程启动就有大 ...`,l:"blogs/webpack/webpack5-basics.html#_3-2-5、多进程-thread",a:"_3-2-5、多进程-thread"},"25.27":{t:"3.3、减少代码体积",p:"",l:"blogs/webpack/webpack5-basics.html#_3-3、减少代码体积",a:"_3-3、减少代码体积"},"25.28":{t:"3.3.1、Tree Shaking",p:`Tree Shaking 是一个术语，通常用于描述移除 JavaScript 中的没有使用上的代码。

注意：它依赖 ES  ...`,l:"blogs/webpack/webpack5-basics.html#_3-3-1、tree-shaking",a:"_3-3-1、tree-shaking"},"25.29":{t:"3.3.2、Babel",p:`
@babel/plugin-transform-runtime: 禁用了 Babel 自动对每个文件的 runtime 注 ...`,l:"blogs/webpack/webpack5-basics.html#_3-3-2、babel",a:"_3-3-2、babel"},"25.30":{t:"3.3.3、图片压缩（Image Minimizer）",p:`开发如果项目中引用了较多图片，那么图片体积会比较大，将来请求速度比较慢。
我们可以对图片进行压缩，减少图片体积。

注意：如 ...`,l:"blogs/webpack/webpack5-basics.html#_3-3-3、图片压缩-image-minimizer",a:"_3-3-3、图片压缩-image-minimizer"},"25.31":{t:"3.4、优化代码运行性能/体验",p:"",l:"blogs/webpack/webpack5-basics.html#_3-4、优化代码运行性能-体验",a:"_3-4、优化代码运行性能-体验"},"25.32":{t:"3.4.1、代码分割（Code Split）",p:"打包代码时会将所有 js 文件打包到一个文件中，体积太大了。我们如果只要渲染首页，就应该只加载首页的 js 文件，其他文件不 ...",l:"blogs/webpack/webpack5-basics.html#_3-4-1、代码分割-code-split",a:"_3-4-1、代码分割-code-split"},"25.33":{t:"3.4.2 按需加载",p:`1.新增count.js文件
export default function count(x, y) {
    retur ...`,l:"blogs/webpack/webpack5-basics.html#_3-4-2-按需加载",a:"_3-4-2-按需加载"},"25.34":{t:"3.4.3、统一命名",p:"webpack 文件指纹策略是将文件名后面加上 hash 值。例如我们在基础配置中用到的：filename: &quot;[ ...",l:"blogs/webpack/webpack5-basics.html#_3-4-3、统一命名",a:"_3-4-3、统一命名"},"25.35":{t:"3.4.4、runtime配置",p:`
问题：

当我们修改 math.js 文件再重新打包的时候，因为 contenthash 原因，math.js 文件 ha ...`,l:"blogs/webpack/webpack5-basics.html#_3-4-4、runtime配置",a:"_3-4-4、runtime配置"},"25.36":{t:"3.4.5、Preload / Prefetch",p:`
Preload：告诉浏览器立即加载资源。
Prefetch：告诉浏览器在空闲时才开始加载资源。

它们共同点：

都只会加 ...`,l:"blogs/webpack/webpack5-basics.html#_3-4-5、preload-prefetch",a:"_3-4-5、preload-prefetch"},"25.37":{t:"3.4.6、Core-js",p:`core-js 是专门用来做 ES6 以及以上 API 的 polyfill。
polyfill翻译过来叫做垫片/补丁。就是 ...`,l:"blogs/webpack/webpack5-basics.html#_3-4-6、core-js",a:"_3-4-6、core-js"},"25.38":{t:"3.4.7、PWA",p:`提供项目的离线体验，即在离线状态下也可以访问项目
安装依赖
npm i workbox-webpack-plugin -D
 ...`,l:"blogs/webpack/webpack5-basics.html#_3-4-7、pwa",a:"_3-4-7、pwa"},"25.39":{t:"系列文章",p:`webpack原理篇

博客主要记录一些学习的文章，如有不足，望大家指出，谢谢。

`,l:"blogs/webpack/webpack5-basics.html#系列文章",a:"系列文章"}},a={previewLength:62,buttonLabel:"Search",placeholder:"Search docs",allow:[],ignore:[]},s={INDEX_DATA:e,PREVIEW_LOOKUP:t,Options:a};export{s as default};
